[{"D:\\Projects\\scheduler\\src\\index.js":"1","D:\\Projects\\scheduler\\src\\App.js":"2","D:\\Projects\\scheduler\\src\\app\\store.js":"3","D:\\Projects\\scheduler\\src\\app\\types.js":"4","D:\\Projects\\scheduler\\src\\services\\firebase.js":"5","D:\\Projects\\scheduler\\src\\containers\\0.login\\loginSlice.js":"6","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\schedulerComponentSlice.js":"7","D:\\Projects\\scheduler\\src\\components\\Table\\tableSlice.js":"8","D:\\Projects\\scheduler\\src\\components\\sideNav\\sideNavSlice.js":"9","D:\\Projects\\scheduler\\src\\containers\\0.login\\index.js":"10","D:\\Projects\\scheduler\\src\\containers\\3.branch_mastefile\\index.js":"11","D:\\Projects\\scheduler\\src\\containers\\2.user_masterfile\\index.js":"12","D:\\Projects\\scheduler\\src\\containers\\1.grill_reservation\\index.js":"13","D:\\Projects\\scheduler\\src\\components\\backdrop\\index.js":"14","D:\\Projects\\scheduler\\src\\containers\\0.login\\styles.js":"15","D:\\Projects\\scheduler\\src\\containers\\styles.js":"16","D:\\Projects\\scheduler\\src\\components\\backdrop\\styles.js":"17","D:\\Projects\\scheduler\\src\\services\\collectionNames.js":"18","D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\menuData.js":"19","D:\\Projects\\scheduler\\src\\components\\Table\\index.js":"20","D:\\Projects\\scheduler\\src\\components\\sideNav\\index.js":"21","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\index.js":"22","D:\\Projects\\scheduler\\src\\components\\appBar\\index.js":"23","D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\styles.js":"24","D:\\Projects\\scheduler\\src\\components\\appBar\\appBarStyles.js":"25","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\identifyDateRange.js":"26","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\schedulerSchema.js":"27","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\formatDataSource.js":"28","D:\\Projects\\scheduler\\src\\components\\sideNav\\0.container\\index.js":"29","D:\\Projects\\scheduler\\src\\services\\index.js":"30","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipConfig.js":"31","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\types.js":"32","D:\\Projects\\scheduler\\src\\components\\sideNav\\0.container\\styles.js":"33","D:\\Projects\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\filteringPanel.js":"34","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\index.js":"35","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\updateData.js":"36","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\addData.js":"37","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\deleteData.js":"38","D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\index.js":"39","D:\\Projects\\scheduler\\src\\components\\sideNav\\1.banner\\index.js":"40","D:\\Projects\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\styles.js":"41","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlip.js":"42","D:\\Projects\\scheduler\\src\\components\\fields\\types.js":"43","D:\\Projects\\scheduler\\src\\components\\sideNav\\1.banner\\styles.js":"44","D:\\Projects\\scheduler\\src\\components\\fields\\index.js":"45","D:\\Projects\\scheduler\\src\\components\\fields\\dateTimePicker.js":"46","D:\\Projects\\scheduler\\src\\components\\fields\\dropdownList.js":"47","D:\\Projects\\scheduler\\src\\components\\fields\\chips.js":"48","D:\\Projects\\scheduler\\src\\components\\fields\\input.js":"49","D:\\Projects\\scheduler\\src\\components\\fields\\datePicker.js":"50","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\grillMenus.js":"51","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipSlice.js":"52","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderNoDate.js":"53","D:\\Projects\\scheduler\\src\\components\\print\\print.js":"54","D:\\Projects\\scheduler\\src\\components\\print\\styles.js":"55","D:\\Projects\\scheduler\\src\\components\\print\\ComponentToPrint.js":"56","D:\\Projects\\scheduler\\src\\components\\print\\index.js":"57","D:\\Projects\\scheduler\\src\\containers\\1.payment_transaction\\index.js":"58","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\index.js":"59","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\styles.js":"60","D:\\Projects\\scheduler\\src\\commonFunctions\\calculateSubTotal.js":"61","D:\\Projects\\scheduler\\src\\commonFunctions\\getAmount.js":"62","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\types.js":"63","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\paymentForm.js":"64","D:\\Projects\\scheduler\\src\\components\\dialog\\index.js":"65","D:\\Projects\\scheduler\\src\\components\\fields\\number.js":"66","D:\\Projects\\scheduler\\src\\containers\\4.dropdown_masterfile\\index.js":"67","D:\\Projects\\scheduler\\src\\components\\dropdowns\\index.js":"68","D:\\Projects\\scheduler\\src\\components\\dropdowns\\styles.js":"69","D:\\Projects\\scheduler\\src\\commonStyles\\index.js":"70","D:\\Projects\\scheduler\\src\\components\\dropdowns\\dropdown.js":"71","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\getData.js":"72","D:\\Projects\\scheduler\\src\\components\\dropdowns\\tags.js":"73","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\dropdowns.js":"74","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\dropdowns.js":"75"},{"size":927,"mtime":1612880302000,"results":"76","hashOfConfig":"77"},{"size":2697,"mtime":1615717883329,"results":"78","hashOfConfig":"77"},{"size":711,"mtime":1614531397389,"results":"79","hashOfConfig":"77"},{"size":250,"mtime":1614531346108,"results":"80","hashOfConfig":"77"},{"size":870,"mtime":1614849279470,"results":"81","hashOfConfig":"77"},{"size":733,"mtime":1612976544000,"results":"82","hashOfConfig":"77"},{"size":1513,"mtime":1614533720827,"results":"83","hashOfConfig":"77"},{"size":1364,"mtime":1615156811413,"results":"84","hashOfConfig":"77"},{"size":446,"mtime":1613208006000,"results":"85","hashOfConfig":"77"},{"size":2351,"mtime":1612974592000,"results":"86","hashOfConfig":"77"},{"size":2422,"mtime":1615718971432,"results":"87","hashOfConfig":"77"},{"size":1793,"mtime":1615719040846,"results":"88","hashOfConfig":"77"},{"size":1393,"mtime":1613306940000,"results":"89","hashOfConfig":"77"},{"size":252,"mtime":1613297674000,"results":"90","hashOfConfig":"77"},{"size":1166,"mtime":1612976302000,"results":"91","hashOfConfig":"77"},{"size":499,"mtime":1615211793220,"results":"92","hashOfConfig":"77"},{"size":253,"mtime":1613305496000,"results":"93","hashOfConfig":"77"},{"size":74,"mtime":1613230298000,"results":"94","hashOfConfig":"77"},{"size":1313,"mtime":1615718905812,"results":"95","hashOfConfig":"77"},{"size":2485,"mtime":1615714906435,"results":"96","hashOfConfig":"77"},{"size":61,"mtime":1612795178000,"results":"97","hashOfConfig":"77"},{"size":6256,"mtime":1616392884535,"results":"98","hashOfConfig":"77"},{"size":2826,"mtime":1615151749614,"results":"99","hashOfConfig":"77"},{"size":3052,"mtime":1613210042000,"results":"100","hashOfConfig":"77"},{"size":1828,"mtime":1615211864907,"results":"101","hashOfConfig":"77"},{"size":1038,"mtime":1612983962000,"results":"102","hashOfConfig":"77"},{"size":2960,"mtime":1614542621009,"results":"103","hashOfConfig":"77"},{"size":1699,"mtime":1614946103248,"results":"104","hashOfConfig":"77"},{"size":565,"mtime":1612968044000,"results":"105","hashOfConfig":"77"},{"size":251,"mtime":1615732764755,"results":"106","hashOfConfig":"77"},{"size":6157,"mtime":1616392500103,"results":"107","hashOfConfig":"77"},{"size":2423,"mtime":1615113706748,"results":"108","hashOfConfig":"77"},{"size":852,"mtime":1613221936000,"results":"109","hashOfConfig":"77"},{"size":8179,"mtime":1614946939270,"results":"110","hashOfConfig":"77"},{"size":63,"mtime":1611396980000,"results":"111","hashOfConfig":"77"},{"size":235,"mtime":1615691192828,"results":"112","hashOfConfig":"77"},{"size":366,"mtime":1616084168395,"results":"113","hashOfConfig":"77"},{"size":431,"mtime":1616088151541,"results":"114","hashOfConfig":"77"},{"size":1635,"mtime":1613209706000,"results":"115","hashOfConfig":"77"},{"size":297,"mtime":1612795910000,"results":"116","hashOfConfig":"77"},{"size":567,"mtime":1612887668000,"results":"117","hashOfConfig":"77"},{"size":2811,"mtime":1616384325740,"results":"118","hashOfConfig":"77"},{"size":335,"mtime":1615146832537,"results":"119","hashOfConfig":"77"},{"size":454,"mtime":1612976482000,"results":"120","hashOfConfig":"77"},{"size":4217,"mtime":1615769387474,"results":"121","hashOfConfig":"77"},{"size":449,"mtime":1614528493632,"results":"122","hashOfConfig":"77"},{"size":465,"mtime":1611594656000,"results":"123","hashOfConfig":"77"},{"size":595,"mtime":1611677782000,"results":"124","hashOfConfig":"77"},{"size":418,"mtime":1615968284662,"results":"125","hashOfConfig":"77"},{"size":356,"mtime":1614528130337,"results":"126","hashOfConfig":"77"},{"size":1817,"mtime":1615134628726,"results":"127","hashOfConfig":"77"},{"size":1063,"mtime":1615105674134,"results":"128","hashOfConfig":"77"},{"size":644,"mtime":1615104426470,"results":"129","hashOfConfig":"77"},{"size":555,"mtime":1614854407309,"results":"130","hashOfConfig":"77"},{"size":880,"mtime":1614953733776,"results":"131","hashOfConfig":"77"},{"size":144,"mtime":1614854336491,"results":"132","hashOfConfig":"77"},{"size":5257,"mtime":1615107011094,"results":"133","hashOfConfig":"77"},{"size":6499,"mtime":1615715678276,"results":"134","hashOfConfig":"77"},{"size":6874,"mtime":1616398179839,"results":"135","hashOfConfig":"77"},{"size":1032,"mtime":1615147674984,"results":"136","hashOfConfig":"77"},{"size":328,"mtime":1615134622548,"results":"137","hashOfConfig":"77"},{"size":252,"mtime":1615135473307,"results":"138","hashOfConfig":"77"},{"size":462,"mtime":1615151868401,"results":"139","hashOfConfig":"77"},{"size":5567,"mtime":1616398312599,"results":"140","hashOfConfig":"77"},{"size":2144,"mtime":1615222192245,"results":"141","hashOfConfig":"77"},{"size":393,"mtime":1615146808683,"results":"142","hashOfConfig":"77"},{"size":1121,"mtime":1615727139446,"results":"143","hashOfConfig":"77"},{"size":3001,"mtime":1616161685097,"results":"144","hashOfConfig":"77"},{"size":1678,"mtime":1616087170599,"results":"145","hashOfConfig":"77"},{"size":333,"mtime":1615729383851,"results":"146","hashOfConfig":"77"},{"size":4137,"mtime":1616088522272,"results":"147","hashOfConfig":"77"},{"size":1073,"mtime":1615777965131,"results":"148","hashOfConfig":"77"},{"size":108,"mtime":1615777034933,"results":"149","hashOfConfig":"77"},{"size":1601,"mtime":1616390287157,"results":"150","hashOfConfig":"77"},{"size":1266,"mtime":1616398107161,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1rt2g1r",{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"154"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"154"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"154"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"154"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"154"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"154"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"154"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"154"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"154"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"154"},"D:\\Projects\\scheduler\\src\\index.js",[],["336","337"],"D:\\Projects\\scheduler\\src\\App.js",["338","339"],"import React, { useState, useEffect } from 'react'\nimport GrillReservation from 'containers/1.grill_reservation'\nimport UserMasterfile from 'containers/2.user_masterfile'\nimport BranchMasterfile from 'containers/3.branch_mastefile'\nimport Login from 'containers/0.login'\nimport { auth } from 'services/firebase'\nimport { useDispatch } from 'react-redux'\nimport { setAccountInfo } from 'containers/0.login/loginSlice'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Backdrop from 'components/backdrop'\nimport PaymentTransaction from 'containers/1.payment_transaction'\nimport 'antd/dist/antd.css'\nimport DropdownMasterfile from 'containers/4.dropdown_masterfile'\n\nfunction App () {\n  const dispatch = useDispatch()\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    setIsLoading(true)\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        const uid = user.uid\n        dispatch(setAccountInfo(user))\n        setIsLoggedIn(true)\n        setIsLoading(false)\n        // ...\n      } else {\n        // User is signed out\n        // ...\n        setIsLoggedIn(false)\n        setIsLoading(false)\n      }\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n\n  const Routing = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <GrillReservation />\n          </Route>\n          <Route path='/dashboard/grillReservation'>\n            <GrillReservation />\n          </Route>\n          <Route path='/dashboard/paymentTransaction'>\n            <PaymentTransaction />\n          </Route>\n          <Route path='/masterData/userMasterFile'>\n            <UserMasterfile />\n          </Route>\n          <Route path='/masterData/branchMasterFile'>\n            <BranchMasterfile />\n          </Route>\n          <Route path='/masterData/dropdownMasterfile'>\n            <DropdownMasterfile />\n          </Route>\n          <Route path='*'>\n            <div>Invalid url</div>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n\n  const UnAuthenticatedRouting = () => {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Login />\n          </Route>\n          <Route path='*'>\n            <div>Invalid url</div>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n  const renderIfVerified = isLoggedIn ? <Routing /> : <UnAuthenticatedRouting />\n  return isLoading ? <Backdrop /> : renderIfVerified\n}\n\nexport default App\n","D:\\Projects\\scheduler\\src\\app\\store.js",[],"D:\\Projects\\scheduler\\src\\app\\types.js",[],"D:\\Projects\\scheduler\\src\\services\\firebase.js",[],"D:\\Projects\\scheduler\\src\\containers\\0.login\\loginSlice.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\schedulerComponentSlice.js",[],"D:\\Projects\\scheduler\\src\\components\\Table\\tableSlice.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\sideNavSlice.js",[],"D:\\Projects\\scheduler\\src\\containers\\0.login\\index.js",["340","341","342","343","344","345","346","347"],"import React from 'react'\r\nimport GoogleButton from 'react-google-button'\r\nimport Animate, {\r\n  RollIn,\r\n  FadeIn,\r\n  FadeInDown,\r\n  ZoomIn,\r\n  FadeInUp,\r\n  RubberBand\r\n} from 'animate-css-styled-components'\r\nimport { auth, provider } from 'services/firebase'\r\nimport {\r\n  Wrapper,\r\n  Background,\r\n  GoogleContainer,\r\n  Card,\r\n  CookedChef,\r\n  Description,\r\n  VitosLogo\r\n} from './styles'\r\nimport background from 'images/background2.jpg'\r\nimport cookedChefLogo from 'images/cookedChef.jpg'\r\nimport vitosLogo from 'images/vitosLogo.jpg'\r\n\r\nfunction Login () {\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        const credential = result.credential\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        // ...\r\n      })\r\n      .catch(error => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        // ...\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* <Background src={background} /> */}\r\n      <Animate Animation={[FadeInDown]} duration={['1s']} delay={['0.1s']}>\r\n        <Card>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.8s']}>\r\n            <CookedChef src={cookedChefLogo} />\r\n          </Animate>\r\n          <Animate Animation={[RollIn]} duration={['1s']} delay={['0.5s']}>\r\n            <VitosLogo src={vitosLogo} />\r\n          </Animate>\r\n          <Animate Animation={[FadeInUp]} duration={['.1s']} delay={['1.2s']}>\r\n            <Description>USER LOGIN</Description>\r\n          </Animate>\r\n          <Animate\r\n            Animation={[ZoomIn, RubberBand]}\r\n            duration={['.1s', '1s']}\r\n            delay={['0.8s', '1.5s']}\r\n          >\r\n            <GoogleContainer>\r\n              <GoogleButton onClick={handleLogin} type='light' />\r\n            </GoogleContainer>\r\n          </Animate>\r\n        </Card>\r\n      </Animate>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\Projects\\scheduler\\src\\containers\\3.branch_mastefile\\index.js",["348"],"import React, { useEffect, useState } from 'react'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA,\r\n  BRANCH_MASTERFILE\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Table, { toolbarOptions, editSettings } from 'components/Table'\r\nimport { clearTable, setTable, deleteTable } from 'components/Table/tableSlice'\r\nimport db from 'services/firebase'\r\nimport { BRANCHES } from 'services/collectionNames'\r\n\r\nfunction BranchMasterfile() {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([MASTER_DATA, BRANCH_MASTERFILE]))\r\n    const unsubscribe = db.collection(BRANCHES).onSnapshot(function (snapshot) {\r\n      const rows = []\r\n      const headers = [\r\n        {\r\n          field: 'branchName',\r\n          headerText: 'Branch name'\r\n        },\r\n        {\r\n          field: 'branchAddress',\r\n          headerText: 'Branch Address'\r\n        },\r\n        {\r\n          field: 'color',\r\n          headerText: 'Color'\r\n        }\r\n      ]\r\n      for (const obj of snapshot.docChanges()) {\r\n        if (obj.type === 'modified') {\r\n          // const data = obj.doc.data()\r\n        } else if (obj.type === 'added') {\r\n          const data = obj.doc.data()\r\n          rows.push({ ...data, _id: obj.doc.id })\r\n        } else if (obj.type === 'removed') {\r\n          dispatch(deleteTable({ _id: obj.doc.id }))\r\n        } else {\r\n          console.log('nothing', obj.type)\r\n        }\r\n      }\r\n      if (rows.length > 0) {\r\n        dispatch(setTable({ rows, headers }))\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearTable())\r\n    }\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Table toolbar={toolbarOptions} editSettings={editSettings} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default BranchMasterfile\r\n","D:\\Projects\\scheduler\\src\\containers\\2.user_masterfile\\index.js",["349","350"],"import React, { useEffect, useState } from 'react'\r\nimport ScheduleComponent from 'components/SchedulerComponent'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA,\r\n  USER_MASTERFILE\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Table, { toolbarOptions, editSettings } from 'components/Table'\r\nimport { clearTable, setTable } from 'components/Table/tableSlice'\r\n\r\nfunction UserMasterfile () {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const rows = []\r\n    const headers = [\r\n      {\r\n        field: 'email',\r\n        headerText: 'Email'\r\n      },\r\n      {\r\n        field: 'username',\r\n        headerText: 'Username'\r\n      },\r\n      {\r\n        field: 'role',\r\n        headerText: 'Role'\r\n      },\r\n      {\r\n        field: 'branch',\r\n        headerText: 'Branch'\r\n      }\r\n    ]\r\n    dispatch(navigateTo([MASTER_DATA, USER_MASTERFILE]))\r\n    dispatch(setTable({ headers, rows }))\r\n    return () => {\r\n      dispatch(clearTable())\r\n    }\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Table toolbar={toolbarOptions} editSettings={editSettings} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default UserMasterfile\r\n","D:\\Projects\\scheduler\\src\\containers\\1.grill_reservation\\index.js",["351"],"import React, { useEffect, useState } from 'react'\r\nimport ScheduleComponent from 'components/SchedulerComponent'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport {\r\n  GRILL_RESERVATION,\r\n  DASHBOARD\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport Backdrop from 'components/backdrop'\r\n\r\nfunction GrillReservation () {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD, GRILL_RESERVATION]))\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      {loading && <Backdrop />}\r\n      <Container>\r\n        <Sidenav\r\n          isToggled={toggle}\r\n          navigateTo={[DASHBOARD, GRILL_RESERVATION]}\r\n        />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <ScheduleComponent setLoading={setLoading} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default GrillReservation\r\n","D:\\Projects\\scheduler\\src\\components\\backdrop\\index.js",[],"D:\\Projects\\scheduler\\src\\containers\\0.login\\styles.js",[],"D:\\Projects\\scheduler\\src\\containers\\styles.js",[],"D:\\Projects\\scheduler\\src\\components\\backdrop\\styles.js",[],"D:\\Projects\\scheduler\\src\\services\\collectionNames.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\menuData.js",["352"],"import { Clock, Pen } from './styles'\r\nexport const GRILL_RESERVATION = 'Grill Reservation'\r\nexport const PAYMENT_TRANSACTION = 'Payment Transaction'\r\nexport const USER_MASTERFILE = 'User Masterfile'\r\nexport const BRANCH_MASTERFILE = 'Branch Masterfile'\r\nexport const DASHBOARD = 'Dashboard'\r\nexport const MASTER_DATA = 'Master Data'\r\nexport const DROPDOWN_MASTERFILE = 'Dropdown Masterfile'\r\n\r\nexport default [\r\n  {\r\n    title: DASHBOARD,\r\n    Icon: ({ isToggled }) => <Clock isToggled={isToggled} />,\r\n    active: true,\r\n    subMenu: [\r\n      {\r\n        title: GRILL_RESERVATION,\r\n        active: true,\r\n        path: '/dashboard/grillReservation'\r\n      },\r\n      {\r\n        title: PAYMENT_TRANSACTION,\r\n        active: false,\r\n        path: '/dashboard/paymentTransaction'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: MASTER_DATA,\r\n    Icon: ({ isToggled }) => <Pen isToggled={isToggled} />,\r\n    active: false,\r\n    subMenu: [\r\n      {\r\n        title: USER_MASTERFILE,\r\n        active: false,\r\n        path: '/masterData/userMasterFile'\r\n      },\r\n      {\r\n        title: BRANCH_MASTERFILE,\r\n        active: false,\r\n        path: '/masterData/branchMasterFile'\r\n      },\r\n      {\r\n        title: DROPDOWN_MASTERFILE,\r\n        active: false,\r\n        path: '/masterData/dropdownMasterfile'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","D:\\Projects\\scheduler\\src\\components\\Table\\index.js",["353","354","355","356","357"],"import * as React from 'react'\r\nimport {\r\n  GridComponent,\r\n  ColumnsDirective,\r\n  ColumnDirective,\r\n  Resize,\r\n  Sort,\r\n  ContextMenu,\r\n  Filter,\r\n  Page,\r\n  ExcelExport,\r\n  Group,\r\n  PdfExport,\r\n  Edit,\r\n  Inject,\r\n  Search,\r\n  Toolbar\r\n} from '@syncfusion/ej2-react-grids'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectTableSlice } from './tableSlice'\r\nimport { addData, deleteData, updateData } from 'services'\r\nimport { BRANCHES } from 'services/collectionNames'\r\nconst Table = (props) => {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const contextMenuItems = [\r\n    'AutoFit',\r\n    'AutoFitAll',\r\n    'SortAscending',\r\n    'SortDescending',\r\n    'Copy',\r\n    'Edit',\r\n    'Delete',\r\n    'Save',\r\n    'Cancel',\r\n    'PdfExport',\r\n    'ExcelExport',\r\n    'CsvExport',\r\n    'FirstPage',\r\n    'PrevPage',\r\n    'LastPage',\r\n    'NextPage'\r\n  ]\r\n\r\n  const onActionBegin = e => {\r\n    const { requestType, data } = e\r\n    const dataCopy = { ...data }\r\n    delete dataCopy._id\r\n    if (requestType === 'save') {\r\n      updateData({\r\n        data: dataCopy,\r\n        id: data._id,\r\n        collection: BRANCHES\r\n      })\r\n    }\r\n    if (requestType === 'delete') {\r\n      deleteData({\r\n        id: data[0]?._id,\r\n        collection: BRANCHES\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className='control-pane'>\r\n        <div className='control-section'>\r\n          <GridComponent\r\n            id='gridcomp'\r\n            dataSource={tableSlice.dataList}\r\n            allowPaging\r\n            allowSorting\r\n            allowFiltering\r\n            allowGrouping\r\n            allowExcelExport\r\n            allowPdfExport\r\n            contextMenuItems={contextMenuItems}\r\n            actionBegin={onActionBegin}\r\n            {...props}\r\n          >\r\n            <ColumnsDirective>\r\n              {tableSlice.headers.map(data => {\r\n                return (\r\n                  <ColumnDirective\r\n                    key={data.field}\r\n                    {...data}\r\n                  />\r\n                )\r\n              })}\r\n            </ColumnsDirective>\r\n            <Inject services={[Page, Toolbar, Edit, Sort, Filter, Group, ExcelExport]} />\r\n          </GridComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport const toolbarOptions = ['Add', 'Edit', 'Delete', 'Update', 'Cancel', 'Search']\r\nexport const editSettings = {\r\n  allowEditing: true,\r\n  allowAdding: true,\r\n  allowDeleting: true,\r\n  newRowPosition: 'Top'\r\n}\r\nexport default Table\r\n","D:\\Projects\\scheduler\\src\\components\\sideNav\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\index.js",["358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  ScheduleComponent,\r\n  ViewDirective,\r\n  ViewsDirective,\r\n  Inject,\r\n  Week,\r\n  Month,\r\n  Agenda,\r\n  DragAndDrop,\r\n  Resize\r\n} from '@syncfusion/ej2-react-schedule'\r\nimport OrderSlip from 'components/SchedulerComponent/orderSlip'\r\nimport {\r\n  selectSchedulerComponentSlice,\r\n  updateSchedules,\r\n  setSchedules,\r\n  clearSchedules,\r\n  setBranchColors,\r\n  removeSchedule\r\n} from './schedulerComponentSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport schedulerSchema from './schedulerSchema'\r\nimport { addData, updateData, deleteData } from 'services'\r\nimport { BRANCHES, SCHEDULES } from 'services/collectionNames'\r\nimport formatDataSource from './formatDataSource'\r\nimport db from 'services/firebase'\r\nimport {\r\n  BC,\r\n  BC_HALF,\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  EIGHT,\r\n  ORDER_NO,\r\n  TWELVE,\r\n  _ID\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport { DROPDOWN_DATAS } from 'components/SchedulerComponent/orderSlip/orderSlipConfig'\r\nimport identifyDateRange, { getDaysInMonthUTC } from './identifyDateRange'\r\nimport Backdrop from 'components/backdrop'\r\nimport { selectOrderComponentSlice } from 'components/SchedulerComponent/orderSlip/orderSlipSlice'\r\n\r\nimport './app.component.css'\r\nfunction SchedulerComponent ({ setLoading }) {\r\n  const dispatch = useDispatch()\r\n  const selectOrderSlice = useSelector(selectOrderComponentSlice)\r\n  const schedulerComponentSlice = useSelector(selectSchedulerComponentSlice)\r\n  const dataSource = [...formatDataSource(schedulerComponentSlice.dataSource)]\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const unsubscribe = db\r\n      .collection(SCHEDULES)\r\n      .orderBy('StartTime', 'asc')\r\n      .onSnapshot(function (snapshot) {\r\n        const schedules = []\r\n        for (const obj of snapshot.docChanges()) {\r\n          if (obj.type === 'modified') {\r\n            const data = obj.doc.data()\r\n            const newData = {\r\n              ...data,\r\n              Subject: data.customer\r\n            }\r\n            dispatch(updateSchedules(newData))\r\n          } else if (obj.type === 'added') {\r\n            const data = obj.doc.data()\r\n            const newData = {\r\n              ...data,\r\n              Subject: data.customer,\r\n              [_ID]: obj.doc.id\r\n            }\r\n            schedules.push(newData)\r\n            // dispatch(setSchedules(newData))\r\n          } else if (obj.type === 'removed') {\r\n            const _id = obj.doc.id\r\n            dispatch(removeSchedule({ _id: _id }))\r\n          } else {\r\n            console.log('nothing', obj.type)\r\n          }\r\n        }\r\n        if (schedules.length > 0) {\r\n          dispatch(setSchedules(schedules))\r\n        }\r\n        setLoading(false)\r\n      })\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearSchedules())\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(BRANCHES).onSnapshot(function (snapshot) {\r\n      for (const obj of snapshot.docChanges()) {\r\n        if (obj.type === 'modified') {\r\n          const data = obj.doc.data()\r\n          dispatch(\r\n            setBranchColors({ branch: data.branchName, color: data.color })\r\n          )\r\n        } else if (obj.type === 'added') {\r\n          const data = obj.doc.data()\r\n          dispatch(\r\n            setBranchColors({ branch: data.branchName, color: data.color })\r\n          )\r\n        } else {\r\n          console.log('nothing')\r\n        }\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  const onActionBegin = args => {\r\n    if (args.requestType === 'eventChange') {\r\n      const dataToBeSend = schedulerSchema(args.data)\r\n      updateData({\r\n        data: { ...dataToBeSend },\r\n        collection: SCHEDULES,\r\n        id: args.data[_ID]\r\n      })\r\n    } else if (args.requestType === 'eventCreate') {\r\n      const data = args.addedRecords[0]\r\n      const orderNo = data?.branch ? selectOrderSlice[data[BRANCH]] : selectOrderSlice.Libis\r\n      const dataToBeSend = schedulerSchema({ ...data, [ORDER_NO]: orderNo })\r\n      addData({\r\n        data: dataToBeSend,\r\n        collection: SCHEDULES\r\n      })\r\n    } else if (args.requestType === 'eventRemove') {\r\n      const { deletedRecords } = args\r\n\r\n      deleteData({ id: deletedRecords[0]._id, collection: SCHEDULES })\r\n    } else {\r\n      console.log('other action is triggered', args)\r\n    }\r\n  }\r\n\r\n  const onNavigation = args => {\r\n    // console.log(args.currentDate)\r\n    // console.log('monthList', monthList)\r\n    // const monthDays = getDaysInMonthUTC(args.currentDate)\r\n    // if (!monthList.includes(args.currentDate)) {\r\n    //   console.log('wala')\r\n    //   setMonthList([...monthDays])\r\n    // } else {\r\n    //   console.log('meron')\r\n    // }\r\n  }\r\n\r\n  const { branchColors } = schedulerComponentSlice\r\n  const onEventRendered = args => {\r\n    const { element, data } = args\r\n    element.style.background = branchColors[data[BRANCH]]\r\n  }\r\n\r\n  const onPopUpOpen = args => {\r\n    const { data } = args\r\n    const header = args.element.querySelector('.e-title-text')\r\n    if (header) {\r\n      if (data?.orderNo) {\r\n        header.innerHTML = 'Update Order'\r\n      } else {\r\n        header.innerHTML = 'New Order'\r\n      }\r\n    }\r\n\r\n    if (args.type === 'Editor') {\r\n      // for (const key in DROPDOWN_DATAS) {\r\n      //   const element = args.element.querySelector(`#${key}`)\r\n      //   element.setAttribute('value', DROPDOWN_DATAS[key][0])\r\n      // }\r\n    }\r\n  }\r\n\r\n  const eventSettings = {\r\n    dataSource: dataSource\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ScheduleComponent\r\n        startHour='10:00'\r\n        endHour='19:00'\r\n        editorTemplate={OrderSlip}\r\n        eventSettings={eventSettings}\r\n        actionBegin={onActionBegin}\r\n        navigating={onNavigation}\r\n        eventRendered={onEventRendered}\r\n        popupOpen={onPopUpOpen}\r\n        height='92vh'\r\n        width='100%'\r\n      >\r\n        <ViewsDirective>\r\n          <ViewDirective option='Week' />\r\n          <ViewDirective option='Month' />\r\n          <ViewDirective option='Agenda' />\r\n        </ViewsDirective>\r\n        <Inject services={[Week, Month, Agenda, DragAndDrop, Resize]} />\r\n      </ScheduleComponent>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SchedulerComponent\r\n","D:\\Projects\\scheduler\\src\\components\\appBar\\index.js",["370"],"import React, { useState } from 'react'\r\nimport { AiOutlineMenuFold, AiOutlineMenuUnfold } from 'react-icons/ai'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport {\r\n  Item,\r\n  Wrapper,\r\n  Menu,\r\n  Link,\r\n  ItemMobileView,\r\n  User,\r\n  UserProfileLink\r\n} from './appBarStyles'\r\nimport { auth } from 'services/firebase'\r\nimport {\r\n  selectUserSlice,\r\n  clearAccountInfo\r\n} from 'containers/0.login/loginSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectSideNav } from 'components/sideNav/sideNavSlice'\r\n\r\nfunction AppBar({ isToggled, toggle }) {\r\n  const dispatch = useDispatch()\r\n  const sideNavSlice = useSelector(selectSideNav)\r\n  const user = useSelector(selectUserSlice)\r\n  const [viewProfile, setViewProfile] = useState(false)\r\n  const handleLogout = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(clearAccountInfo())\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  return (\r\n    <Wrapper isToggled={isToggled}>\r\n      <Link onClick={toggle} isToggled={isToggled}>\r\n        {isToggled ? (\r\n          <AiOutlineMenuFold size={25} />\r\n        ) : (\r\n          <AiOutlineMenuUnfold size={25} />\r\n        )}\r\n      </Link>\r\n      <Menu>\r\n        <Item isToggled={isToggled}>Home</Item>\r\n        <Item isToggled={isToggled}>/</Item>\r\n        <Item isToggled={isToggled}>{sideNavSlice.selectedMenu[0]}</Item>\r\n        <Item isToggled={isToggled}>/</Item>\r\n        <Item isToggled={isToggled} isActive>\r\n          {sideNavSlice.selectedMenu[1]}\r\n        </Item>\r\n        <ItemMobileView>{sideNavSlice.selectedMenu[1]}</ItemMobileView>\r\n      </Menu>\r\n      <div style={{ position: 'relative' }}>\r\n        <UserProfileLink\r\n          onClick={e => {\r\n            setViewProfile(true)\r\n          }}\r\n        >\r\n          <User />\r\n        </UserProfileLink>\r\n        <div\r\n          style={{\r\n            padding: '2rem',\r\n            display: viewProfile ? 'block' : 'none',\r\n            zIndex: '999',\r\n            position: 'absolute',\r\n            backgroundColor: 'white',\r\n            right: 0,\r\n            top: 0,\r\n            boxShadow: '1px 1px 10px grey'\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-end',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => setViewProfile(false)}\r\n          >\r\n            <IoMdClose />\r\n          </div>\r\n          <img src={user.photoURL} />\r\n          <h4>{user.displayName}</h4>\r\n          <span>{user.email}</span>\r\n          <button\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              handleLogout()\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default AppBar\r\n","D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\styles.js",[],"D:\\Projects\\scheduler\\src\\components\\appBar\\appBarStyles.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\identifyDateRange.js",["371"],"export default function (args) {\r\n  if (typeof args === 'undefined') {\r\n    return ''\r\n  }\r\n\r\n  const date = new Date(args)\r\n  const day = date.getDay()\r\n  console.log(day)\r\n  switch (day) {\r\n    case 1:\r\n      return [1, 5]\r\n    case 2:\r\n      return [2, 4]\r\n    case 3:\r\n      return [3, 3]\r\n    case 4:\r\n      return [4, 2]\r\n    case 5:\r\n      return [5, 1]\r\n    case 6:\r\n      return [6, 0]\r\n    default:\r\n      return [0, 6]\r\n  }\r\n}\r\n\r\nexport const getDaysInMonthUTC = args => {\r\n  if (typeof args === 'undefined') {\r\n    return ''\r\n  }\r\n\r\n  const month = args.getMonth()\r\n  const year = args.getYear()\r\n  //   const date = new Date(Date.UTC(year, month, 1))\r\n  //   const days = []\r\n  //   while (date.getUTCMonth() === month) {\r\n  //     days.push(new Date(date))\r\n  //     date.setUTCDate(date.getUTCDate() + 1)\r\n  //   }\r\n  //   return days\r\n  var date = new Date(year, month, 1)\r\n  var days = []\r\n  while (date.getMonth() === month) {\r\n    days.push(new Date(date))\r\n    date.setDate(date.getDate() + 1)\r\n  }\r\n  return days\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\schedulerSchema.js",["372","373","374","375","376"],"import orderSlipConfig, {\r\n  DROPDOWN_DATAS\r\n} from 'components/SchedulerComponent/orderSlip/orderSlipConfig'\r\nimport {\r\n  ACCOUNT_NAME,\r\n  ATCHARA,\r\n  BAO,\r\n  BASTING_SAUCE,\r\n  BC,\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BC_HALF,\r\n  BC_SAUCE,\r\n  BRANCH,\r\n  CHILI_OIL,\r\n  CH_12,\r\n  CH_8,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  EIGHT,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  GUID,\r\n  ID,\r\n  INDICATE_REASON,\r\n  JV_2,\r\n  JV_4,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  PAYMENT_MODE,\r\n  REPAER,\r\n  SPICED_VINEGAR,\r\n  STATUS,\r\n  TWELVE,\r\n  _ID\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\n\r\nconst schedulerSchema = {}\r\nfor (const obj of orderSlipConfig) {\r\n  if (obj.name) {\r\n    schedulerSchema[obj.name] = ''\r\n  }\r\n}\r\n\r\n// for number only\r\nconst checkIfValidNumber = number => {\r\n  if (isNaN(number)) {\r\n    return 0\r\n  } else {\r\n    if (number.trim() !== '') {\r\n      return parseInt(number)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\n// for dropdown only\r\nconst fillDropdownValueIfNull = (data, key) => {\r\n  if (data[key] === null) {\r\n    return DROPDOWN_DATAS[key][0]\r\n  } else {\r\n    return data[key]\r\n  }\r\n}\r\n\r\nexport default function (data) {\r\n  if (data) {\r\n    return {\r\n      ...schedulerSchema,\r\n      [BRANCH]: fillDropdownValueIfNull(data, BRANCH),\r\n      [DATE_START]: data[DATE_START],\r\n      [DATE_END]: data[DATE_END],\r\n      [CUSTOMER]: data[CUSTOMER],\r\n      [CONTACT_NUMBER]: data[CONTACT_NUMBER],\r\n      [ORDER_NO]: data[ORDER_NO],\r\n      [INDICATE_REASON]:data[INDICATE_REASON],\r\n      [ACCOUNT_NAME]: data[ACCOUNT_NAME],\r\n      [CH_8]: checkIfValidNumber(data[CH_8]),\r\n      [CH_12]: checkIfValidNumber(data[CH_12]),\r\n      [BC_2]: checkIfValidNumber(data[BC_2]),\r\n      [BC_4]: checkIfValidNumber(data[BC_4]),\r\n      [JV_4]: checkIfValidNumber(data[JV_4]),\r\n      [JV_2]: checkIfValidNumber(data[JV_2]), \r\n      [BCJ_4]: checkIfValidNumber(data[BCJ_4]),\r\n      [BCJ_2]: checkIfValidNumber(data[BCJ_2]),\r\n      [BCJ_1]: checkIfValidNumber(data[BCJ_1]),\r\n      [FCH_8]: checkIfValidNumber(data[FCH_8]),\r\n      [FCH_12]: checkIfValidNumber(data[FCH_12]),\r\n      [FBC_4]: checkIfValidNumber(data[FBC_4]),\r\n      [ATCHARA]: checkIfValidNumber(data[ATCHARA]),\r\n      [BC_SAUCE]: checkIfValidNumber(data[BC_SAUCE]),\r\n      [SPICED_VINEGAR]:checkIfValidNumber(data[SPICED_VINEGAR]),\r\n      [BASTING_SAUCE]: checkIfValidNumber(data[BASTING_SAUCE]),\r\n      [CHILI_OIL]: checkIfValidNumber(data[CHILI_OIL]),\r\n      [REPAER]: checkIfValidNumber(data[REPAER]),\r\n      [BAO]: checkIfValidNumber(data[BAO]),\r\n      [DATE_ORDER_PLACED]: data[DATE_ORDER_PLACED] || new Date(),\r\n      [ORDER_VIA]: fillDropdownValueIfNull(data, ORDER_VIA),\r\n      [PAYMENT_MODE]: fillDropdownValueIfNull(data, PAYMENT_MODE),\r\n      [STATUS]: fillDropdownValueIfNull(data, STATUS),\r\n      [ID]: data[ID],\r\n      [GUID]: data?.Guid ? data?.Guid : null,\r\n      [_ID]: data[_ID]\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\formatDataSource.js",["377","378","379","380","381"],"import {\r\n  DATE_START,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  EIGHT,\r\n  TWELVE,\r\n  BC,\r\n  BC_HALF,\r\n  CH_8,\r\n  CH_12,\r\n  BC_2,\r\n  BC_4,\r\n  JV_4,\r\n  JV_2,\r\n  BCJ_4,\r\n  BCJ_2,\r\n  BCJ_1,\r\n  FCH_8,\r\n  FCH_12,\r\n  FBC_4,\r\n  BAO,\r\n  REPAER,\r\n  CHILI_OIL,\r\n  SPICED_VINEGAR,\r\n  BC_SAUCE,\r\n  ATCHARA,\r\n  BASTING_SAUCE\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\n\r\nexport const formatDate = date => {\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nexport default function (dataSource) {\r\n  const newDataSource = []\r\n  for (const obj of dataSource) {\r\n    const startTime = obj[DATE_START]\r\n    const endTime = obj[DATE_END]\r\n    const dateOrder = obj[DATE_ORDER_PLACED]\r\n    newDataSource.push({\r\n      ...obj,\r\n      [DATE_START]: formatDate(startTime),\r\n      [DATE_END]: formatDate(endTime),\r\n      [DATE_ORDER_PLACED]: formatDate(dateOrder),\r\n      [CH_8]: obj[CH_8].toString(),\r\n      [CH_12]: obj[CH_12].toString(),\r\n      [BC_2]: obj[BC_2].toString(),\r\n      [BC_4]: obj[BC_4].toString(),\r\n      [JV_4]: obj[JV_4].toString(),\r\n      [JV_2]: obj[JV_2].toString(),\r\n      [BCJ_4]: obj[BCJ_4].toString(),\r\n      [BCJ_2]: obj[BCJ_2].toString(),\r\n      [BCJ_1]: obj[BCJ_1].toString(),\r\n      [FCH_8]: obj[FCH_8].toString(),\r\n      [FCH_12]: obj[FCH_12].toString(),\r\n      [FBC_4]: obj[FBC_4].toString(),\r\n      [ATCHARA]: obj[ATCHARA].toString(),\r\n      [BC_SAUCE]: obj[BC_SAUCE].toString(),\r\n      [SPICED_VINEGAR]: obj[SPICED_VINEGAR].toString(),\r\n      [BASTING_SAUCE]: obj[BASTING_SAUCE].toString(),\r\n      [CHILI_OIL]: obj[CHILI_OIL].toString(),\r\n      [REPAER]: obj[REPAER].toString(),\r\n      [BAO]: obj[BAO].toString(),\r\n    })\r\n  }\r\n  return newDataSource\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\sideNav\\0.container\\index.js",[],"D:\\Projects\\scheduler\\src\\services\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipConfig.js",["382","383","384","385","386","387","388"],"import {\r\n  DATE_TIME_PICKER,\r\n  DESCRIPTION,\r\n  DROP_DOWN_LIST,\r\n  HIDDEN,\r\n  INPUT\r\n} from 'components/fields/types'\r\nimport {\r\n  ACCOUNT_NAME,\r\n  ATCHARA,\r\n  BAO,\r\n  BASTING_SAUCE,\r\n  BC,\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BC_HALF,\r\n  BC_SAUCE,\r\n  BRANCH,\r\n  CHILI_OIL,\r\n  CH_12,\r\n  CH_8,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  EIGHT,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  ID,\r\n  INDICATE_REASON,\r\n  JV_2,\r\n  JV_4,\r\n  LABELS,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  PAYMENT_MODE,\r\n  REPAER,\r\n  SPICED_VINEGAR,\r\n  STATUS,\r\n  TOTAL,\r\n  TWELVE,\r\n  _ID\r\n} from './types'\r\n\r\nexport const DROPDOWN_DATAS = {\r\n  [BRANCH]: ['Libis', 'Ronac'],\r\n  [ORDER_VIA]: [\r\n    'INSTAGRAM DM',\r\n    'FB MESSENGER',\r\n    'VIBER 770',\r\n    'VIBER 809',\r\n    'WHATSAPP 770',\r\n    'WHATSAPP 809',\r\n    'TEXT 770',\r\n    'TEXT 809'\r\n  ],\r\n  [PAYMENT_MODE]: [\r\n    'CASH',\r\n    'BDO / 98',\r\n    'KP / GCASH',\r\n    'ZAP',\r\n    'GRAB FOOD',\r\n    'DINGDONG PH',\r\n    'METROMART FOOD'\r\n  ],\r\n  [STATUS]: [\r\n    'CONFIRMED',\r\n    'PAID',\r\n    'SERVED',\r\n    'REVISED / RESCHEDULED',\r\n    'CANCELLED'\r\n  ]\r\n}\r\nexport default [\r\n  {\r\n    name: BRANCH,\r\n    type: DROP_DOWN_LIST,\r\n    label: LABELS[BRANCH],\r\n    value: 'Libis',\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: ORDER_NO,\r\n    type: INPUT,\r\n    label: LABELS[ORDER_NO],\r\n    isInlineBlock: true,\r\n    disabled: true,\r\n    placeholder: 'Auto generate after save'\r\n  },\r\n  {\r\n    name: STATUS,\r\n    type: DROP_DOWN_LIST,\r\n    label: LABELS[STATUS],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: INDICATE_REASON,\r\n    type: INPUT,\r\n    label: LABELS[INDICATE_REASON],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: CONTACT_NUMBER,\r\n    type: INPUT,\r\n    label: LABELS[CONTACT_NUMBER],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: DATE_ORDER_PLACED,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_ORDER_PLACED],\r\n    default: 'StartTime',\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: DATE_START,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_START],\r\n    default: 'StartTime',\r\n    isInlineBlock: true,\r\n    disabled: true\r\n  },\r\n  {\r\n    name: DATE_END,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_END],\r\n    default: 'EndTime',\r\n    isInlineBlock: true,\r\n    disabled: true\r\n  },\r\n  {\r\n    name: ORDER_VIA,\r\n    type: DROP_DOWN_LIST,\r\n    label: LABELS[ORDER_VIA],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: ACCOUNT_NAME,\r\n    type: INPUT,\r\n    label: LABELS[ACCOUNT_NAME],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: CUSTOMER,\r\n    type: INPUT,\r\n    label: LABELS[CUSTOMER],\r\n    isInlineBlock: true\r\n  },\r\n  {\r\n    name: 'Header',\r\n    type: DESCRIPTION,\r\n    dataSource: ['MENU', 'QTY', 'PRICE', 'AMOUNT']\r\n  },\r\n  {\r\n    name: CH_8,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[CH_8],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '370.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: CH_12,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[CH_12],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '550.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BC_2,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BC_2],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '285.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BC_4,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BC_4],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '550.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: JV_4,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[JV_4],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '200.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: JV_2,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[JV_2],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '100.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BCJ_4,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BCJ_4],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '750.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BCJ_2,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BCJ_2],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '385.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BCJ_1,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BCJ_1],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '195.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: FCH_8,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[FCH_8],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '320.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: FCH_12,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[FCH_12],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '480.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: FBC_4,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[FBC_4],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '520.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: ATCHARA,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[ATCHARA],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '25.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BC_SAUCE,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BC_SAUCE],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '25.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: SPICED_VINEGAR,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[SPICED_VINEGAR],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '15.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BASTING_SAUCE,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BASTING_SAUCE],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '25.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: CHILI_OIL,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[CHILI_OIL],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '125.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: REPAER,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[REPAER],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '99.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n  {\r\n    name: BAO,\r\n    type: DESCRIPTION,\r\n    dataSource: [\r\n      LABELS[BAO],\r\n      {\r\n        type: INPUT\r\n      },\r\n      '295.00',\r\n      '0.00'\r\n    ]\r\n  },\r\n\r\n  // this is important do not remove\r\n  {\r\n    name: _ID,\r\n    type: HIDDEN,\r\n    label: '',\r\n    isInline: true\r\n  }\r\n]\r\n","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\types.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\0.container\\styles.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\filteringPanel.js",["389","390","391","392"],"import React, { useState, useEffect } from 'react'\r\nimport fields from 'components/fields'\r\nimport classes from './filteringPanel.module.css'\r\nimport { DATE_PICKER, DROP_DOWN_LIST } from 'components/fields/types'\r\nimport {\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BRANCH,\r\n  CH_12,\r\n  CH_8,\r\n  DATE_END,\r\n  DATE_START,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  JV_2,\r\n  JV_4,\r\n  LABELS,\r\n  _ID\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport Animate, { FadeInLeft } from 'animate-css-styled-components'\r\nimport { DROPDOWN_DATAS } from 'components/SchedulerComponent/orderSlip/orderSlipConfig'\r\n\r\nimport { selectSchedulerComponentSlice } from 'components/SchedulerComponent/schedulerComponentSlice'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { Body, Header } from './styles'\r\nimport formatDataSource from 'components/SchedulerComponent/formatDataSource'\r\n\r\nconst normalizeHour = date => {\r\n  const dateArray = date.split(':')\r\n  if (dateArray[0] > 12) {\r\n    const hour = dateArray[0] - 12\r\n    return `${hour}:${dateArray[1]} PM`\r\n  } else {\r\n    if (parseInt(dateArray[0]) === 12) {\r\n      return `${dateArray[0]}:${dateArray[1]} PM`\r\n    } else {\r\n      return `${dateArray[0]}:${dateArray[1]} AM`\r\n    }\r\n  }\r\n}\r\n\r\nconst getOnlyDate = dateTime => {\r\n  const dateTimeSplit = dateTime.toString().split(' ')\r\n  return `${dateTimeSplit[1]} ${dateTimeSplit[2]} ${dateTimeSplit[3]}`\r\n}\r\n\r\nconst sumUp = filteredData => {\r\n  const newFilteredData = []\r\n\r\n  for (const obj of filteredData) {\r\n    let _index = ''\r\n    const isExist = newFilteredData.some((data, index) => {\r\n      const startTime1 = data[DATE_START]?.toString().split(' ')\r\n      const startTime2 = obj[DATE_START]?.toString().split(' ')\r\n      _index = index\r\n      return normalizeHour(startTime1[4]) === normalizeHour(startTime2[4])\r\n    })\r\n    if (isExist) {\r\n      const _newFilteredObj = { ...newFilteredData[_index] }\r\n      newFilteredData.splice(_index, 1)\r\n      _newFilteredObj[CH_8] =\r\n        parseInt(_newFilteredObj[CH_8]) + parseInt(obj[CH_8])\r\n      _newFilteredObj[CH_12] =\r\n        parseInt(_newFilteredObj[CH_12]) + parseInt(obj[CH_12])\r\n      _newFilteredObj[BC_2] =\r\n        parseInt(_newFilteredObj[BC_2]) + parseInt(obj[BC_2])\r\n      _newFilteredObj[BC_4] =\r\n        parseInt(_newFilteredObj[BC_4]) + parseInt(obj[BC_4])\r\n      _newFilteredObj[JV_4] =\r\n        parseInt(_newFilteredObj[JV_4]) + parseInt(obj[JV_4])\r\n      _newFilteredObj[JV_2] =\r\n        parseInt(_newFilteredObj[JV_2]) + parseInt(obj[JV_2])\r\n      _newFilteredObj[BCJ_4] =\r\n        parseInt(_newFilteredObj[BCJ_4]) + parseInt(obj[BCJ_4])\r\n      _newFilteredObj[BCJ_2] =\r\n        parseInt(_newFilteredObj[BCJ_2]) + parseInt(obj[BCJ_2])\r\n      _newFilteredObj[BCJ_1] =\r\n        parseInt(_newFilteredObj[BCJ_1]) + parseInt(obj[BCJ_1])\r\n      newFilteredData.push(_newFilteredObj)\r\n    } else {\r\n      newFilteredData.push({\r\n        [DATE_START]: obj[DATE_START],\r\n        [DATE_END]: obj[DATE_END],\r\n        [CH_8]: obj[CH_8],\r\n        [CH_12]: obj[CH_12],\r\n        [BC_2]: obj[BC_2],\r\n        [BC_4]: obj[BC_4],\r\n        [JV_4]: obj[JV_4],\r\n        [JV_2]: obj[JV_2],\r\n        [BCJ_4]: obj[BCJ_4],\r\n        [BCJ_2]: obj[BCJ_2],\r\n        [BCJ_1]: obj[BCJ_1],\r\n        [BRANCH]: obj[BRANCH] // this to identify the color of panel\r\n      })\r\n    }\r\n  }\r\n  return newFilteredData\r\n}\r\n\r\nfunction FilteringPanel({ isToggled }) {\r\n  const schedulerComponentSlice = useSelector(selectSchedulerComponentSlice)\r\n  const dataSource = [...formatDataSource(schedulerComponentSlice.dataSource)]\r\n  const [branchValue, setBranchValue] = useState(DROPDOWN_DATAS[BRANCH][0])\r\n  const [dateValue, setDateValue] = useState(new Date())\r\n  const [filteredDataSource, setFilteredDataSource] = useState([])\r\n\r\n  useEffect(() => {\r\n    const filteredDataCopy = [...handleFiltering(branchValue, dateValue)]\r\n    const sumUpData = [...sumUp(filteredDataCopy)]\r\n    setFilteredDataSource(sumUpData)\r\n  }, [schedulerComponentSlice.dataSource])\r\n\r\n  const handleFiltering = (branch, date) => {\r\n    const filteredData = dataSource.filter(data => {\r\n      const dateStart = getOnlyDate(data[DATE_START])\r\n      const dateFilter = getOnlyDate(date)\r\n      return data[BRANCH] === branch && dateStart === dateFilter\r\n    })\r\n    return filteredData\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Header isToggled={isToggled}>\r\n        <div>\r\n          {fields[DROP_DOWN_LIST]({\r\n            name: BRANCH,\r\n            label: LABELS[BRANCH],\r\n            dataSource: DROPDOWN_DATAS[BRANCH],\r\n            value: branchValue,\r\n            onChange: e => {\r\n              setBranchValue(e.value)\r\n              const filteredDataCopy = [...handleFiltering(e.value, dateValue)]\r\n              const sumUpData = [...sumUp(filteredDataCopy)]\r\n              setFilteredDataSource([])\r\n              setFilteredDataSource(sumUpData)\r\n            }\r\n          })}\r\n        </div>\r\n        <div>\r\n          {fields[DATE_PICKER]({\r\n            name: DATE_PICKER,\r\n            value: dateValue,\r\n            disabled: false,\r\n            label: 'Date',\r\n            onChange: e => {\r\n              setDateValue(e.target.value)\r\n              const filteredDataCopy = [\r\n                ...handleFiltering(branchValue, e.target.value)\r\n              ]\r\n              const sumUpData = [...sumUp(filteredDataCopy)]\r\n              setFilteredDataSource([])\r\n              setFilteredDataSource(sumUpData)\r\n            }\r\n          })}\r\n        </div>\r\n      </Header>\r\n      <Body isToggled={isToggled}>\r\n        {filteredDataSource.map((data, index) => {\r\n          const startTime = data[DATE_START]?.toString().split(' ')\r\n          const endTime = data[DATE_END]?.toString().split(' ')\r\n          const chips = [\r\n            {\r\n              label: LABELS[CH_8],\r\n              value: data[CH_8]\r\n            },\r\n            {\r\n              label: LABELS[CH_12],\r\n              value: data[CH_12]\r\n            },\r\n            {\r\n              label: LABELS[BC_2],\r\n              value: data[BC_2]\r\n            },\r\n            {\r\n              label: LABELS[BC_4],\r\n              value: data[BC_4]\r\n            },\r\n            {\r\n              label: LABELS[JV_4],\r\n              value: data[JV_4]\r\n            },\r\n            {\r\n              label: LABELS[JV_2],\r\n              value: data[JV_2]\r\n            },\r\n            {\r\n              label: LABELS[BCJ_4],\r\n              value: data[BCJ_4]\r\n            },\r\n            {\r\n              label: LABELS[BCJ_2],\r\n              value: data[BCJ_2]\r\n            },\r\n            {\r\n              label: LABELS[BCJ_1],\r\n              value: data[BCJ_1]\r\n            }\r\n          ]\r\n\r\n          const { branchColors } = schedulerComponentSlice\r\n          return (\r\n            <Animate\r\n              key={data[_ID]}\r\n              Animation={[FadeInLeft]}\r\n              duration={['1s']}\r\n              delay={[`0.${1 + index}s`]}\r\n            >\r\n              <div\r\n                className={classes[`panel${data[BRANCH]}`]}\r\n                style={{ backgroundColor: branchColors[data[BRANCH]] }}\r\n              >\r\n                <div className={classes.timeContainer}>\r\n                  <div>\r\n                    <label>Time start</label>\r\n                    <span>{normalizeHour(startTime[4])}</span>\r\n                  </div>\r\n                  <div>\r\n                    <label>Time end</label>\r\n                    <span>{normalizeHour(endTime[4])}</span>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.chips}>\r\n                  <div>\r\n                    {chips.map((chip, index) => (\r\n                      <div key={index}>{`${chip.label}: ${chip.value}`}</div>\r\n                    ))}\r\n\r\n                    {/* <div>{`${chips[1].label}: ${chips[1].value}`}</div>\r\n                    <div>{`${chips[2].label}: ${chips[2].value}`}</div>\r\n                    <div>{`${chips[3].label}: ${chips[3].value}`}</div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Animate>\r\n          )\r\n        })}\r\n      </Body>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteringPanel\r\n","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\index.js",[],"D:\\Projects\\scheduler\\src\\services\\dataHandlers\\updateData.js",["393","394"],"import db from '../firebase'\r\n\r\nexport default function ({ data, collection, id }) {\r\n  const cityRef = db.collection(collection).doc(id)\r\n  const setWithMerge = cityRef.set(\r\n    {\r\n      ...data\r\n    },\r\n    { merge: true }\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\addData.js",["395"],"import db from '../firebase'\r\n\r\nexport default function ({ data, collection }) {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(collection).add({ ...data })\r\n      .then((docRef) => {\r\n        resolve(docRef.id)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding document: ', error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\deleteData.js",["396"],"import db from '../firebase'\r\n\r\nexport default function ({ id, collection }) {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(collection)\r\n      .doc(id)\r\n      .delete()\r\n      .then(data => {\r\n        console.log('Document successfully deleted!')\r\n        resolve('success')\r\n      })\r\n      .catch(error => {\r\n        console.error('Error removing document: ', error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\sideNav\\2.menu\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\1.banner\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\styles.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlip.js",["397","398","399","400"],"import React, { useEffect, useState } from 'react'\r\nimport fields from 'components/fields'\r\nimport orderSlipConfig from './orderSlipConfig'\r\nimport classes from './orderSlip.module.css'\r\nimport GrillMenus from './grillMenus'\r\n\r\nimport {\r\n  CH_8,\r\n  CH_12,\r\n  BC_2,\r\n  BC_4,\r\n  JV_4,\r\n  JV_2,\r\n  BCJ_4,\r\n  BCJ_2,\r\n  BCJ_1,\r\n  FCH_8,\r\n  FCH_12,\r\n  FBC_4,\r\n  ATCHARA,\r\n  BC_SAUCE,\r\n  SPICED_VINEGAR,\r\n  BASTING_SAUCE,\r\n  CHILI_OIL,\r\n  REPAER,\r\n  BAO,\r\n  ORDER_NO\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setOrderNo, clearOrderNos } from './orderSlipSlice'\r\nimport { selectSchedulerComponentSlice } from '../schedulerComponentSlice'\r\nimport orderNoDate from './orderNoDate'\r\nimport { useGetDropdowns } from '../dropdowns'\r\n\r\nexport const menu = [\r\n  CH_8,\r\n  CH_12,\r\n  BC_2,\r\n  BC_4,\r\n  JV_4,\r\n  JV_2,\r\n  BCJ_4,\r\n  BCJ_2,\r\n  BCJ_1,\r\n  FCH_8,\r\n  FCH_12,\r\n  FBC_4,\r\n  ATCHARA,\r\n  BC_SAUCE,\r\n  SPICED_VINEGAR,\r\n  BASTING_SAUCE,\r\n  CHILI_OIL,\r\n  REPAER,\r\n  BAO\r\n]\r\n\r\nfunction OrderSlip (props) {\r\n  const selectSchedulerComponent = useSelector(selectSchedulerComponentSlice)\r\n  const dropdowns = useGetDropdowns()\r\n  const { dataSource } = selectSchedulerComponent\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    countLibis()\r\n    countRonac()\r\n  }, [dataSource])\r\n  const countLibis = () => {\r\n    const filteredLibis = dataSource.filter(data => data[ORDER_NO].includes(`LB001-${orderNoDate()}-685`))\r\n    let latestNumber = 0\r\n    for (const obj of filteredLibis) {\r\n      const splitedObj = obj[ORDER_NO].split('-685')\r\n      if (latestNumber < parseInt(splitedObj[1])) {\r\n        latestNumber = parseInt(splitedObj[1])\r\n      }\r\n    }\r\n    dispatch(setOrderNo({ branch: 'Libis', value: parseInt(latestNumber) + 1 }))\r\n  }\r\n\r\n  const countRonac = () => {\r\n    const filteredRonac = dataSource.filter(data => data[ORDER_NO].includes(`RSJ002-${orderNoDate()}-685`))\r\n    let latestNumber = 0\r\n    for (const obj of filteredRonac) {\r\n      const splitedObj = obj[ORDER_NO].split('-685')\r\n      if (latestNumber < parseInt(splitedObj[1])) {\r\n        latestNumber = parseInt(splitedObj[1])\r\n      }\r\n    }\r\n    dispatch(setOrderNo({ branch: 'Ronac', value: parseInt(latestNumber) + 1 }))\r\n  }\r\n  return props !== undefined\r\n    ? <div className={classes.container}>\r\n      {orderSlipConfig.map(customProps => {\r\n        const dataSource = typeof dropdowns[customProps.name] === 'undefined' ? [] : dropdowns[customProps.name]\r\n        if (!menu.includes(customProps.name)) {\r\n          return fields[customProps.type]({ ...props, ...customProps, dataSource })\r\n        }\r\n      })}\r\n      <GrillMenus orderSlipConfig={orderSlipConfig} data={props} menu={[...menu]} />\r\n      </div>\r\n    : <></>\r\n}\r\n\r\nexport default OrderSlip\r\n","D:\\Projects\\scheduler\\src\\components\\fields\\types.js",[],"D:\\Projects\\scheduler\\src\\components\\sideNav\\1.banner\\styles.js",[],["401","402"],"D:\\Projects\\scheduler\\src\\components\\fields\\index.js",["403","404","405"],"import DateTimePicker from './dateTimePicker'\r\nimport DropdownList from './dropdownList'\r\nimport Input from './input'\r\nimport {\r\n  CHIPS,\r\n  DATE_PICKER,\r\n  DATE_TIME_PICKER,\r\n  DESCRIPTION,\r\n  DROP_DOWN_LIST,\r\n  HIDDEN,\r\n  INPUT,\r\n  NUMBER\r\n} from './types'\r\nimport classes from './index.module.css'\r\nimport Chips from './chips'\r\nimport DatePicker from './datePicker'\r\nimport { Description } from 'containers/0.login/styles'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Number from './number'\r\n\r\nconst RenderComponent = ({ label, children, isInline, isInlineBlock }) => {\r\n  if (isInline) {\r\n    return (\r\n      <div className={classes.containerInline}>\r\n        <div>\r\n          <label>{label}</label>\r\n        </div>\r\n        <div>{children}</div>\r\n      </div>\r\n    )\r\n  }\r\n  if (isInlineBlock) {\r\n    return (\r\n      <div className={classes.containerBlock}>\r\n        <div>\r\n          <label>{label}</label>\r\n        </div>\r\n        <div>{children}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.block}>\r\n      <div>\r\n        <label>{label}</label>\r\n      </div>\r\n      <div>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DescriptionComponent = props => {\r\n  const prices = [props[props.name], props.dataSource[2]]\r\n  const total = prices[0] * prices[1]\r\n  const [amount, setAmount] = useState(isNaN(total) ? '0.00' : total.toFixed(2))\r\n  const computeHandler = e => {\r\n    const newTotal = e.target.value * prices[1]\r\n    setAmount(newTotal.toFixed(2))\r\n    const qty = isNaN(e.target.value) || e.target.value === '' ? '0' : e.target.value\r\n    props.setTotals({ ...props.totals, [props.name]: { qty, price: props.dataSource[2] } })\r\n  }\r\n\r\n  const renderData = (data, index) => {\r\n    if (props.name === 'Header') {\r\n      return data\r\n    }\r\n    if (typeof data === 'string') {\r\n      if (index === 3) {\r\n        return amount\r\n      } else if (index === 2) {\r\n        return data\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.description}>\r\n      {props.dataSource.map((data, index) => {\r\n        return (\r\n          <div key={data} style={{ width: '100%' }}>\r\n            {typeof data === 'string' ? (\r\n              <div\r\n                style={\r\n                  index >= 2\r\n                    ? {\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-end'\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                {renderData(data, index)}\r\n              </div>\r\n            ) : (\r\n              fields[data.type]({\r\n                ...props,\r\n                onChange: computeHandler\r\n              })\r\n            )}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst fields = {\r\n  [DATE_TIME_PICKER]: props => {\r\n    return (\r\n      <RenderComponent\r\n        label={props.label}\r\n        isInline={props.isInline}\r\n        isInlineBlock={props.isInlineBlock}\r\n      >\r\n        <DateTimePicker {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DATE_PICKER]: props => {\r\n    return (\r\n      <RenderComponent\r\n        label={props.label}\r\n        isInline={props.isInline}\r\n        isInlineBlock={props.isInlineBlock}\r\n      >\r\n        <DatePicker {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DROP_DOWN_LIST]: props => {\r\n    return (\r\n      <RenderComponent {...props} isInline={props.isInline}>\r\n        <DropdownList {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [INPUT]: props => {\r\n    return (\r\n      <RenderComponent {...props}>\r\n        <Input {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [NUMBER]: props => {\r\n    return (\r\n      <RenderComponent {...props}>\r\n        <Number {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DESCRIPTION]: props => {\r\n    return <DescriptionComponent {...props} />\r\n  },\r\n  [HIDDEN]: props => {\r\n    return (\r\n      <input\r\n        id={props.name}\r\n        className='e-field e-input'\r\n        type='hidden'\r\n        name={props.name}\r\n        style={{ width: '100%' }}\r\n      />\r\n    )\r\n  },\r\n  [CHIPS]: props => {\r\n    return <Chips {...props} />\r\n  }\r\n}\r\n\r\nexport default fields\r\n","D:\\Projects\\scheduler\\src\\components\\fields\\dateTimePicker.js",[],"D:\\Projects\\scheduler\\src\\components\\fields\\dropdownList.js",[],"D:\\Projects\\scheduler\\src\\components\\fields\\chips.js",[],"D:\\Projects\\scheduler\\src\\components\\fields\\input.js",[],"D:\\Projects\\scheduler\\src\\components\\fields\\datePicker.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\grillMenus.js",["406","407"],"import React, { useEffect, useState } from 'react'\r\nimport fields from 'components/fields'\r\nimport calculateSubTotal from '../../../commonFunctions/calculateSubTotal'\r\nimport Print from 'components/print'\r\n\r\nexport default function ({ orderSlipConfig, data, menu }) {\r\n  const initialState = () => {\r\n    const _data = {}\r\n    for (const value of menu) {\r\n      const { dataSource } = orderSlipConfig.find(config => config?.name === value)\r\n      const qty = typeof data[value] === 'undefined' ? '0' : data[value]\r\n      _data[value] = { qty, price: dataSource[2] }\r\n    }\r\n    return _data\r\n  }\r\n  const [totals, setTotals] = useState(initialState())\r\n  const [subTotal, setSubTotal] = useState(0)\r\n  const [qty, setQty] = useState(0)\r\n\r\n  const menus = orderSlipConfig.map(customProps => {\r\n    if (menu.includes(customProps?.name)) {\r\n      return fields[customProps.type]({ ...data, ...customProps, totals, setTotals: setTotals })\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const result = calculateSubTotal(totals)\r\n    setQty(result.qty)\r\n    setSubTotal(result.subTotal)\r\n  }, [totals])\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      {menus}\r\n      <br />\r\n      <br />\r\n      <div style={{ display: 'flex', width: '100%' }}>\r\n        <div style={{ flex: '1' }}>Total</div>\r\n        <div style={{ flex: '1' }}>{qty}</div>\r\n        <div style={{ flex: '1' }} />\r\n        <div style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>{subTotal}</div>\r\n      </div>\r\n      <br />\r\n      <div style={{ display: 'flex', width: '100%', justifyContent: 'flex-end' }}>\r\n        <Print\r\n          orderSlipConfig={orderSlipConfig}\r\n          data={data}\r\n          menu={menu}\r\n          totals={totals}\r\n          subTotal={subTotal}\r\n          qty={qty}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipSlice.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderNoDate.js",["408"],"\r\nconst twoDigitsYear = (date) => {\r\n  const year = date.getFullYear()\r\n  return year.toString().substr(-2)\r\n}\r\n\r\nconst twoDigitsMonth = (date) => {\r\n  const month = date.getMonth() + 1\r\n  if (month < 10) {\r\n    return `0${month}`\r\n  } else {\r\n    return month.toString()\r\n  }\r\n}\r\n\r\nconst twoDigitsDay = (date) => {\r\n  const day = date.getDate()\r\n  if (day < 10) {\r\n    return `0${day}`\r\n  } else {\r\n    return day.toString()\r\n  }\r\n}\r\n\r\nexport default function () {\r\n  const date = new Date()\r\n  const year = twoDigitsYear(date)\r\n  const month = twoDigitsMonth(date)\r\n  const day = twoDigitsDay(date)\r\n  return month + '' + day + '' + year\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\print\\print.js",[],"D:\\Projects\\scheduler\\src\\components\\print\\styles.js",[],"D:\\Projects\\scheduler\\src\\components\\print\\ComponentToPrint.js",[],"D:\\Projects\\scheduler\\src\\components\\print\\index.js",["409","410","411"],"import { BRANCH, CONTACT_NUMBER, CUSTOMER, DATE_END, DATE_ORDER_PLACED, DATE_START, INDICATE_REASON, LABELS, ORDER_NO, ORDER_VIA, STATUS } from 'components/SchedulerComponent/orderSlip/types'\r\nimport Print from './print'\r\nimport { Container, Header, Body, Footer, Description, Label, Label2 } from './styles'\r\nimport cookedChefLogo from 'images/cookedChef.jpg'\r\nimport vitosLogo from 'images/vitosLogo.jpg'\r\n\r\nexport const formatDate = (date) => {\r\n  if (date) {\r\n    const dateSplit = date.toString().split(' ')\r\n    return `${dateSplit[1]} ${dateSplit[2]}, ${dateSplit[3]}`\r\n  } else {\r\n    return date\r\n  }\r\n}\r\n\r\nexport const normalizeHour = date => {\r\n  if (date) {\r\n    const dateSplit = date.toString().split(' ')\r\n    const newDate = `${dateSplit[1]} ${dateSplit[2]}, ${dateSplit[3]}`\r\n    const dateArray = dateSplit[4].split(':')\r\n    if (dateArray[0] > 12) {\r\n      const hour = dateArray[0] - 12\r\n      return `${newDate} ${hour}:${dateArray[1]} PM`\r\n    } else {\r\n      if (parseInt(dateArray[0]) === 12) {\r\n        return `${newDate} ${dateArray[0]}:${dateArray[1]} PM`\r\n      } else {\r\n        return `${newDate} ${dateArray[0]}:${dateArray[1]} AM`\r\n      }\r\n    }\r\n  } else {\r\n    return date\r\n  }\r\n}\r\n\r\nconst PrintDocument = ({ orderSlipConfig = [], data, menu, totals, qty, subTotal }) => {\r\n  const checkData = (field) => {\r\n    let fieldData = ''\r\n    if (field === DATE_ORDER_PLACED) {\r\n      fieldData = formatDate(data[field])\r\n    } else if (field === DATE_START) {\r\n      fieldData = normalizeHour(data[field])\r\n    } else if (field === DATE_END) {\r\n      fieldData = normalizeHour(data[field])\r\n    } else {\r\n      fieldData = data[field]\r\n    }\r\n    return fieldData\r\n  }\r\n  return (\r\n    <Container>\r\n      <img src={cookedChefLogo} height={500} style={{ position: 'absolute', zIndex: '-999', opacity: '0.1' }} />\r\n      <Header>\r\n        <img src={vitosLogo} height={100} style={{ borderRadius: '50%' }} />\r\n        <h2 style={{ marginLeft: '1rem' }}>VITO'S GRILL</h2>\r\n      </Header>\r\n      <br />\r\n      {[\r\n        [ORDER_NO, BRANCH],\r\n        [STATUS, INDICATE_REASON],\r\n        [CUSTOMER, CONTACT_NUMBER],\r\n        [DATE_ORDER_PLACED, ORDER_VIA],\r\n        [DATE_START, DATE_END]].map((fieldName, index) => {\r\n          return (\r\n            <Body key={index}>\r\n              <Description>\r\n                <Label>{LABELS[fieldName[0]]}</Label>\r\n                <div>{checkData(fieldName[0])}</div>\r\n              </Description>\r\n              <Description>\r\n                <Label2>{LABELS[fieldName[1]]}</Label2>\r\n                <div>{checkData(fieldName[1])}</div>\r\n              </Description>\r\n            </Body>\r\n          )\r\n        })}\r\n      <Footer>\r\n        <table style={{ width: '100%' }}>\r\n          <tr style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', backgroundColor: 'pink', padding: '.5rem .5rem' }}>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n              Menu\r\n            </th>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n              Qty\r\n            </th>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n              Price\r\n            </th>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n              Amount\r\n            </th>\r\n          </tr>\r\n          {Object.keys(totals).map((total, index) => {\r\n            return totals[total]?.qty > 0\r\n              ? (\r\n                <tr key={index} style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', padding: '.5rem .5rem' }}>\r\n                  <td style={{ flex: '1' }}>\r\n                    {LABELS[total]}\r\n                  </td>\r\n                  <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                    {totals[total]?.qty}\r\n                  </td>\r\n                  <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    {totals[total]?.price}\r\n                  </td>\r\n                  <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    {(parseInt(totals[total]?.qty) * parseInt(totals[total]?.price)).toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              )\r\n              : null\r\n          })}\r\n\r\n        </table>\r\n        <table style={{ width: '100%' }}>\r\n          <tr style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', borderTop: '1px solid #eee', padding: '.5rem .5rem' }}>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n              Total\r\n            </th>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n              {qty}\r\n            </th>\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }} />\r\n            <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n              {subTotal}\r\n            </th>\r\n          </tr>\r\n        </table>\r\n      </Footer>\r\n    </Container>\r\n  )\r\n}\r\nexport default (props) => {\r\n  return (\r\n    <Print\r\n      component={<PrintDocument {...props} />}\r\n      button='Print'\r\n    />\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\containers\\1.payment_transaction\\index.js",["412","413"],"import React, { useEffect, useState } from 'react'\r\nimport ScheduleComponent from 'components/SchedulerComponent'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  DASHBOARD,\r\n  PAYMENT_TRANSACTION\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Table from 'components/Table'\r\nimport { clearTable, setTable, updateTable } from 'components/Table/tableSlice'\r\nimport db from 'services/firebase'\r\nimport { ACCOUNT_NAME, BRANCH, CONTACT_NUMBER, CUSTOMER, DATE_END, DATE_ORDER_PLACED, DATE_START, LABELS, ORDER_NO } from 'components/SchedulerComponent/orderSlip/types'\r\nimport { SCHEDULES } from 'services/collectionNames'\r\nimport { formatDate, normalizeHour } from 'components/print'\r\nimport PaymentDetails from 'components/PaymentDetails'\r\nimport getAmount from 'commonFunctions/getAmount'\r\nimport calculateSubTotal from 'commonFunctions/calculateSubTotal'\r\nimport { menu } from 'components/SchedulerComponent/orderSlip/orderSlip'\r\nimport { ACCOUNT_NUMBER, AMOUNT_PAID, DATE_PAYMENT, MODE_PAYMENT, PAYMENT_LABELS, SOURCE } from 'components/PaymentDetails/types'\r\nconst formatDateFromFirebase = date => {\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nfunction UserMasterfile () {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n  const [openId, setOpenId] = useState('')\r\n  const [columnWidth, setColumnWidth] = useState('')\r\n\r\n  const widths = {\r\n    [BRANCH]: '120',\r\n    [ORDER_NO]: '200',\r\n    [DATE_ORDER_PLACED]: '150',\r\n    [ACCOUNT_NAME]: '150',\r\n    [CUSTOMER]: '200',\r\n    [CONTACT_NUMBER]: '150',\r\n    [DATE_START]: '200',\r\n    [DATE_END]: '200',\r\n    [DATE_PAYMENT]: '200',\r\n    [MODE_PAYMENT]: '200',\r\n    [SOURCE]: '200',\r\n    [ACCOUNT_NUMBER]: '200',\r\n    [AMOUNT_PAID]: '200'\r\n  }\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD, PAYMENT_TRANSACTION]))\r\n    const unsubscribe = db.collection(SCHEDULES).onSnapshot(function (snapshot) {\r\n      const rows = []\r\n      const headers = [...[ORDER_NO, BRANCH, DATE_ORDER_PLACED, ACCOUNT_NAME, CUSTOMER, CONTACT_NUMBER, DATE_START, DATE_END].map(fieldName => {\r\n        return {\r\n          field: fieldName,\r\n          headerText: LABELS[fieldName],\r\n          width: widths[fieldName]\r\n        }\r\n      }),\r\n      {\r\n        field: 'totalQty',\r\n        headerText: 'Total Qty'\r\n      },\r\n      {\r\n        field: 'totalAmount',\r\n        headerText: 'Total Amount'\r\n      },\r\n      ...[DATE_PAYMENT, MODE_PAYMENT, SOURCE, ACCOUNT_NUMBER, AMOUNT_PAID].map(fieldName => {\r\n        return {\r\n          field: fieldName,\r\n          headerText: PAYMENT_LABELS[fieldName],\r\n          width: widths[fieldName]\r\n        }\r\n      })\r\n      ]\r\n      for (const obj of snapshot.docChanges()) {\r\n        if (obj.type === 'modified') {\r\n          const data = obj.doc.data()\r\n          const dateOrderPlaced = formatDateFromFirebase(data[DATE_ORDER_PLACED])\r\n          const dateStart = formatDateFromFirebase(data[DATE_START])\r\n          const dateEnd = formatDateFromFirebase(data[DATE_END])\r\n          const datePayment = typeof data[DATE_PAYMENT] !== 'undefined' ? formatDateFromFirebase(data[DATE_PAYMENT]) : ''\r\n          const totals = {}\r\n          for (const field of menu) {\r\n            totals[field] = { qty: data[field], price: getAmount(field) }\r\n          }\r\n          const result = calculateSubTotal(totals)\r\n          const newData = {\r\n            ...data,\r\n            _id: obj.doc.id,\r\n            [DATE_ORDER_PLACED]: formatDate(dateOrderPlaced),\r\n            [DATE_START]: normalizeHour(dateStart),\r\n            [DATE_END]: normalizeHour(dateEnd),\r\n            [DATE_PAYMENT]: datePayment !== '' ? formatDate(datePayment) : '',\r\n            totalQty: result?.qty,\r\n            totalAmount: result?.subTotal\r\n          }\r\n          dispatch(updateTable({ data: newData, id: obj.doc.id }))\r\n        } else if (obj.type === 'added') {\r\n          const data = obj.doc.data()\r\n          const dateOrderPlaced = formatDateFromFirebase(data[DATE_ORDER_PLACED])\r\n          const dateStart = formatDateFromFirebase(data[DATE_START])\r\n          const dateEnd = formatDateFromFirebase(data[DATE_END])\r\n          const datePayment = typeof data[DATE_PAYMENT] !== 'undefined' ? formatDateFromFirebase(data[DATE_PAYMENT]) : ''\r\n          const totals = {}\r\n          for (const field of menu) {\r\n            totals[field] = { qty: data[field], price: getAmount(field) }\r\n          }\r\n          const result = calculateSubTotal(totals)\r\n          rows.push({\r\n            ...data,\r\n            _id: obj.doc.id,\r\n            [DATE_ORDER_PLACED]: formatDate(dateOrderPlaced),\r\n            [DATE_START]: normalizeHour(dateStart),\r\n            [DATE_END]: normalizeHour(dateEnd),\r\n            [DATE_PAYMENT]: datePayment !== '' ? formatDate(datePayment) : '',\r\n            totalQty: result?.qty,\r\n            totalAmount: result?.subTotal\r\n          })\r\n        } else if (obj.type === 'removed') {\r\n          // dispatch(deleteTable({ _id: obj.doc.id }))\r\n        } else {\r\n          console.log('nothing', obj.type)\r\n        }\r\n      }\r\n      if (rows.length > 0) {\r\n        dispatch(setTable({ rows, headers }))\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearTable())\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setColumnWidth('500')\r\n      setColumnWidth('1600')\r\n    }, 2000)\r\n  }, [])\r\n\r\n  const sortSettings = {\r\n    columns: [{ field: ORDER_NO, direction: 'Ascending' }]\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Table toolbar={['Search']} rowSelected={(e) => setOpenId(e.data._id)} height='100%' width={columnWidth} sortSettings={sortSettings} />\r\n\r\n            {openId && <div style={{ position: 'fixed', top: '4.3rem', width: 'calc(100% - 320px)', height: '100%' }}><PaymentDetails id={openId} handleBack={() => setOpenId('')} /></div>}\r\n\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default UserMasterfile\r\n","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\index.js",["414","415","416"],"import { ACCOUNT_NAME, BRANCH, CONTACT_NUMBER, CUSTOMER, DATE_END, DATE_ORDER_PLACED, DATE_START, INDICATE_REASON, LABELS, ORDER_NO, ORDER_VIA, STATUS } from 'components/SchedulerComponent/orderSlip/types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { SCHEDULES } from 'services/collectionNames'\r\nimport db from 'services/firebase'\r\nimport { Wrapper, Container, Panel, Paper, Body, Description, Label, Label2, Actions } from './styles'\r\nimport { formatDate, normalizeHour } from 'components/print'\r\nimport { menu } from 'components/SchedulerComponent/orderSlip/orderSlip'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\nimport calculateSubTotal from 'commonFunctions/calculateSubTotal'\r\nimport getAmount from 'commonFunctions/getAmount'\r\nimport { Paymentform } from './paymentForm'\r\n\r\nconst formatDateFromFirebase = date => {\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nexport default function PaymentDetails (props) {\r\n  const [data, setData] = useState({})\r\n  const [totals, setTotals] = useState([])\r\n  const [subTotal, setSubTotal] = useState(0)\r\n  const [qty, setQty] = useState(0)\r\n  useEffect(() => {\r\n    loadData(props?.id)\r\n  }, [props?.id])\r\n\r\n  const loadData = (id) => {\r\n    db.collection(SCHEDULES).doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const firebaseData = doc.data()\r\n          setData({ ...firebaseData })\r\n          const totals = {}\r\n          for (const field of menu) {\r\n            totals[field] = { qty: firebaseData[field], price: getAmount(field) }\r\n          }\r\n          setTotals({\r\n            ...totals\r\n          })\r\n          const result = calculateSubTotal(totals)\r\n          setQty(result?.qty)\r\n          setSubTotal(result?.subTotal)\r\n        } else {\r\n          console.log('No such document!')\r\n        }\r\n      }).catch((error) => {\r\n        console.log('Error getting document:', error)\r\n      })\r\n  }\r\n\r\n  const checkData = (field) => {\r\n    let fieldData = ''\r\n    if (typeof data[field] !== 'undefined') {\r\n      if (field === DATE_ORDER_PLACED) {\r\n        fieldData = formatDate(formatDateFromFirebase(data[field]))\r\n      } else if (field === DATE_START) {\r\n        fieldData = normalizeHour(formatDateFromFirebase(data[field]))\r\n      } else if (field === DATE_END) {\r\n        fieldData = normalizeHour(formatDateFromFirebase(data[field]))\r\n      } else {\r\n        fieldData = data[field]\r\n      }\r\n    }\r\n    return fieldData\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Actions>\r\n        <button onClick={props.handleBack} style={{ border: 'none', backgroundColor: 'transparent', cursor: 'pointer' }}>\r\n          <BiArrowBack size={20} />\r\n        </button>\r\n      </Actions>\r\n      <Container>\r\n        <Panel>\r\n          <Paper>\r\n            <h3>Order Details</h3>\r\n            <div>\r\n              {data && [\r\n                [ORDER_NO, BRANCH],\r\n                [ACCOUNT_NAME, CONTACT_NUMBER],\r\n                [DATE_ORDER_PLACED, ORDER_VIA],\r\n                [DATE_START, DATE_END]].map((fieldName, index) => {\r\n                return (\r\n                    <Body key={index}>\r\n                      <Description>\r\n                        <Label>{LABELS[fieldName[0]]}</Label>\r\n                        <div>{checkData(fieldName[0])}</div>\r\n                      </Description>\r\n                      <Description>\r\n                        <Label2>{LABELS[fieldName[1]]}</Label2>\r\n                        <div>{checkData(fieldName[1])}</div>\r\n                      </Description>\r\n                    </Body>\r\n                )\r\n              })}\r\n            </div>\r\n            <div>\r\n              <table style={{ width: '100%' }}>\r\n                <tr style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', backgroundColor: 'pink', padding: '.5rem .5rem' }}>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                    Menu\r\n                  </th>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                    Qty\r\n                  </th>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    Price\r\n                  </th>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n                {Object.keys(totals).map((total, index) => {\r\n                  return totals[total]?.qty > 0\r\n                    ? (\r\n                      <tr key={index} style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', padding: '.5rem .5rem' }}>\r\n                        <td style={{ flex: '1' }}>\r\n                          {LABELS[total]}\r\n                        </td>\r\n                        <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                          {totals[total]?.qty}\r\n                        </td>\r\n                        <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                          {totals[total]?.price}\r\n                        </td>\r\n                        <td style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                          {(parseInt(totals[total]?.qty) * parseInt(totals[total]?.price)).toFixed(2)}\r\n                        </td>\r\n                      </tr>\r\n                      )\r\n                    : null\r\n                })}\r\n\r\n              </table>\r\n              <table style={{ width: '100%' }}>\r\n                <tr style={{ display: 'flex', justifyContent: 'flex-start', width: '100%', borderTop: '1px solid #eee', padding: '.5rem .5rem' }}>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                    Total\r\n                  </th>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-start' }}>\r\n                    {qty}\r\n                  </th>\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }} />\r\n                  <th style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    {subTotal}\r\n                  </th>\r\n                </tr>\r\n              </table>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </Paper>\r\n        </Panel>\r\n        <Panel>\r\n          <Paper>\r\n            <h3>Payment Details</h3>\r\n            <div>\r\n              <Paymentform id={props?.id} subTotal={subTotal} onBack={props.handleBack} />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </Paper>\r\n        </Panel>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\styles.js",[],"D:\\Projects\\scheduler\\src\\commonFunctions\\calculateSubTotal.js",["417"],"export default (totals) => {\r\n  const newTotals = { ...totals }\r\n  let qty = 0\r\n  let price = 0\r\n  for (const key in newTotals) {\r\n    const totalPrice = parseInt(totals[key].price) * parseInt(totals[key].qty)\r\n    qty += parseInt(totals[key].qty)\r\n    price += totalPrice\r\n  }\r\n  return { qty, subTotal: price.toFixed(2) }\r\n}\r\n","D:\\Projects\\scheduler\\src\\commonFunctions\\getAmount.js",[],"D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\types.js",[],"D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\paymentForm.js",["418","419","420"],"import React, { useEffect, useState } from 'react'\r\nimport fields from 'components/fields'\r\nimport { DATE_PICKER, DROP_DOWN_LIST, INPUT, NUMBER } from 'components/fields/types'\r\nimport { ACCOUNT_NUMBER, AMOUNT_PAID, DATE_PAYMENT, MODE_PAYMENT, PAYMENT_LABELS, REF_NO, SOURCE } from './types'\r\nimport { Container, Wrapper } from './styles'\r\nimport CustomDialog from 'components/dialog'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { Button } from 'antd'\r\nimport { SCHEDULES } from 'services/collectionNames'\r\nimport { updateData } from 'services'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectTableSlice } from 'components/Table/tableSlice'\r\nimport { useGetDropdowns } from 'components/PaymentDetails/dropdowns'\r\n\r\nexport function Paymentform (props) {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const [others, setOthers] = useState({ 'Senior Citizen': 0 })\r\n  const [formFields, setFormFields] = useState({})\r\n  const [balance, setBalance] = useState(props?.subTotal)\r\n  const dropdowns = useGetDropdowns()\r\n\r\n  useEffect(() => {\r\n    setBalance(parseInt(props?.subTotal))\r\n    const newFormFields = {}\r\n    const newOthers = {}\r\n    const { dataList } = tableSlice\r\n    const data = dataList.find(row => row._id === props?.id)\r\n    for (const obj of config) {\r\n      newFormFields[obj?.name] = typeof data[obj?.name] !== 'undefined' ? data[obj?.name] : ''\r\n    }\r\n    for (const key in data.others) {\r\n      newOthers[key] = data.others[key]\r\n    }\r\n    setOthers(newOthers)\r\n    setFormFields(newFormFields)\r\n    calculateBalance()\r\n  }, [props?.subTotal, props?.id])\r\n\r\n  useEffect(() => {\r\n    calculateBalance()\r\n  }, [others, formFields[AMOUNT_PAID]])\r\n  const config = [\r\n    {\r\n      name: DATE_PAYMENT,\r\n      type: DATE_PICKER,\r\n      label: PAYMENT_LABELS[DATE_PAYMENT]\r\n    },\r\n    {\r\n      name: MODE_PAYMENT,\r\n      type: DROP_DOWN_LIST,\r\n      label: PAYMENT_LABELS[MODE_PAYMENT],\r\n      dataSource: dropdowns[MODE_PAYMENT]\r\n    },\r\n    {\r\n      name: SOURCE,\r\n      type: DROP_DOWN_LIST,\r\n      label: PAYMENT_LABELS[SOURCE],\r\n      dataSource: dropdowns[SOURCE]\r\n    },\r\n    {\r\n      name: REF_NO,\r\n      type: INPUT,\r\n      label: PAYMENT_LABELS[REF_NO]\r\n    },\r\n    {\r\n      name: ACCOUNT_NUMBER,\r\n      type: DROP_DOWN_LIST,\r\n      label: PAYMENT_LABELS[ACCOUNT_NUMBER],\r\n      dataSource: dropdowns[ACCOUNT_NUMBER]\r\n    },\r\n    {\r\n      name: AMOUNT_PAID,\r\n      type: NUMBER,\r\n      label: PAYMENT_LABELS[AMOUNT_PAID]\r\n    }\r\n  ]\r\n\r\n  const calculateBalance = () => {\r\n    const amountPaid = formFields[AMOUNT_PAID]\r\n    const paid = isNaN(amountPaid) ? 0 : amountPaid === '' ? 0 : parseInt(amountPaid)\r\n    let newBalance = parseInt(props?.subTotal) - paid\r\n    for (const key in others) {\r\n      const value = others[key]\r\n      const discount = isNaN(value) ? 0 : value === '' ? 0 : parseInt(value)\r\n      newBalance = newBalance - discount\r\n    }\r\n    setBalance(newBalance)\r\n  }\r\n\r\n  const handleOthers = (data) => {\r\n    const newOthers = {}\r\n    for (const key in data) {\r\n      newOthers[data[key]] = 0\r\n    }\r\n    setOthers(newOthers)\r\n  }\r\n\r\n  const handleChange = (e, fieldName) => {\r\n    setOthers({ ...others, [fieldName]: e.target.value })\r\n  }\r\n\r\n  const handleChangeFormFields = (e, fieldName, type) => {\r\n    const value = type === DROP_DOWN_LIST ? e.value : e.target.value\r\n    setFormFields({ ...formFields, [fieldName]: value })\r\n  }\r\n\r\n  const handleRemove = (fieldName) => {\r\n    const newOthers = { ...others }\r\n    delete newOthers[fieldName]\r\n    setOthers(newOthers)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    updateData({ data: { ...formFields, [DATE_PAYMENT]: new Date(formFields[DATE_PAYMENT]), others }, collection: SCHEDULES, id: props?.id })\r\n    props.onBack()\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {config.map(customProps => {\r\n          return (\r\n            <Container key={customProps?.name}>\r\n              {fields[customProps?.type]({\r\n                ...customProps,\r\n                value: formFields[customProps?.name],\r\n                onChange: (e) => handleChangeFormFields(e, customProps?.name, customProps.type)\r\n              })}\r\n            </Container>\r\n          )\r\n        })}\r\n        <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: '1rem 0rem' }}>\r\n          <div style={{ flex: '1' }}>Others</div>\r\n          <div>\r\n            <CustomDialog label='Less' others={others} setOthers={handleOthers} />\r\n          </div>\r\n        </div>\r\n\r\n        {Object.keys(others).map((fieldName, index) => {\r\n          return (\r\n            <Container key={index}>\r\n              {fields[NUMBER]({ name: fieldName, label: fieldName, value: others[fieldName], onChange: (e) => handleChange(e, fieldName) })}\r\n\r\n              <div style={{ flex: '.2', display: 'flex', justifyContent: 'flex-end', width: '100%', alignItems: 'center' }}>\r\n                <Button type='secondary' shape='circle' icon={<AiOutlineMinus onClick={() => handleRemove(fieldName)} />} disabled={fieldName === 'Senior Citizen'} />\r\n              </div>\r\n            </Container>\r\n          )\r\n        })}\r\n        <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: '1rem 0rem' }}>\r\n          <div style={{ flex: '1' }}>Balance</div>\r\n          <div>{balance.toFixed(2)}</div>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Button type='primary' danger onClick={handleSubmit}> Submit</Button>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\dialog\\index.js",["421"],"import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button } from 'antd'\r\nimport fields from 'components/fields'\r\nimport { INPUT } from 'components/fields/types'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\n\r\nexport default function App (props) {\r\n  const [fieldNames, setFieldNames] = useState({})\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n    props.setOthers(fieldNames)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  const handleAdd = (index) => {\r\n    const newFieldNames = { ...fieldNames }\r\n    newFieldNames[index] = ''\r\n    setFieldNames(newFieldNames)\r\n  }\r\n\r\n  const handleChange = (e, index) => {\r\n    const newFieldNames = { ...fieldNames }\r\n    newFieldNames[index] = e.target.value\r\n    setFieldNames(newFieldNames)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props?.others) {\r\n      let count = 0\r\n      for (const key in props?.others) {\r\n        setFieldNames({ ...fieldNames, [count]: key })\r\n        count = count + 1\r\n      }\r\n    } else {\r\n      setFieldNames({ 0: '' })\r\n    }\r\n  }, [props?.others])\r\n  return (\r\n    <>\r\n      <Button type='primary' onClick={showModal} danger>\r\n        {props.label}\r\n      </Button>\r\n      <Modal title='Add fields' visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        {Object.keys(fieldNames).map((fieldName, index) => {\r\n          return (\r\n            <div key={index} style={{ display: 'flex' }}>\r\n              <div style={{ flex: '.8' }}>\r\n                {fields[INPUT]({ name: fieldName, value: fieldNames[index], onChange: (e) => handleChange(e, index) })}\r\n              </div>\r\n              <div style={{ flex: '.2', display: 'flex', justifyContent: 'flex-end', width: '100%' }}>\r\n                {Object.keys(fieldNames).length - 1 === index && <Button type='secondary' danger shape='circle' onClick={() => handleAdd(index + 1)} icon={<AiOutlinePlus />} />}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\fields\\number.js",[],"D:\\Projects\\scheduler\\src\\containers\\4.dropdown_masterfile\\index.js",["422","423"],"import React, { useState, useEffect } from 'react'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA,\r\n  DROPDOWN_MASTERFILE\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Dropdowns from 'components/dropdowns'\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([MASTER_DATA, DROPDOWN_MASTERFILE]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Dropdowns />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\dropdowns\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\dropdowns\\styles.js",[],"D:\\Projects\\scheduler\\src\\commonStyles\\index.js",[],"D:\\Projects\\scheduler\\src\\components\\dropdowns\\dropdown.js",["424"],"import fields from 'components/fields'\r\nimport Input from 'components/fields/input'\r\nimport { StyledDropdown, ChipContainer, Chips, Chip, ChipValue, ChipButton, Footer } from './styles'\r\nimport { INPUT } from 'components/fields/types'\r\nimport React, { useEffect } from 'react'\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai'\r\nimport { GrAdd } from 'react-icons/gr'\r\nimport { Button } from 'antd'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport { updateData } from 'services'\r\n\r\nexport default function Dropdown(props) {\r\n  const [isAddShowing, setIsAddShowing] = useState(true)\r\n  const [list, setList] = useState([])\r\n  const [name, setName] = useState('')\r\n  const [initialList, setInitialList] = useState([])\r\n\r\n  useEffect(() => {\r\n    setName(props.name)\r\n    setInitialList(props.list)\r\n  }, [])\r\n  const handleAddChip = (e) => {\r\n    if (e.target.value.trim() !== '') {\r\n      const addedList = [...list]\r\n      addedList.push(e.target.value)\r\n      setList(addedList)\r\n\r\n      const listCopy = [...props.list]\r\n      if (!props?.list.includes(e.target.value)) {\r\n        listCopy.push(e.target.value)\r\n      }\r\n      props.handleChangeList(listCopy)\r\n    }\r\n  }\r\n\r\n  const handleRemoveChip = (value) => {\r\n    const listCopy = [...props.list]\r\n    const newListCopy = listCopy.filter(data => data !== value)\r\n    props.handleChangeList(newListCopy)\r\n  }\r\n\r\n  const handleClose = (clickedButton) => {\r\n    if (clickedButton === 'discard') {\r\n      // const listCopy = [...props.list]\r\n      // const newListCopy = listCopy.filter(data => !list.includes(data))\r\n      props.handleToggleEdit(false, initialList, name, 'discard')\r\n    } else {\r\n      setName(props.name)\r\n      setInitialList(props.list)\r\n      props.handleToggleEdit(false)\r\n      const data = {\r\n        name: props.name,\r\n        list: props.list\r\n      }\r\n      const collection = 'dropdowns'\r\n      const id = props.id\r\n      updateData({ data, collection, id })\r\n    }\r\n    setList([])\r\n  }\r\n  return (\r\n    <StyledDropdown>\r\n      <div style={props.isEditable ? { width: '100%' } : { display: 'none' }}>\r\n        {fields[INPUT]({ label: 'Name', value: props.name, onChange: (e) => props.handleChange(e), isInline: true })}\r\n      </div>\r\n      <div style={!props.isEditable ? { width: '100%' } : { display: 'none' }}>\r\n        <label>Name: </label>\r\n        {props.name}\r\n      </div>\r\n      <br />\r\n      <ChipContainer>\r\n        <Chips>\r\n          {props?.list.map(listValue =>\r\n            <Chip key={listValue}>\r\n              <ChipValue>{listValue}</ChipValue>\r\n              <ChipButton onHover onClick={() => handleRemoveChip(listValue)} isEditable={props.isEditable}>\r\n                <AiOutlineCloseCircle />\r\n              </ChipButton>\r\n            </Chip>)}\r\n\r\n          <div style={!props.isEditable ? { display: 'none' } : {}}>\r\n            {isAddShowing\r\n              ? <Chip onHover>\r\n                <ChipValue onClick={() => setIsAddShowing(false)}>Add</ChipValue>\r\n                <ChipButton isEditable onClick={() => setIsAddShowing(false)}>\r\n                  <GrAdd />\r\n                </ChipButton>\r\n              </Chip>\r\n              : <Input onBlur={(e) => {\r\n                handleAddChip(e)\r\n                setIsAddShowing(true)\r\n              }}\r\n              />}\r\n\r\n          </div>\r\n        </Chips>\r\n\r\n      </ChipContainer>\r\n\r\n      <Footer display={!props.isEditable}>\r\n        <Button\r\n          size='small'\r\n          danger onClick={props.handleRemove}\r\n        >Remove\r\n        </Button>\r\n        <Button\r\n          size='small'\r\n          type='primary'\r\n          danger onClick={() => props.handleToggleEdit(true)}\r\n        >Edit\r\n        </Button>\r\n      </Footer>\r\n      <Footer display={props.isEditable}>\r\n        <Button\r\n          size='small'\r\n          danger\r\n          onClick={() => handleClose('discard')}\r\n        >Discard\r\n        </Button>\r\n        <Button\r\n          disabled={!isAddShowing}\r\n          type='primary'\r\n          size='small'\r\n          danger onClick={() => handleClose()}\r\n        >Save\r\n        </Button>\r\n      </Footer>\r\n    </StyledDropdown>\r\n  )\r\n}\r\n","D:\\Projects\\scheduler\\src\\services\\dataHandlers\\getData.js",["425"],"import db from '../firebase'\r\nexport default function (collectionName, document = null) {\r\n  if (!document) {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collectionName).get().then((querySnapshot) => {\r\n        const data = []\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            data.push({ ...doc.data(), _id: doc.id })\r\n          } else {\r\n            console.log('No such document!')\r\n          }\r\n        })\r\n        resolve(data)\r\n      }).catch((error) => {\r\n        reject(error)\r\n        console.log('Error getting document:', error)\r\n      })\r\n    })\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collectionName).get(document).then()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            const data = doc.data()\r\n            resolve(data)\r\n          } else {\r\n            console.log('No such document!')\r\n          }\r\n        }).catch((error) => {\r\n          reject(error)\r\n          console.log('Error getting document:', error)\r\n        })\r\n    })\r\n  }\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\dropdowns\\tags.js",[],"D:\\Projects\\scheduler\\src\\components\\SchedulerComponent\\dropdowns.js",["426"],"import { useState, useEffect } from 'react'\r\nimport { BRANCH, ORDER_VIA, PAYMENT_MODE, STATUS } from './orderSlip/types'\r\nimport db from 'services/firebase'\r\nimport { getData } from 'services'\r\nimport { BRANCHES } from 'services/collectionNames'\r\n\r\nconst getWhereData = (name) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('dropdowns')\r\n      .where('name', '==', name)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            const data = doc.data()\r\n            resolve(data.list)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        resolve([])\r\n      }).catch((error) => {\r\n        console.log('Error getting document:', error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nconst getBranch = async () => {\r\n  const data = []\r\n  const result = await getData(BRANCHES)\r\n  for (const obj of result) {\r\n    data.push(obj?.branchName)\r\n  }\r\n  return data\r\n}\r\n\r\nexport function useGetDropdowns () {\r\n  const [dropdowns, setDropdowns] = useState({\r\n    [STATUS]: [],\r\n    [PAYMENT_MODE]: [],\r\n    [ORDER_VIA]: [],\r\n    [BRANCH]: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [])\r\n\r\n  const loadDropdowns = async () => {\r\n    const status = await getWhereData(STATUS)\r\n    const orderVia = await getWhereData(ORDER_VIA)\r\n    const paymentMode = await getWhereData(PAYMENT_MODE)\r\n    const branch = await getBranch()\r\n    setDropdowns({ ...dropdowns, [STATUS]: status, [ORDER_VIA]: orderVia, [PAYMENT_MODE]: paymentMode, [BRANCH]: branch })\r\n  }\r\n  return dropdowns\r\n}\r\n","D:\\Projects\\scheduler\\src\\components\\PaymentDetails\\dropdowns.js",["427"],"import { useState, useEffect } from 'react'\r\nimport db from 'services/firebase'\r\nimport { ACCOUNT_NUMBER, MODE_PAYMENT, SOURCE } from './types'\r\n\r\nconst getWhereData = (name) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection('dropdowns')\r\n      .where('name', '==', name)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            const data = doc.data()\r\n            resolve(data.list)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        resolve([])\r\n      }).catch((error) => {\r\n        console.log('Error getting document:', error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport function useGetDropdowns() {\r\n  const [dropdowns, setDropdowns] = useState({\r\n    [SOURCE]: [],\r\n    [MODE_PAYMENT]: [],\r\n    [ACCOUNT_NUMBER]: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [])\r\n\r\n  const loadDropdowns = async () => {\r\n    const source = await getWhereData(SOURCE)\r\n    const accountNumber = await getWhereData(ACCOUNT_NUMBER)\r\n    const modePayment = await getWhereData(MODE_PAYMENT)\r\n    setDropdowns({ ...dropdowns, [SOURCE]: source, [ACCOUNT_NUMBER]: accountNumber, [MODE_PAYMENT]: modePayment })\r\n  }\r\n  return dropdowns\r\n}\r\n",{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":26,"column":15,"nodeType":"434","messageId":"435","endLine":26,"endColumn":18},{"ruleId":"436","severity":1,"message":"437","line":41,"column":6,"nodeType":"438","endLine":41,"endColumn":8,"suggestions":"439"},{"ruleId":"432","severity":1,"message":"440","line":14,"column":3,"nodeType":"434","messageId":"435","endLine":14,"endColumn":13},{"ruleId":"432","severity":1,"message":"441","line":21,"column":8,"nodeType":"434","messageId":"435","endLine":21,"endColumn":18},{"ruleId":"432","severity":1,"message":"442","line":34,"column":13,"nodeType":"434","messageId":"435","endLine":34,"endColumn":18},{"ruleId":"432","severity":1,"message":"443","line":36,"column":13,"nodeType":"434","messageId":"435","endLine":36,"endColumn":17},{"ruleId":"432","severity":1,"message":"444","line":41,"column":13,"nodeType":"434","messageId":"435","endLine":41,"endColumn":22},{"ruleId":"432","severity":1,"message":"445","line":42,"column":13,"nodeType":"434","messageId":"435","endLine":42,"endColumn":25},{"ruleId":"432","severity":1,"message":"446","line":44,"column":13,"nodeType":"434","messageId":"435","endLine":44,"endColumn":18},{"ruleId":"432","severity":1,"message":"447","line":46,"column":13,"nodeType":"434","messageId":"435","endLine":46,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":60,"column":6,"nodeType":"438","endLine":60,"endColumn":8,"suggestions":"448"},{"ruleId":"432","severity":1,"message":"449","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":45,"column":6,"nodeType":"438","endLine":45,"endColumn":8,"suggestions":"450"},{"ruleId":"436","severity":1,"message":"437","line":22,"column":6,"nodeType":"438","endLine":22,"endColumn":8,"suggestions":"451"},{"ruleId":"452","severity":1,"message":"453","line":10,"column":1,"nodeType":"454","endLine":50,"endColumn":2},{"ruleId":"432","severity":1,"message":"455","line":6,"column":3,"nodeType":"434","messageId":"435","endLine":6,"endColumn":9},{"ruleId":"432","severity":1,"message":"456","line":8,"column":3,"nodeType":"434","messageId":"435","endLine":8,"endColumn":14},{"ruleId":"432","severity":1,"message":"457","line":13,"column":3,"nodeType":"434","messageId":"435","endLine":13,"endColumn":12},{"ruleId":"432","severity":1,"message":"458","line":16,"column":3,"nodeType":"434","messageId":"435","endLine":16,"endColumn":9},{"ruleId":"432","severity":1,"message":"459","line":21,"column":10,"nodeType":"434","messageId":"435","endLine":21,"endColumn":17},{"ruleId":"432","severity":1,"message":"460","line":1,"column":28,"nodeType":"434","messageId":"435","endLine":1,"endColumn":36},{"ruleId":"432","severity":1,"message":"461","line":29,"column":3,"nodeType":"434","messageId":"435","endLine":29,"endColumn":5},{"ruleId":"432","severity":1,"message":"462","line":30,"column":3,"nodeType":"434","messageId":"435","endLine":30,"endColumn":10},{"ruleId":"432","severity":1,"message":"463","line":32,"column":3,"nodeType":"434","messageId":"435","endLine":32,"endColumn":17},{"ruleId":"432","severity":1,"message":"464","line":33,"column":3,"nodeType":"434","messageId":"435","endLine":33,"endColumn":8},{"ruleId":"432","severity":1,"message":"465","line":35,"column":3,"nodeType":"434","messageId":"435","endLine":35,"endColumn":9},{"ruleId":"432","severity":1,"message":"466","line":38,"column":10,"nodeType":"434","messageId":"435","endLine":38,"endColumn":24},{"ruleId":"432","severity":1,"message":"467","line":39,"column":8,"nodeType":"434","messageId":"435","endLine":39,"endColumn":25},{"ruleId":"432","severity":1,"message":"468","line":39,"column":29,"nodeType":"434","messageId":"435","endLine":39,"endColumn":46},{"ruleId":"432","severity":1,"message":"469","line":40,"column":8,"nodeType":"434","messageId":"435","endLine":40,"endColumn":16},{"ruleId":"436","severity":1,"message":"470","line":90,"column":6,"nodeType":"438","endLine":90,"endColumn":8,"suggestions":"471"},{"ruleId":"436","severity":1,"message":"437","line":113,"column":6,"nodeType":"438","endLine":113,"endColumn":8,"suggestions":"472"},{"ruleId":"473","severity":1,"message":"474","line":85,"column":11,"nodeType":"475","endLine":85,"endColumn":38},{"ruleId":"452","severity":1,"message":"476","line":1,"column":1,"nodeType":"454","endLine":25,"endColumn":2},{"ruleId":"432","severity":1,"message":"461","line":9,"column":3,"nodeType":"434","messageId":"435","endLine":9,"endColumn":5},{"ruleId":"432","severity":1,"message":"462","line":15,"column":3,"nodeType":"434","messageId":"435","endLine":15,"endColumn":10},{"ruleId":"432","severity":1,"message":"464","line":26,"column":3,"nodeType":"434","messageId":"435","endLine":26,"endColumn":8},{"ruleId":"432","severity":1,"message":"465","line":41,"column":3,"nodeType":"434","messageId":"435","endLine":41,"endColumn":9},{"ruleId":"452","severity":1,"message":"476","line":74,"column":1,"nodeType":"454","endLine":116,"endColumn":2},{"ruleId":"432","severity":1,"message":"464","line":5,"column":3,"nodeType":"434","messageId":"435","endLine":5,"endColumn":8},{"ruleId":"432","severity":1,"message":"465","line":6,"column":3,"nodeType":"434","messageId":"435","endLine":6,"endColumn":9},{"ruleId":"432","severity":1,"message":"461","line":7,"column":3,"nodeType":"434","messageId":"435","endLine":7,"endColumn":5},{"ruleId":"432","severity":1,"message":"462","line":8,"column":3,"nodeType":"434","messageId":"435","endLine":8,"endColumn":10},{"ruleId":"452","severity":1,"message":"476","line":33,"column":1,"nodeType":"454","endLine":66,"endColumn":2},{"ruleId":"432","severity":1,"message":"461","line":13,"column":3,"nodeType":"434","messageId":"435","endLine":13,"endColumn":5},{"ruleId":"432","severity":1,"message":"462","line":19,"column":3,"nodeType":"434","messageId":"435","endLine":19,"endColumn":10},{"ruleId":"432","severity":1,"message":"464","line":30,"column":3,"nodeType":"434","messageId":"435","endLine":30,"endColumn":8},{"ruleId":"432","severity":1,"message":"477","line":34,"column":3,"nodeType":"434","messageId":"435","endLine":34,"endColumn":5},{"ruleId":"432","severity":1,"message":"478","line":45,"column":3,"nodeType":"434","messageId":"435","endLine":45,"endColumn":8},{"ruleId":"432","severity":1,"message":"465","line":46,"column":3,"nodeType":"434","messageId":"435","endLine":46,"endColumn":9},{"ruleId":"452","severity":1,"message":"453","line":79,"column":1,"nodeType":"454","endLine":395,"endColumn":2},{"ruleId":"432","severity":1,"message":"479","line":16,"column":3,"nodeType":"434","messageId":"435","endLine":16,"endColumn":8},{"ruleId":"432","severity":1,"message":"480","line":17,"column":3,"nodeType":"434","messageId":"435","endLine":17,"endColumn":9},{"ruleId":"432","severity":1,"message":"481","line":18,"column":3,"nodeType":"434","messageId":"435","endLine":18,"endColumn":8},{"ruleId":"436","severity":1,"message":"482","line":116,"column":6,"nodeType":"438","endLine":116,"endColumn":42,"suggestions":"483"},{"ruleId":"452","severity":1,"message":"476","line":3,"column":1,"nodeType":"454","endLine":11,"endColumn":2},{"ruleId":"432","severity":1,"message":"484","line":5,"column":9,"nodeType":"434","messageId":"435","endLine":5,"endColumn":21},{"ruleId":"452","severity":1,"message":"476","line":3,"column":1,"nodeType":"454","endLine":14,"endColumn":2},{"ruleId":"452","severity":1,"message":"476","line":3,"column":1,"nodeType":"454","endLine":17,"endColumn":2},{"ruleId":"432","severity":1,"message":"460","line":1,"column":28,"nodeType":"434","messageId":"435","endLine":1,"endColumn":36},{"ruleId":"432","severity":1,"message":"485","line":30,"column":22,"nodeType":"434","messageId":"435","endLine":30,"endColumn":35},{"ruleId":"436","severity":1,"message":"486","line":66,"column":6,"nodeType":"438","endLine":66,"endColumn":18,"suggestions":"487"},{"ruleId":"488","severity":1,"message":"489","line":92,"column":40,"nodeType":"490","messageId":"491","endLine":92,"endColumn":42},{"ruleId":"428","replacedBy":"492"},{"ruleId":"430","replacedBy":"493"},{"ruleId":"432","severity":1,"message":"494","line":17,"column":10,"nodeType":"434","messageId":"435","endLine":17,"endColumn":21},{"ruleId":"432","severity":1,"message":"495","line":18,"column":10,"nodeType":"434","messageId":"435","endLine":18,"endColumn":19},{"ruleId":"432","severity":1,"message":"496","line":19,"column":10,"nodeType":"434","messageId":"435","endLine":19,"endColumn":21},{"ruleId":"452","severity":1,"message":"476","line":6,"column":1,"nodeType":"454","endLine":55,"endColumn":2},{"ruleId":"488","severity":1,"message":"489","line":20,"column":49,"nodeType":"490","messageId":"491","endLine":20,"endColumn":51},{"ruleId":"452","severity":1,"message":"476","line":25,"column":1,"nodeType":"454","endLine":31,"endColumn":2},{"ruleId":"473","severity":1,"message":"474","line":52,"column":7,"nodeType":"475","endLine":52,"endColumn":113},{"ruleId":"473","severity":1,"message":"474","line":54,"column":9,"nodeType":"475","endLine":54,"endColumn":77},{"ruleId":"452","severity":1,"message":"497","line":133,"column":1,"nodeType":"454","endLine":140,"endColumn":2},{"ruleId":"432","severity":1,"message":"449","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":25},{"ruleId":"436","severity":1,"message":"498","line":134,"column":6,"nodeType":"438","endLine":134,"endColumn":8,"suggestions":"499"},{"ruleId":"432","severity":1,"message":"500","line":1,"column":48,"nodeType":"434","messageId":"435","endLine":1,"endColumn":56},{"ruleId":"432","severity":1,"message":"501","line":1,"column":99,"nodeType":"434","messageId":"435","endLine":1,"endColumn":114},{"ruleId":"432","severity":1,"message":"502","line":1,"column":145,"nodeType":"434","messageId":"435","endLine":1,"endColumn":151},{"ruleId":"452","severity":1,"message":"497","line":1,"column":1,"nodeType":"454","endLine":11,"endColumn":2},{"ruleId":"436","severity":1,"message":"503","line":37,"column":6,"nodeType":"438","endLine":37,"endColumn":34,"suggestions":"504"},{"ruleId":"436","severity":1,"message":"505","line":41,"column":6,"nodeType":"438","endLine":41,"endColumn":39,"suggestions":"506"},{"ruleId":"436","severity":1,"message":"507","line":41,"column":15,"nodeType":"508","endLine":41,"endColumn":38},{"ruleId":"436","severity":1,"message":"509","line":46,"column":6,"nodeType":"438","endLine":46,"endColumn":21,"suggestions":"510"},{"ruleId":"452","severity":1,"message":"476","line":14,"column":1,"nodeType":"454","endLine":35,"endColumn":2},{"ruleId":"436","severity":1,"message":"437","line":20,"column":6,"nodeType":"438","endLine":20,"endColumn":8,"suggestions":"511"},{"ruleId":"436","severity":1,"message":"512","line":21,"column":6,"nodeType":"438","endLine":21,"endColumn":8,"suggestions":"513"},{"ruleId":"452","severity":1,"message":"476","line":2,"column":1,"nodeType":"454","endLine":36,"endColumn":2},{"ruleId":"436","severity":1,"message":"514","line":48,"column":6,"nodeType":"438","endLine":48,"endColumn":8,"suggestions":"515"},{"ruleId":"436","severity":1,"message":"514","line":36,"column":6,"nodeType":"438","endLine":36,"endColumn":8,"suggestions":"516"},"no-native-reassign",["517"],"no-negated-in-lhs",["518"],"no-unused-vars","'uid' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["519"],"'Background' is defined but never used.","'background' is defined but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.",["520"],"'ScheduleComponent' is defined but never used.",["521"],["522"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Resize' is defined but never used.","'ContextMenu' is defined but never used.","'PdfExport' is defined but never used.","'Search' is defined but never used.","'addData' is defined but never used.","'useState' is defined but never used.","'BC' is defined but never used.","'BC_HALF' is defined but never used.","'CONTACT_NUMBER' is defined but never used.","'EIGHT' is defined but never used.","'TWELVE' is defined but never used.","'DROPDOWN_DATAS' is defined but never used.","'identifyDateRange' is defined but never used.","'getDaysInMonthUTC' is defined but never used.","'Backdrop' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'setLoading'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["523"],["524"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unexpected default export of anonymous function","'ID' is defined but never used.","'TOTAL' is defined but never used.","'FBC_4' is defined but never used.","'FCH_12' is defined but never used.","'FCH_8' is defined but never used.","React Hook useEffect has missing dependencies: 'branchValue', 'dateValue', and 'handleFiltering'. Either include them or remove the dependency array.",["525"],"'setWithMerge' is assigned a value but never used.","'clearOrderNos' is defined but never used.","React Hook useEffect has missing dependencies: 'countLibis' and 'countRonac'. Either include them or remove the dependency array.",["526"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["517"],["518"],"'Description' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'dispatch' and 'widths'. Either include them or remove the dependency array.",["527"],"'CUSTOMER' is defined but never used.","'INDICATE_REASON' is defined but never used.","'STATUS' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateBalance', 'config', and 'tableSlice'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has a missing dependency: 'calculateBalance'. Either include it or remove the dependency array.",["529"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has a missing dependency: 'fieldNames'. Either include it or remove the dependency array. You can also do a functional update 'setFieldNames(f => ...)' if you only need 'fieldNames' in the 'setFieldNames' call.",["530"],["531"],"React Hook useEffect has missing dependencies: 'props.list' and 'props.name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.",["532"],"React Hook useEffect has a missing dependency: 'loadDropdowns'. Either include it or remove the dependency array.",["533"],["534"],"no-global-assign","no-unsafe-negation",{"desc":"535","fix":"536"},{"desc":"535","fix":"537"},{"desc":"535","fix":"538"},{"desc":"535","fix":"539"},{"desc":"540","fix":"541"},{"desc":"535","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"535","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"558","fix":"560"},"Update the dependencies array to be: [dispatch]",{"range":"561","text":"562"},{"range":"563","text":"562"},{"range":"564","text":"562"},{"range":"565","text":"562"},"Update the dependencies array to be: [dispatch, setLoading]",{"range":"566","text":"567"},{"range":"568","text":"562"},"Update the dependencies array to be: [branchValue, dateValue, handleFiltering, schedulerComponentSlice.dataSource]",{"range":"569","text":"570"},"Update the dependencies array to be: [countLibis, countRonac, dataSource]",{"range":"571","text":"572"},"Update the dependencies array to be: [dispatch, widths]",{"range":"573","text":"574"},"Update the dependencies array to be: [props?.subTotal, props?.id, tableSlice, calculateBalance, config]",{"range":"575","text":"576"},"Update the dependencies array to be: [calculateBalance, others]",{"range":"577","text":"578"},"Update the dependencies array to be: [fieldNames, props?.others]",{"range":"579","text":"580"},{"range":"581","text":"562"},"Update the dependencies array to be: [props.list, props.name]",{"range":"582","text":"583"},"Update the dependencies array to be: [loadDropdowns]",{"range":"584","text":"585"},{"range":"586","text":"585"},[1437,1439],"[dispatch]",[1932,1934],[1305,1307],[812,814],[2847,2849],"[dispatch, setLoading]",[3524,3526],[3960,3996],"[branchValue, dateValue, handleFiltering, schedulerComponentSlice.dataSource]",[1337,1349],"[countLibis, countRonac, dataSource]",[5515,5517],"[dispatch, widths]",[1577,1605],"[props?.subTotal, props?.id, tableSlice, calculateBalance, config]",[1660,1693],"[calculateBalance, others]",[1197,1212],"[fieldNames, props?.others]",[713,715],[821,823],"[props.list, props.name]",[1208,1210],"[loadDropdowns]",[909,911]]