[{"D:\\Projects\\Scheduler App\\scheduler\\src\\index.js":"1","D:\\Projects\\Scheduler App\\scheduler\\src\\App.js":"2","D:\\Projects\\Scheduler App\\scheduler\\src\\app\\store.js":"3","D:\\Projects\\Scheduler App\\scheduler\\src\\app\\types.js":"4","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\collectionNames.js":"5","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase.js":"6","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\sideNavSlice.js":"7","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\menuSlice.js":"8","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipSlice.js":"9","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\schedulerComponentSlice.js":"10","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\menuData.js":"11","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\Table\\tableSlice.js":"12","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\index.js":"13","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\1.grill_reservation\\index.js":"14","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\2.user_masterfile\\index.js":"15","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\backdrop\\index.js":"16","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\3.branch_mastefile\\index.js":"17","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\4.dropdown_masterfile\\index.js":"18","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\1.payment_transaction\\index.js":"19","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderNoDate.js":"20","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\styles.js":"21","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\updateData.js":"22","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\deleteData.js":"23","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\getData.js":"24","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\styles.js":"25","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\backdrop\\styles.js":"26","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\addData.js":"27","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlip.js":"28","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\types.js":"29","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\types.js":"30","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\calculateSubTotal.js":"31","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\getAmount.js":"32","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\index.js":"33","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\index.js":"34","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\Table\\index.js":"35","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\index.js":"36","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\index.js":"37","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\index.js":"38","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\index.js":"39","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\index.js":"40","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\dropdowns.js":"41","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipConfig.js":"42","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\grillMenus.js":"43","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\identifyDateRange.js":"44","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\formatDataSource.js":"45","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\paymentForm.js":"46","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\dropdown.js":"47","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\styles.js":"48","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\styles.js":"49","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\appBarStyles.js":"50","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\schedulerSchema.js":"51","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\print.js":"52","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\styles.js":"53","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\userCard.js":"54","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\styles.js":"55","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\0.container\\index.js":"56","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\index.js":"57","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\types.js":"58","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\ComponentToPrint.js":"59","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\edit.js":"60","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\0.container\\styles.js":"61","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\filteringPanel.js":"62","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\index.js":"63","D:\\Projects\\Scheduler App\\scheduler\\src\\commonStyles\\index.js":"64","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\dropdowns.js":"65","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\number.js":"66","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\datePicker.js":"67","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\chips.js":"68","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\input.js":"69","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\dropdownList.js":"70","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\dateTimePicker.js":"71","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\index.js":"72","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\1.banner\\index.js":"73","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\styles.js":"74","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dialog\\index.js":"75","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\tags\\index.js":"76","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\1.banner\\styles.js":"77","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\styles.js":"78","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\5.product_masterfile\\index.js":"79","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\index.js":"80","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\useGetProducts.js":"81","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\styles.js":"82","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\table.js":"83","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\textArea.js":"84","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\dropdownGroup.js":"85","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\useDropdownGroup.js":"86","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\useGetBranches.js":"87","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\useGetUsers.js":"88","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\useHandleModal.js":"89","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\formatDate.js":"90","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\sort.js":"91","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\uploads\\index.js":"92","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\uploads\\useGetUploads.js":"93","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\orderVia.js":"94","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\statusField.js":"95","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\useOrderViaField.js":"96","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\formatNumber.js":"97","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\index.js":"98","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\index.js":"99","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Styles\\index.js":"100","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\index.js":"101","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\Timepicker\\index.js":"102","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\styles.js":"103","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\RangePicker\\index.js":"104","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Panel\\styles.js":"105","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Panel\\index.js":"106","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\Select\\index.js":"107","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Controllers\\useSchedulerFilter.js":"108","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\dateFormat.js":"109","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Controllers\\FilteringPanelMethods.js":"110","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Constants\\schedules.js":"111","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Styles\\toggleableContainer.js":"112","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\index.js":"113","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\ComponentToPrint.js":"114","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\filteringPanelDocs.js":"115","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\styles.js":"116","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Controllers\\PrintMethods.js":"117","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Constants\\products.js":"118","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\sorting.js":"119","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\index.js":"120","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\index.js":"121","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Services\\index.js":"122","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\ProductServices.js":"123","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\useReports.js":"124","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\DropdownServices.js":"125","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\_dummy.js":"126","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\calculateTotalAmountPaid.js":"127","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\calculateTotalCost.js":"128","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\formatNumber.js":"129","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\6.reports\\index.js":"130","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\index.js":"131","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\exportService.js":"132","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\ExportService.js":"133","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\sumArray.js":"134","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\ExcelFormatter\\ExcelFormatter.js":"135","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\arrayFuntions.js":"136","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\ExcelFormatter\\ExcelConstantDataRow.js":"137","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\7.directAndThirdParty\\index.js":"138","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\index.js":"139","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\useDirectAndThirdParty.js":"140","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceListOfDates.js":"141","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceDataOfEachDate.js":"142","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceProductList.js":"143","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceTotalSumofItems.js":"144","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceReports.js":"145","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\ExcelFormatter\\ExcelFormatter.js":"146","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\ExcelFormatter\\ExcelConstantDataRow.js":"147","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\ItemizedExportService.js":"148","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\index.js":"149","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\index.js":"150","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\useProductServices.js":"151","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\viewProduct.js":"152","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\SchedulerServices.js":"153","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\produceTotalPurchases.js":"154","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\modal.js":"155","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\ReceivingReportServices.js":"156","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\8.inventory\\index.js":"157","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\index.js":"158","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\table.js":"159","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\useReceivedReport.js":"160","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\receivingProductReport.js":"161","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\generatedNoString.js":"162","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\modal.js":"163","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\editModal.js":"164","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\DiscountAndOthersDialog.js":"165","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\index.js":"166","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\useProductTableView.js":"167","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\ledgerView.js":"168","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\9.incidentReports\\index.js":"169","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\IncidentReports\\index.js":"170","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\Dashboard\\index.js":"171","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\incidentReportDocs.js":"172","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\index.js":"173","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\styles.js":"174","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\partnerMerchantModal.js":"175","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\10.dailyReports\\index.js":"176","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\dailyReportType.js":"177","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\index.js":"178","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\addMinusDay.js":"179","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\LiquidChart\\index.js":"180","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\checkDate.js":"181","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\servedReportType.js":"182","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\Dashboard\\datas.js":"183","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\styles.js":"184","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\partialModal.js":"185","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\PaymentTransactionPrint.js":"186","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\index.js":"187","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\styles.js":"188","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\validateEmail.js":"189","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\loginSlice.js":"190","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\loginSlice.js":"191","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\index.js":"192","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\styles.js":"193","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\getWeekOfDate.js":"194","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\UserInfoCard.js":"195","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\userInfoStyles.js":"196","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\index.js":"197","D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\rangeHandler.js":"198","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\SchedulesServicess.js":"199","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\base\\index.js":"200","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\DropdownServicess.js":"201","D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\findDataHandler.js":"202","D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\selectComponentHandler.js":"203","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\hook.js":"204","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\handleAutoFill.js":"205","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\groupPaymentPrint.js":"206"},{"size":927,"mtime":1612880302000,"results":"207","hashOfConfig":"208"},{"size":7021,"mtime":1630705951581,"results":"209","hashOfConfig":"208"},{"size":864,"mtime":1630148336475,"results":"210","hashOfConfig":"208"},{"size":345,"mtime":1619003529377,"results":"211","hashOfConfig":"208"},{"size":208,"mtime":1621195128250,"results":"212","hashOfConfig":"208"},{"size":883,"mtime":1630717991893,"results":"213","hashOfConfig":"208"},{"size":446,"mtime":1613208006000,"results":"214","hashOfConfig":"208"},{"size":552,"mtime":1616518542637,"results":"215","hashOfConfig":"208"},{"size":1581,"mtime":1627515728320,"results":"216","hashOfConfig":"208"},{"size":1513,"mtime":1614533720827,"results":"217","hashOfConfig":"208"},{"size":4900,"mtime":1628124492403,"results":"218","hashOfConfig":"208"},{"size":1640,"mtime":1627515728271,"results":"219","hashOfConfig":"208"},{"size":271,"mtime":1627515728360,"results":"220","hashOfConfig":"208"},{"size":2297,"mtime":1630842218852,"results":"221","hashOfConfig":"208"},{"size":1778,"mtime":1616478621556,"results":"222","hashOfConfig":"208"},{"size":252,"mtime":1613297674000,"results":"223","hashOfConfig":"208"},{"size":2422,"mtime":1615718971432,"results":"224","hashOfConfig":"208"},{"size":1197,"mtime":1617638466589,"results":"225","hashOfConfig":"208"},{"size":9927,"mtime":1628749139301,"results":"226","hashOfConfig":"208"},{"size":644,"mtime":1615104426470,"results":"227","hashOfConfig":"208"},{"size":3525,"mtime":1628304029695,"results":"228","hashOfConfig":"208"},{"size":373,"mtime":1627515728359,"results":"229","hashOfConfig":"208"},{"size":431,"mtime":1616088151541,"results":"230","hashOfConfig":"208"},{"size":1149,"mtime":1617656213757,"results":"231","hashOfConfig":"208"},{"size":501,"mtime":1630842219419,"results":"232","hashOfConfig":"208"},{"size":253,"mtime":1613305496000,"results":"233","hashOfConfig":"208"},{"size":789,"mtime":1616522096258,"results":"234","hashOfConfig":"208"},{"size":5204,"mtime":1630918193904,"results":"235","hashOfConfig":"208"},{"size":3465,"mtime":1619003529395,"results":"236","hashOfConfig":"208"},{"size":732,"mtime":1628129807057,"results":"237","hashOfConfig":"208"},{"size":328,"mtime":1627014515683,"results":"238","hashOfConfig":"208"},{"size":252,"mtime":1615135473307,"results":"239","hashOfConfig":"208"},{"size":61,"mtime":1612795178000,"results":"240","hashOfConfig":"208"},{"size":11327,"mtime":1630875244587,"results":"241","hashOfConfig":"208"},{"size":2485,"mtime":1615714906435,"results":"242","hashOfConfig":"208"},{"size":11876,"mtime":1627515728268,"results":"243","hashOfConfig":"208"},{"size":1938,"mtime":1617657810462,"results":"244","hashOfConfig":"208"},{"size":3485,"mtime":1630846496851,"results":"245","hashOfConfig":"208"},{"size":9645,"mtime":1619003529389,"results":"246","hashOfConfig":"208"},{"size":4186,"mtime":1617644861753,"results":"247","hashOfConfig":"208"},{"size":2005,"mtime":1627515728285,"results":"248","hashOfConfig":"208"},{"size":3764,"mtime":1627515728291,"results":"249","hashOfConfig":"208"},{"size":5724,"mtime":1630860358894,"results":"250","hashOfConfig":"208"},{"size":1038,"mtime":1612983962000,"results":"251","hashOfConfig":"208"},{"size":2382,"mtime":1630858845846,"results":"252","hashOfConfig":"208"},{"size":8758,"mtime":1629114873851,"results":"253","hashOfConfig":"208"},{"size":4099,"mtime":1617642063111,"results":"254","hashOfConfig":"208"},{"size":1821,"mtime":1617641725744,"results":"255","hashOfConfig":"208"},{"size":1104,"mtime":1617673159479,"results":"256","hashOfConfig":"208"},{"size":1828,"mtime":1615211864907,"results":"257","hashOfConfig":"208"},{"size":2897,"mtime":1627515728323,"results":"258","hashOfConfig":"208"},{"size":724,"mtime":1617652970389,"results":"259","hashOfConfig":"208"},{"size":161,"mtime":1616482832147,"results":"260","hashOfConfig":"208"},{"size":3255,"mtime":1617631687227,"results":"261","hashOfConfig":"208"},{"size":1175,"mtime":1628751272908,"results":"262","hashOfConfig":"208"},{"size":1018,"mtime":1628302986046,"results":"263","hashOfConfig":"208"},{"size":5528,"mtime":1619003529383,"results":"264","hashOfConfig":"208"},{"size":581,"mtime":1619003529388,"results":"265","hashOfConfig":"208"},{"size":144,"mtime":1614854336491,"results":"266","hashOfConfig":"208"},{"size":2435,"mtime":1616506020625,"results":"267","hashOfConfig":"208"},{"size":997,"mtime":1630712879160,"results":"268","hashOfConfig":"208"},{"size":7634,"mtime":1619799027918,"results":"269","hashOfConfig":"270"},{"size":63,"mtime":1611396980000,"results":"271","hashOfConfig":"208"},{"size":331,"mtime":1616478770713,"results":"272","hashOfConfig":"208"},{"size":2433,"mtime":1628751341774,"results":"273","hashOfConfig":"208"},{"size":393,"mtime":1615146808683,"results":"274","hashOfConfig":"208"},{"size":356,"mtime":1614528130337,"results":"275","hashOfConfig":"208"},{"size":595,"mtime":1611677782000,"results":"276","hashOfConfig":"208"},{"size":916,"mtime":1619003529385,"results":"277","hashOfConfig":"208"},{"size":2846,"mtime":1619003529382,"results":"278","hashOfConfig":"208"},{"size":784,"mtime":1619003529381,"results":"279","hashOfConfig":"208"},{"size":2368,"mtime":1628304029509,"results":"280","hashOfConfig":"208"},{"size":295,"mtime":1617627233600,"results":"281","hashOfConfig":"208"},{"size":567,"mtime":1612887668000,"results":"282","hashOfConfig":"270"},{"size":2563,"mtime":1627515728279,"results":"283","hashOfConfig":"208"},{"size":665,"mtime":1616505423040,"results":"284","hashOfConfig":"208"},{"size":454,"mtime":1612976482000,"results":"285","hashOfConfig":"208"},{"size":449,"mtime":1617008240264,"results":"286","hashOfConfig":"208"},{"size":1115,"mtime":1617030202019,"results":"287","hashOfConfig":"208"},{"size":1298,"mtime":1627515728282,"results":"288","hashOfConfig":"208"},{"size":549,"mtime":1617669108648,"results":"289","hashOfConfig":"208"},{"size":350,"mtime":1617042746980,"results":"290","hashOfConfig":"208"},{"size":3887,"mtime":1627515728284,"results":"291","hashOfConfig":"208"},{"size":751,"mtime":1628129990829,"results":"292","hashOfConfig":"208"},{"size":1690,"mtime":1617643947454,"results":"293","hashOfConfig":"208"},{"size":580,"mtime":1617644419221,"results":"294","hashOfConfig":"208"},{"size":730,"mtime":1617652753845,"results":"295","hashOfConfig":"208"},{"size":918,"mtime":1617657907810,"results":"296","hashOfConfig":"208"},{"size":406,"mtime":1617657574033,"results":"297","hashOfConfig":"208"},{"size":466,"mtime":1619943147402,"results":"298","hashOfConfig":"208"},{"size":91,"mtime":1617668723648,"results":"299","hashOfConfig":"208"},{"size":619,"mtime":1617779152923,"results":"300","hashOfConfig":"208"},{"size":2879,"mtime":1617864538295,"results":"301","hashOfConfig":"208"},{"size":3063,"mtime":1619003529386,"results":"302","hashOfConfig":"208"},{"size":2249,"mtime":1619003529386,"results":"303","hashOfConfig":"208"},{"size":1709,"mtime":1627515728321,"results":"304","hashOfConfig":"208"},{"size":251,"mtime":1619003529378,"results":"305","hashOfConfig":"208"},{"size":116,"mtime":1627515728249,"results":"306","hashOfConfig":"208"},{"size":2748,"mtime":1627515728170,"results":"307","hashOfConfig":"208"},{"size":1576,"mtime":1627765462302,"results":"308","hashOfConfig":"208"},{"size":155,"mtime":1619943147378,"results":"309","hashOfConfig":"208"},{"size":360,"mtime":1619943147377,"results":"310","hashOfConfig":"208"},{"size":201,"mtime":1619943147379,"results":"311","hashOfConfig":"208"},{"size":626,"mtime":1627515728016,"results":"312","hashOfConfig":"208"},{"size":646,"mtime":1619943147384,"results":"313","hashOfConfig":"208"},{"size":1218,"mtime":1619943147383,"results":"314","hashOfConfig":"208"},{"size":566,"mtime":1627515728017,"results":"315","hashOfConfig":"208"},{"size":4781,"mtime":1627515728168,"results":"316","hashOfConfig":"208"},{"size":915,"mtime":1631084913670,"results":"317","hashOfConfig":"208"},{"size":2858,"mtime":1619943147381,"results":"318","hashOfConfig":"208"},{"size":3553,"mtime":1627515728250,"results":"319","hashOfConfig":"208"},{"size":736,"mtime":1619943147398,"results":"320","hashOfConfig":"208"},{"size":850,"mtime":1628509559285,"results":"321","hashOfConfig":"208"},{"size":145,"mtime":1628508768619,"results":"322","hashOfConfig":"208"},{"size":3422,"mtime":1627515728198,"results":"323","hashOfConfig":"208"},{"size":478,"mtime":1619943147385,"results":"324","hashOfConfig":"208"},{"size":1658,"mtime":1619943147388,"results":"325","hashOfConfig":"208"},{"size":101,"mtime":1619943147394,"results":"326","hashOfConfig":"208"},{"size":209,"mtime":1619943147400,"results":"327","hashOfConfig":"208"},{"size":2551,"mtime":1627515728248,"results":"328","hashOfConfig":"208"},{"size":11976,"mtime":1627515728219,"results":"329","hashOfConfig":"208"},{"size":1208,"mtime":1627515728239,"results":"330","hashOfConfig":"208"},{"size":1881,"mtime":1627515728259,"results":"331","hashOfConfig":"208"},{"size":7780,"mtime":1627515728238,"results":"332","hashOfConfig":"208"},{"size":1163,"mtime":1627770755331,"results":"333","hashOfConfig":"208"},{"size":42,"mtime":1627515728240,"results":"334","hashOfConfig":"208"},{"size":433,"mtime":1627515728217,"results":"335","hashOfConfig":"208"},{"size":239,"mtime":1627515728218,"results":"336","hashOfConfig":"208"},{"size":251,"mtime":1627515728263,"results":"337","hashOfConfig":"208"},{"size":1190,"mtime":1627515728327,"results":"338","hashOfConfig":"208"},{"size":677,"mtime":1627515728166,"results":"339","hashOfConfig":"208"},{"size":769,"mtime":1621238621583,"results":"340","hashOfConfig":"270"},{"size":2474,"mtime":1627515728164,"results":"341","hashOfConfig":"208"},{"size":2331,"mtime":1627678632460,"results":"342","hashOfConfig":"208"},{"size":16913,"mtime":1627515728215,"results":"343","hashOfConfig":"208"},{"size":915,"mtime":1631094691158,"results":"344","hashOfConfig":"208"},{"size":1333,"mtime":1627515728215,"results":"345","hashOfConfig":"208"},{"size":1320,"mtime":1627515728328,"results":"346","hashOfConfig":"208"},{"size":2391,"mtime":1627515728162,"results":"347","hashOfConfig":"208"},{"size":3460,"mtime":1627515728127,"results":"348","hashOfConfig":"208"},{"size":455,"mtime":1627515728019,"results":"349","hashOfConfig":"208"},{"size":1623,"mtime":1627515728018,"results":"350","hashOfConfig":"208"},{"size":538,"mtime":1627515728019,"results":"351","hashOfConfig":"208"},{"size":1762,"mtime":1627515728021,"results":"352","hashOfConfig":"208"},{"size":519,"mtime":1627515728020,"results":"353","hashOfConfig":"208"},{"size":639,"mtime":1627515728130,"results":"354","hashOfConfig":"208"},{"size":204,"mtime":1627515728129,"results":"355","hashOfConfig":"208"},{"size":636,"mtime":1627515728166,"results":"356","hashOfConfig":"208"},{"size":1519,"mtime":1627515728183,"results":"357","hashOfConfig":"208"},{"size":1774,"mtime":1627515728173,"results":"358","hashOfConfig":"208"},{"size":1156,"mtime":1627515728176,"results":"359","hashOfConfig":"208"},{"size":1053,"mtime":1627515728176,"results":"360","hashOfConfig":"208"},{"size":2818,"mtime":1629181517549,"results":"361","hashOfConfig":"208"},{"size":358,"mtime":1627515728175,"results":"362","hashOfConfig":"208"},{"size":6688,"mtime":1627515728174,"results":"363","hashOfConfig":"208"},{"size":3038,"mtime":1627515728260,"results":"364","hashOfConfig":"208"},{"size":1395,"mtime":1627515728329,"results":"365","hashOfConfig":"208"},{"size":2099,"mtime":1627515728178,"results":"366","hashOfConfig":"208"},{"size":0,"mtime":1625572216626,"results":"367","hashOfConfig":"208"},{"size":3099,"mtime":1627515728180,"results":"368","hashOfConfig":"208"},{"size":2739,"mtime":1627515728213,"results":"369","hashOfConfig":"208"},{"size":350,"mtime":1627515728264,"results":"370","hashOfConfig":"208"},{"size":3324,"mtime":1627515728179,"results":"371","hashOfConfig":"208"},{"size":5660,"mtime":1627515728178,"results":"372","hashOfConfig":"208"},{"size":10641,"mtime":1628130473354,"results":"373","hashOfConfig":"208"},{"size":1140,"mtime":1627515728181,"results":"374","hashOfConfig":"208"},{"size":2319,"mtime":1627515728182,"results":"375","hashOfConfig":"208"},{"size":2717,"mtime":1627515728182,"results":"376","hashOfConfig":"208"},{"size":1411,"mtime":1627515728357,"results":"377","hashOfConfig":"208"},{"size":2058,"mtime":1627515728171,"results":"378","hashOfConfig":"208"},{"size":4909,"mtime":1627781405593,"results":"379","hashOfConfig":"208"},{"size":1380,"mtime":1627515728199,"results":"380","hashOfConfig":"208"},{"size":11733,"mtime":1630945802984,"results":"381","hashOfConfig":"208"},{"size":1174,"mtime":1628223035253,"results":"382","hashOfConfig":"208"},{"size":14017,"mtime":1630942181028,"results":"383","hashOfConfig":"208"},{"size":1124,"mtime":1627658068688,"results":"384","hashOfConfig":"208"},{"size":20833,"mtime":1630166658725,"results":"385","hashOfConfig":"208"},{"size":2459,"mtime":1627761683303,"results":"386","hashOfConfig":"208"},{"size":276,"mtime":1627664509373,"results":"387","hashOfConfig":"208"},{"size":622,"mtime":1627767692440,"results":"388","hashOfConfig":"208"},{"size":125,"mtime":1627739200556,"results":"389","hashOfConfig":"208"},{"size":26621,"mtime":1630166725258,"results":"390","hashOfConfig":"208"},{"size":435935,"mtime":1627771261868,"results":"391","hashOfConfig":"208"},{"size":195,"mtime":1628509951600,"results":"392","hashOfConfig":"208"},{"size":7248,"mtime":1629120233983,"results":"393","hashOfConfig":"208"},{"size":5828,"mtime":1630165459022,"results":"394","hashOfConfig":"208"},{"size":12527,"mtime":1630704809473,"results":"395","hashOfConfig":"208"},{"size":1189,"mtime":1630105785957,"results":"396","hashOfConfig":"208"},{"size":301,"mtime":1630114473245,"results":"397","hashOfConfig":"208"},{"size":1217,"mtime":1630644942675,"results":"398","hashOfConfig":"208"},{"size":1083,"mtime":1630117059981,"results":"399","hashOfConfig":"208"},{"size":2356,"mtime":1627905342604,"results":"400","hashOfConfig":"208"},{"size":1166,"mtime":1612976302000,"results":"401","hashOfConfig":"208"},{"size":409,"mtime":1630509096880,"results":"402","hashOfConfig":"208"},{"size":5004,"mtime":1630846168650,"results":"403","hashOfConfig":"208"},{"size":376,"mtime":1630849336964,"results":"404","hashOfConfig":"208"},{"size":5165,"mtime":1631114989085,"results":"405","hashOfConfig":"208"},{"size":2549,"mtime":1631097967981,"results":"406","hashOfConfig":"208"},{"size":1530,"mtime":1631099127056,"results":"407","hashOfConfig":"208"},{"size":2211,"mtime":1631099156614,"results":"408","hashOfConfig":"208"},{"size":250,"mtime":1630954393094,"results":"409","hashOfConfig":"208"},{"size":591,"mtime":1630955067641,"results":"410","hashOfConfig":"208"},{"size":502,"mtime":1630957698936,"results":"411","hashOfConfig":"208"},{"size":9866,"mtime":1631114019954,"results":"412","hashOfConfig":"208"},{"size":1836,"mtime":1631114007579,"results":"413","hashOfConfig":"208"},{"size":2585,"mtime":1631114123581,"results":"414","hashOfConfig":"208"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},"166rgf3",{"filePath":"418","messages":"419","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"417"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"417"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"417"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"417"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"417"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"417"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"417"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"417"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"417"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"417"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"417"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"417"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"417"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"417"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"417"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"417"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"417"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"417"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"417"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"417"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"417"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"417"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"417"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"417"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"417"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"417"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"417"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"417"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"417"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"417"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"417"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"417"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"417"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"417"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"575"},"1mn83h6",{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"417"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"417"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"417"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"417"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"417"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"417"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"417"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"417"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"417"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"417"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"417"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"417"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"417"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"417"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"417"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"417"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"417"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"417"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"417"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"417"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"417"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"417"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"417"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"417"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"417"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"417"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"417"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"417"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"417"},{"filePath":"743","messages":"744","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"417"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"417"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"417"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"417"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"417"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"417"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"417"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"417"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"417"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"417"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"417"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"417"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"417"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"417"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"417"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"417"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"417"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"417"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"417"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"417"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823","usedDeprecatedRules":"417"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"417"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"417"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"417"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"417"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"417"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"417"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"417"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"417"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"417"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"417"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862","usedDeprecatedRules":"417"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"865","usedDeprecatedRules":"417"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"868","usedDeprecatedRules":"417"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"417"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"417"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"417"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"417"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"417"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"417"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"417"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"417"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"917","messages":"918","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"923","messages":"924","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"417"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"417"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"417"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"933","messages":"934","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"935","messages":"936","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Scheduler App\\scheduler\\src\\index.js",[],["937","938"],"D:\\Projects\\Scheduler App\\scheduler\\src\\App.js",["939","940","941","942","943","944","945","946","947"],"import React, { useState, useEffect } from \"react\"\r\nimport GrillReservation from \"containers/1.grill_reservation\"\r\nimport UserMasterfile from \"containers/2.user_masterfile\"\r\nimport BranchMasterfile from \"containers/3.branch_mastefile\"\r\nimport Login from \"containers/0.login\"\r\nimport { auth } from \"services/firebase\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {\r\n  selectUserSlice,\r\n  setAccountInfo,\r\n} from \"containers/0.NewLogin/loginSlice\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Backdrop from \"components/backdrop\"\r\nimport PaymentTransaction from \"containers/1.payment_transaction\"\r\nimport \"antd/dist/antd.css\"\r\nimport DropdownMasterfile from \"containers/4.dropdown_masterfile\"\r\nimport ProductMasterfile from \"containers/5.product_masterfile\"\r\nimport ReportsContainer from \"containers/6.reports\"\r\nimport { DROPDOWNS, PRODUCTS, ROLES, USERS } from \"services/collectionNames\"\r\nimport {\r\n  DROPDOWN_MASTERFILE,\r\n  PRODUCTS_MASTERFILE,\r\n  ROLES_MASTERFILE,\r\n  useSelectMenus,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { addData, getData } from \"services\"\r\nimport adminPhoto from \"images/admin-bro.png\"\r\nimport { selectMenuSlice, setMenu } from \"components/sideNav/2.menu/menuSlice\"\r\nimport { Reports } from \"Restructured/Components/Features\"\r\nimport ExcelExporter from \"Restructured/Components/Features/ExcelExporter\"\r\nimport DirectAndThirdParty from \"containers/7.directAndThirdParty\"\r\nimport Inventory from \"containers/8.inventory\"\r\nimport IncidentReports from \"containers/9.incidentReports\"\r\nimport DailyReports from \"containers/10.dailyReports\"\r\nimport Dashboard from \"containers/Dashboard\"\r\nimport NewLogin from \"containers/0.NewLogin\"\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const [menu, handleMenu] = useSelectMenus()\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [unauthorizedLogin, setUnauthorizedLogin] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        console.log(\"user\", user)\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        const uid = user.uid\r\n        const userInfo = {\r\n          displayName: user.displayName,\r\n          email: user.email,\r\n          photoURL: user.photoURL,\r\n        }\r\n        updateInfo(userInfo)\r\n        // ...\r\n      } else {\r\n        // User is signed out\r\n        // ...\r\n        setIsLoggedIn(false)\r\n        setIsLoading(false)\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(setMenu(menu))\r\n  }, [menu])\r\n  const updateInfo = async (userInfo) => {\r\n    const result = await getData(USERS, userInfo.email)\r\n    if (result) {\r\n      dispatch(\r\n        setAccountInfo({\r\n          ...userInfo,\r\n          displayName: result.name,\r\n          branches: result.branches,\r\n          branchSelected: result?.branchSelected,\r\n          roles: result.roles,\r\n          isEnabled: result.isEnabled,\r\n          photoURL: result.photoURL,\r\n        })\r\n      )\r\n      setIsLoggedIn(true)\r\n      setIsLoading(false)\r\n      setUnauthorizedLogin(false)\r\n      handleMenu(result.roles)\r\n    } else {\r\n      setIsLoggedIn(true)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const Routing = () => {\r\n    const userSlice = useSelector(selectUserSlice)\r\n    return (\r\n      <>\r\n        {!userSlice.isEnabled || unauthorizedLogin ? (\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              position: \"fixed\",\r\n              width: \"100vw\",\r\n              backgroundColor: \"white\",\r\n              height: \"100%\",\r\n              zIndex: 1000,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img src={adminPhoto} style={{ height: \"20rem\" }} />\r\n              <h3>UNAUTHORIZED USER</h3>\r\n              <div>Please contact your system admin for support</div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route exact path=\"/dashboard\">\r\n              <Dashboard />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/grillReservation\">\r\n              <GrillReservation />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/paymentTransaction\">\r\n              <PaymentTransaction />\r\n            </Route>\r\n            <Route exact path=\"/dashboard/inventory\">\r\n              <Inventory />\r\n            </Route>\r\n            <Route exact path=\"/masterData/userMasterFile\">\r\n              <UserMasterfile />\r\n            </Route>\r\n            <Route exact path=\"/masterData/branchMasterFile\">\r\n              <BranchMasterfile />\r\n            </Route>\r\n            <Route exact path=\"/masterData/dropdownMasterfile\">\r\n              <DropdownMasterfile\r\n                collectionName={DROPDOWNS}\r\n                breadcrumbs={DROPDOWN_MASTERFILE}\r\n                withDropdownGroup\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/masterData/rolesMasterfile\">\r\n              <DropdownMasterfile\r\n                collectionName={ROLES}\r\n                breadcrumbs={ROLES_MASTERFILE}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/masterData/productMasterfile\">\r\n              <ProductMasterfile\r\n                collectionName={PRODUCTS}\r\n                breadcrumbs={PRODUCTS_MASTERFILE}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/reports/paymentTransaction\">\r\n              <ReportsContainer />\r\n            </Route>\r\n            <Route exact path=\"/reports/directAndThirdParty\">\r\n              <DirectAndThirdParty />\r\n            </Route>\r\n            <Route exact path=\"/reports/incidentReports\">\r\n              <IncidentReports />\r\n            </Route>\r\n            <Route exact path=\"/reports/dailyReports\">\r\n              <DailyReports />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <div>Invalid url</div>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const UnAuthenticatedRouting = () => {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {/* <Login /> */}\r\n            <NewLogin />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <div>Invalid url</div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n  const renderIfVerified = isLoggedIn ? <Routing /> : <UnAuthenticatedRouting />\r\n  return isLoading ? <Backdrop /> : renderIfVerified\r\n}\r\n\r\nexport default App\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\app\\store.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\app\\types.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\collectionNames.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\sideNavSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\menuSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\schedulerComponentSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\menuData.js",["948","949","950","951","952"],"import { selectUserSlice, userSlice } from \"containers/0.login/loginSlice\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getData } from \"services\"\r\nimport { ROLES } from \"services/collectionNames\"\r\nimport db from \"services/firebase\"\r\nimport { Clock, Pen, Settings } from \"./styles\"\r\nexport const GRILL_RESERVATION = \"Grilling Schedule\"\r\nexport const PAYMENT_TRANSACTION = \"Transactions\"\r\nexport const USER_MASTERFILE = \"User Masterfile\"\r\nexport const BRANCH_MASTERFILE = \"Branch Masterfile\"\r\nexport const DASHBOARD = \"Dashboard\"\r\nexport const MASTER_DATA = \"Settings\"\r\nexport const DROPDOWN_MASTERFILE = \"Dropdown Masterfile\"\r\nexport const ROLES_MASTERFILE = \"Roles Masterfile\"\r\nexport const PRODUCTS_MASTERFILE = \"Products Masterfile\"\r\nexport const REPORTS = \"Analytics\"\r\nexport const DIRECT_AND_THIRD_PARTY = \"Direct and 3rd Party\"\r\nexport const INVENTORY = \"Store Inventory\"\r\nexport const INCIDENT_REPORTS = \"Incident Reports\"\r\nexport const DAILY_REPORTS = \"Daily Reports\"\r\n\r\nexport const useSelectMenus = () => {\r\n  const [roles, setRoles] = useState([])\r\n  const [menu, setMenu] = useState([])\r\n  useEffect(() => {\r\n    loadModules()\r\n  }, [roles])\r\n\r\n  const loadModules = async () => {\r\n    let modules = []\r\n    for (const role of roles) {\r\n      const result = await getRoles(role)\r\n      modules = [...modules, ...result?.list]\r\n    }\r\n    const _menu = menuData(modules)\r\n    setMenu(_menu)\r\n  }\r\n\r\n  const handleMenu = (data) => {\r\n    setRoles(data)\r\n  }\r\n  return [menu, handleMenu]\r\n}\r\n\r\nconst getRoles = (role) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(ROLES)\r\n      .where(\"name\", \"==\", role)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            resolve(doc.data())\r\n          } else {\r\n            console.log(\"No such document!\")\r\n          }\r\n        })\r\n      })\r\n  })\r\n}\r\n\r\nconst menuData = (modules) => {\r\n  return [\r\n    {\r\n      title: DASHBOARD,\r\n      Icon: ({ isToggled }) => <Clock isToggled={isToggled} />,\r\n      active: true,\r\n      display: modules.includes(DASHBOARD),\r\n      subMenu: [\r\n        {\r\n          title: GRILL_RESERVATION,\r\n          active: true,\r\n          path: \"/dashboard/grillReservation\",\r\n          display: modules.includes(GRILL_RESERVATION),\r\n        },\r\n        {\r\n          title: PAYMENT_TRANSACTION,\r\n          active: false,\r\n          path: \"/dashboard/paymentTransaction\",\r\n          display: modules.includes(PAYMENT_TRANSACTION),\r\n        },\r\n        {\r\n          title: INVENTORY,\r\n          active: false,\r\n          path: \"/dashboard/inventory\",\r\n          display: modules.includes(INVENTORY),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: REPORTS,\r\n      Icon: ({ isToggled }) => <Pen isToggled={isToggled} />,\r\n      active: false,\r\n      flex: 1,\r\n      display: modules.includes(REPORTS),\r\n      subMenu: [\r\n        {\r\n          title: PAYMENT_TRANSACTION,\r\n          active: false,\r\n          path: \"/reports/paymentTransaction\",\r\n          display: modules.includes(PAYMENT_TRANSACTION),\r\n        },\r\n        {\r\n          title: DIRECT_AND_THIRD_PARTY,\r\n          active: false,\r\n          path: \"/reports/directAndThirdParty\",\r\n          display: modules.includes(DIRECT_AND_THIRD_PARTY),\r\n        },\r\n        {\r\n          title: INCIDENT_REPORTS,\r\n          active: false,\r\n          path: \"/reports/incidentReports\",\r\n          display: modules.includes(INCIDENT_REPORTS),\r\n        },\r\n        {\r\n          title: DAILY_REPORTS,\r\n          active: false,\r\n          path: \"/reports/dailyReports\",\r\n          display: modules.includes(DAILY_REPORTS),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: MASTER_DATA,\r\n      Icon: ({ isToggled }) => <Settings isToggled={isToggled} />,\r\n      active: false,\r\n      display: modules.includes(MASTER_DATA),\r\n      subMenu: [\r\n        {\r\n          title: USER_MASTERFILE,\r\n          active: false,\r\n          path: \"/masterData/userMasterFile\",\r\n          display: modules.includes(USER_MASTERFILE),\r\n        },\r\n        {\r\n          title: BRANCH_MASTERFILE,\r\n          active: false,\r\n          path: \"/masterData/branchMasterFile\",\r\n          display: modules.includes(BRANCH_MASTERFILE),\r\n        },\r\n        {\r\n          title: DROPDOWN_MASTERFILE,\r\n          active: false,\r\n          path: \"/masterData/dropdownMasterfile\",\r\n          display: modules.includes(DROPDOWN_MASTERFILE),\r\n        },\r\n        {\r\n          title: ROLES_MASTERFILE,\r\n          active: false,\r\n          path: \"/masterData/rolesMasterfile\",\r\n          display: modules.includes(ROLES_MASTERFILE),\r\n        },\r\n        {\r\n          title: PRODUCTS_MASTERFILE,\r\n          active: false,\r\n          path: \"/masterData/productMasterfile\",\r\n          display: modules.includes(PRODUCTS_MASTERFILE),\r\n        },\r\n      ],\r\n    },\r\n  ]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\Table\\tableSlice.js",["953","954"],"import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { TABLE_COMPONENT } from \"app/types\"\r\nimport { replace, replaceArrayData } from \"Restructured/Utilities/arrayFuntions\"\r\n\r\nexport const TableSlice = createSlice({\r\n  name: TABLE_COMPONENT,\r\n  initialState: {\r\n    dataList: [],\r\n    headers: [],\r\n  },\r\n  reducers: {\r\n    setTable: (state, action) => {\r\n      const { payload } = action\r\n      const dataList = [...state.dataList]\r\n      for (const obj of payload.rows) {\r\n        const isExist = dataList.some(({ _id }) => _id === obj._id)\r\n        !isExist && dataList.push(obj)\r\n      }\r\n      state.headers = [...payload.headers]\r\n      state.dataList = dataList\r\n    },\r\n    updateTable: (state, action) => {\r\n      const { payload } = action\r\n      const index = state.dataList.findIndex((row) => row._id === payload.id)\r\n      // const newDataList =\r\n      //   /*replace(state.dataList, index, payload.data)*/ state.dataList.filter(\r\n      //     (row) => row._id !== payload.id\r\n      //   )\r\n      // newDataList.push(payload.data)\r\n      state.dataList[index] = payload.data\r\n    },\r\n    deleteTable: (state, action) => {\r\n      const { payload } = action\r\n      const dataList = []\r\n      for (const obj of state.dataList) {\r\n        obj._id !== payload._id && dataList.push(obj)\r\n      }\r\n      state.dataList = dataList\r\n    },\r\n    clearTable: (state) => {\r\n      state.headers = []\r\n      state.dataList = []\r\n    },\r\n  },\r\n})\r\n\r\nexport const { updateTable, setTable, clearTable, deleteTable } =\r\n  TableSlice.actions\r\nexport const selectTableSlice = (state) => state[TABLE_COMPONENT]\r\nexport default TableSlice.reducer\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\1.grill_reservation\\index.js",["955"],"import React, { useEffect, useState } from \"react\"\r\nimport ScheduleComponent from \"components/SchedulerComponent\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport {\r\n  GRILL_RESERVATION,\r\n  DASHBOARD,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport Backdrop from \"components/backdrop\"\r\nimport {\r\n  ToggleBody,\r\n  ToggleButton,\r\n  ToggleContainer,\r\n} from \"Restructured/Styles/toggleableContainer\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport { FilteringPanel } from \"Restructured/Components/Features\"\r\n\r\nfunction GrillReservation() {\r\n  const dispatch = useDispatch()\r\n  const [isToggled, setIsToggled] = useState(true)\r\n  const [toggle, setToggle] = useState(true)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD, GRILL_RESERVATION]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      {loading && <Backdrop />}\r\n      <Container>\r\n        <Sidenav\r\n          isToggled={toggle}\r\n          navigateTo={[DASHBOARD, GRILL_RESERVATION]}\r\n        />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <ScheduleComponent setLoading={setLoading} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n\r\n      <ToggleContainer isToggled={isToggled}>\r\n        <Grid\r\n          columns={2}\r\n          responsive={false}\r\n          customSizes={[\"375px\", \"1fr\"]}\r\n          height=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ToggleBody>\r\n            {/* this isToggled is used to hide print button when the sidenav filter of schedules is toggled left*/}\r\n            <FilteringPanel isToggled={isToggled} />\r\n          </ToggleBody>\r\n          <ToggleButton onClick={() => setIsToggled(!isToggled)}>\r\n            {isToggled ? \"Open\" : \"Close\"}\r\n          </ToggleButton>\r\n        </Grid>\r\n      </ToggleContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default GrillReservation\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\2.user_masterfile\\index.js",["956","957","958","959","960"],"import React, { useEffect, useState } from 'react'\r\nimport ScheduleComponent from 'components/SchedulerComponent'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA,\r\n  USER_MASTERFILE\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Table, { toolbarOptions, editSettings } from 'components/Table'\r\nimport { clearTable, setTable } from 'components/Table/tableSlice'\r\nimport Users from 'components/users'\r\n\r\nfunction UserMasterfile () {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const rows = []\r\n    const headers = [\r\n      {\r\n        field: 'email',\r\n        headerText: 'Email'\r\n      },\r\n      {\r\n        field: 'username',\r\n        headerText: 'Username'\r\n      },\r\n      {\r\n        field: 'role',\r\n        headerText: 'Role'\r\n      },\r\n      {\r\n        field: 'branch',\r\n        headerText: 'Branch'\r\n      }\r\n    ]\r\n    dispatch(navigateTo([MASTER_DATA, USER_MASTERFILE]))\r\n    dispatch(setTable({ headers, rows }))\r\n    return () => {\r\n      dispatch(clearTable())\r\n    }\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Users />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default UserMasterfile\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\backdrop\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\3.branch_mastefile\\index.js",["961"],"import React, { useEffect, useState } from 'react'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA,\r\n  BRANCH_MASTERFILE\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Table, { toolbarOptions, editSettings } from 'components/Table'\r\nimport { clearTable, setTable, deleteTable } from 'components/Table/tableSlice'\r\nimport db from 'services/firebase'\r\nimport { BRANCHES } from 'services/collectionNames'\r\n\r\nfunction BranchMasterfile() {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([MASTER_DATA, BRANCH_MASTERFILE]))\r\n    const unsubscribe = db.collection(BRANCHES).onSnapshot(function (snapshot) {\r\n      const rows = []\r\n      const headers = [\r\n        {\r\n          field: 'branchName',\r\n          headerText: 'Branch name'\r\n        },\r\n        {\r\n          field: 'branchAddress',\r\n          headerText: 'Branch Address'\r\n        },\r\n        {\r\n          field: 'color',\r\n          headerText: 'Color'\r\n        }\r\n      ]\r\n      for (const obj of snapshot.docChanges()) {\r\n        if (obj.type === 'modified') {\r\n          // const data = obj.doc.data()\r\n        } else if (obj.type === 'added') {\r\n          const data = obj.doc.data()\r\n          rows.push({ ...data, _id: obj.doc.id })\r\n        } else if (obj.type === 'removed') {\r\n          dispatch(deleteTable({ _id: obj.doc.id }))\r\n        } else {\r\n          console.log('nothing', obj.type)\r\n        }\r\n      }\r\n      if (rows.length > 0) {\r\n        dispatch(setTable({ rows, headers }))\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearTable())\r\n    }\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Table toolbar={toolbarOptions} editSettings={editSettings} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default BranchMasterfile\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\4.dropdown_masterfile\\index.js",["962","963"],"import React, { useState, useEffect } from 'react'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport Dropdowns from 'components/dropdowns'\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([MASTER_DATA, props?.breadcrumbs]))\r\n  }, [props?.breadcrumbs])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Dropdowns collectionName={props?.collectionName} withDropdownGroup={props.withDropdownGroup} />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\1.payment_transaction\\index.js",["964","965","966","967","968","969","970","971","972"],"import React, { useEffect, useState } from \"react\"\r\nimport ScheduleComponent from \"components/SchedulerComponent\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport {\r\n  DASHBOARD,\r\n  PAYMENT_TRANSACTION,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport Table from \"components/Table\"\r\nimport { clearTable, setTable, updateTable } from \"components/Table/tableSlice\"\r\nimport db from \"services/firebase\"\r\nimport {\r\n  ACCOUNT_NAME,\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  LABELS,\r\n  MENU_GROUP_HEADERS,\r\n  ORDER_NO,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport { SCHEDULES } from \"services/collectionNames\"\r\nimport { normalizeHour } from \"components/print\"\r\nimport { formatDate } from \"commonFunctions/formatDate\"\r\nimport PaymentDetails from \"components/PaymentDetails\"\r\nimport getAmount from \"commonFunctions/getAmount\"\r\nimport calculateSubTotal from \"commonFunctions/calculateSubTotal\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  OTHERS_DEDUCTION,\r\n  PAYMENT_LABELS,\r\n  SOURCE,\r\n} from \"components/PaymentDetails/types\"\r\nimport { menu } from \"components/SchedulerComponent/orderSlip/orderSlip\"\r\nimport { useGetProducts } from \"components/products/useGetProducts\"\r\nimport { useGetDropdowns } from \"components/SchedulerComponent/dropdowns\"\r\nimport PaymentTransactionTable from \"Restructured/Components/Features/PaymentTransactionTable\"\r\nimport { formatTime } from \"Restructured/Utilities/dateFormat\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nconst formatDateFromFirebase = (date) => {\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nfunction UserMasterfile() {\r\n  const dropdowns = useGetDropdowns()\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const dispatch = useDispatch()\r\n  const [products] = useGetProducts()\r\n  const [toggle, setToggle] = useState(true)\r\n  const [openId, setOpenId] = useState(\"\")\r\n  const [columnWidth, setColumnWidth] = useState(\"\")\r\n\r\n  const widths = {\r\n    [BRANCH]: \"120\",\r\n    [ORDER_NO]: \"200\",\r\n    [DATE_ORDER_PLACED]: \"200\",\r\n    [ACCOUNT_NAME]: \"150\",\r\n    [CUSTOMER]: \"200\",\r\n    [CONTACT_NUMBER]: \"150\",\r\n    [DATE_START]: \"200\",\r\n    [DATE_END]: \"200\",\r\n    [DATE_PAYMENT]: \"200\",\r\n    [MODE_PAYMENT]: \"200\",\r\n    [SOURCE]: \"200\",\r\n    [ACCOUNT_NUMBER]: \"200\",\r\n    [AMOUNT_PAID]: \"200\",\r\n    totalAmountPaid: \"200\",\r\n    [OTHERS_DEDUCTION]: \"200\",\r\n  }\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD, PAYMENT_TRANSACTION]))\r\n    const unsubscribe = db\r\n      .collection(SCHEDULES)\r\n      .orderBy(\"StartTime\", \"desc\")\r\n      .onSnapshot(function (snapshot) {\r\n        const rows = []\r\n        const headers = [\r\n          ...[\r\n            DATE_ORDER_PLACED,\r\n            DATE_START,\r\n            ORDER_NO,\r\n            CUSTOMER,\r\n            CONTACT_NUMBER,\r\n          ].map((fieldName) => {\r\n            return {\r\n              field: fieldName,\r\n              headerText: LABELS[fieldName],\r\n              width: widths[fieldName],\r\n            }\r\n          }),\r\n          {\r\n            field: \"totalQty\",\r\n            headerText: \"Total Qty\",\r\n          },\r\n          {\r\n            field: \"totalDue\",\r\n            headerText: \"Total Amount\",\r\n          },\r\n          ...[\r\n            DATE_PAYMENT,\r\n            MODE_PAYMENT,\r\n            SOURCE,\r\n            ACCOUNT_NUMBER,\r\n            \"totalAmountPaid\",\r\n            OTHERS_DEDUCTION,\r\n          ].map((fieldName) => {\r\n            return {\r\n              field: fieldName,\r\n              headerText: PAYMENT_LABELS[fieldName],\r\n              width: widths[fieldName],\r\n            }\r\n          }),\r\n        ]\r\n\r\n        for (const obj of snapshot.docChanges()) {\r\n          if (obj.type === \"modified\") {\r\n            const data = obj.doc.data()\r\n            const dateOrderPlaced = formatDateFromFirebase(\r\n              data[DATE_ORDER_PLACED]\r\n            )\r\n            const dateStart = formatDateFromFirebase(data[DATE_START])\r\n            const dateEnd = formatDateFromFirebase(data[DATE_END])\r\n            const datePayment =\r\n              typeof data[DATE_PAYMENT] !== \"undefined\"\r\n                ? formatDateFromFirebase(data[DATE_PAYMENT])\r\n                : \"\"\r\n            const amountPaid =\r\n              typeof data[AMOUNT_PAID] !== \"undefined\"\r\n                ? parseInt(data[AMOUNT_PAID])\r\n                : 0\r\n            // to add others (Senior Citizen, etc...) payment to total amount paid\r\n            let others = 0\r\n            let lessValue = 0\r\n            for (const key in data.others) {\r\n              console.log(\"key\", key)\r\n              others = parseInt(data.others[key]) + others\r\n              lessValue = data?.others[key]\r\n            }\r\n            const totals = {}\r\n            for (const obj of products) {\r\n              for (const product of obj.productList) {\r\n                totals[product?.code] = {\r\n                  qty: data[product?.code],\r\n                  price: product?.price,\r\n                }\r\n              }\r\n            }\r\n            const result = calculateSubTotal(totals)\r\n            const newData = {\r\n              ...data,\r\n              _id: obj.doc.id,\r\n              [DATE_ORDER_PLACED]: formatDate(dateOrderPlaced),\r\n              [DATE_START]: formatDate(dateStart) + \" \" + formatTime(dateStart),\r\n              [DATE_END]: normalizeHour(dateEnd),\r\n              [DATE_PAYMENT]: datePayment !== \"\" ? formatDate(datePayment) : \"\",\r\n              totalAmountPaid: amountPaid,\r\n              totalQty: result?.qty,\r\n              totalAmount: result?.subTotal,\r\n              [OTHERS_DEDUCTION]: lessValue,\r\n            }\r\n            dispatch(updateTable({ data: newData, id: obj.doc.id }))\r\n          } else if (obj.type === \"added\") {\r\n            const data = obj.doc.data()\r\n            const dateOrderPlaced = formatDateFromFirebase(\r\n              data[DATE_ORDER_PLACED]\r\n            )\r\n            const dateStart = formatDateFromFirebase(data[DATE_START])\r\n            const dateEnd = formatDateFromFirebase(data[DATE_END])\r\n            const datePayment =\r\n              typeof data[DATE_PAYMENT] !== \"undefined\"\r\n                ? formatDateFromFirebase(data[DATE_PAYMENT])\r\n                : \"\"\r\n            const amountPaid =\r\n              typeof data[AMOUNT_PAID] !== \"undefined\"\r\n                ? parseInt(data[AMOUNT_PAID])\r\n                : 0\r\n            // to add others (Senior Citizen, etc...) payment to total amount paid\r\n            let others = 0\r\n            let lessValue = 0\r\n            for (const key in data.others) {\r\n              others = parseInt(data.others[key]) + others\r\n              lessValue = data.others[key]\r\n            }\r\n\r\n            const totals = {}\r\n            for (const obj of products) {\r\n              for (const product of obj.productList) {\r\n                totals[product?.code] = {\r\n                  qty: data[product?.code],\r\n                  price: product?.price,\r\n                }\r\n              }\r\n            }\r\n            const result = calculateSubTotal(totals)\r\n            if (userComponentSlice.branches.includes(data[BRANCH])) {\r\n              rows.push({\r\n                ...data,\r\n                _id: obj.doc.id,\r\n                [DATE_ORDER_PLACED]: formatDate(dateOrderPlaced),\r\n                [DATE_START]:\r\n                  formatDate(dateStart) + \" \" + formatTime(dateStart),\r\n                [DATE_END]: normalizeHour(dateEnd),\r\n                [DATE_PAYMENT]:\r\n                  datePayment !== \"\" ? formatDate(datePayment) : \"\",\r\n                totalAmountPaid: amountPaid,\r\n                totalQty: result?.qty,\r\n                totalAmount: result?.subTotal,\r\n                [OTHERS_DEDUCTION]: lessValue,\r\n              })\r\n            }\r\n          } else if (obj.type === \"removed\") {\r\n            // dispatch(deleteTable({ _id: obj.doc.id }))\r\n          } else {\r\n            console.log(\"nothing\", obj.type)\r\n          }\r\n        }\r\n        if (rows.length > 0) {\r\n          dispatch(setTable({ rows, headers }))\r\n          console.log(\"payment data\", rows)\r\n        }\r\n      })\r\n\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearTable())\r\n    }\r\n  }, [products])\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setColumnWidth(\"500\")\r\n      setColumnWidth(\"1600\")\r\n    }, 2000)\r\n  }, [])\r\n\r\n  const sortSettings = {\r\n    columns: [{ field: DATE_START, direction: \"Descending\" }],\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            {/* <Table\r\n              toolbar={[\"Search\"]}\r\n\r\n              height=\"100%\"\r\n              width={columnWidth}\r\n              sortSettings={sortSettings}\r\n            /> */}\r\n            <PaymentTransactionTable\r\n              rowSelected={(row) => setOpenId(row._id)}\r\n            />\r\n            {openId && (\r\n              <div\r\n                style={{\r\n                  position: \"fixed\",\r\n                  top: \"4.3rem\",\r\n                  width: \"calc(100% - 250px)\",\r\n                  height: \"100%\",\r\n                  overflow: \"auto\",\r\n                  zIndex: 2000,\r\n                }}\r\n              >\r\n                <PaymentDetails id={openId} handleBack={() => setOpenId(\"\")} />\r\n              </div>\r\n            )}\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default UserMasterfile\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderNoDate.js",["973"],"\r\nconst twoDigitsYear = (date) => {\r\n  const year = date.getFullYear()\r\n  return year.toString().substr(-2)\r\n}\r\n\r\nconst twoDigitsMonth = (date) => {\r\n  const month = date.getMonth() + 1\r\n  if (month < 10) {\r\n    return `0${month}`\r\n  } else {\r\n    return month.toString()\r\n  }\r\n}\r\n\r\nconst twoDigitsDay = (date) => {\r\n  const day = date.getDate()\r\n  if (day < 10) {\r\n    return `0${day}`\r\n  } else {\r\n    return day.toString()\r\n  }\r\n}\r\n\r\nexport default function () {\r\n  const date = new Date()\r\n  const year = twoDigitsYear(date)\r\n  const month = twoDigitsMonth(date)\r\n  const day = twoDigitsDay(date)\r\n  return month + '' + day + '' + year\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\updateData.js",["974","975"],"import db from \"../firebase\"\r\n\r\nexport default function ({ data, collection, id }) {\r\n  const ref = db.collection(collection).doc(id)\r\n  const setWithMerge = ref.set(\r\n    {\r\n      ...data,\r\n    },\r\n    { merge: true }\r\n  )\r\n}\r\n\r\nexport const update = ({ data, collection, id }) => {\r\n  const ref = db.collection(collection).doc(id)\r\n  ref.update({\r\n    ...data,\r\n  })\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\deleteData.js",["976"],"import db from '../firebase'\r\n\r\nexport default function ({ id, collection }) {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(collection)\r\n      .doc(id)\r\n      .delete()\r\n      .then(data => {\r\n        console.log('Document successfully deleted!')\r\n        resolve('success')\r\n      })\r\n      .catch(error => {\r\n        console.error('Error removing document: ', error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\getData.js",["977"],"import db from '../firebase'\r\nexport default function (collectionName, document = null) {\r\n  if (!document) {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collectionName).get().then((querySnapshot) => {\r\n        const data = []\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            data.push({ ...doc.data(), _id: doc.id })\r\n          } else {\r\n            console.log('No such document!')\r\n            resolve(null)\r\n          }\r\n        })\r\n        resolve(data)\r\n      }).catch((error) => {\r\n        reject([])\r\n        console.log('Error getting document:', error)\r\n      })\r\n    })\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collectionName).doc(document).get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            const data = doc.data()\r\n            resolve(data)\r\n          } else {\r\n            console.log('No such document!d')\r\n            resolve(null)\r\n          }\r\n          resolve(null)\r\n        }).catch((error) => {\r\n          reject(error)\r\n          console.log('Error getting document:', error)\r\n        })\r\n    })\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\backdrop\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\dataHandlers\\addData.js",["978"],"import db from '../firebase'\r\n\r\nexport default function ({ data, collection, id = null }) {\r\n  if (!id) {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collection).add({ ...data })\r\n        .then((docRef) => {\r\n          resolve(docRef.id)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error adding document: ', error)\r\n          reject(error)\r\n        })\r\n    })\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(collection).doc(id).set({ ...data })\r\n        .then(() => {\r\n          resolve('success')\r\n          console.log('Document successfully written!')\r\n        })\r\n        .catch((error) => {\r\n          reject(error)\r\n          console.error('Error writing document: ', error)\r\n        })\r\n    })\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlip.js",["979","980","981","982","983","984","985","986","987","988","989"],"import React, { useEffect, useState } from \"react\"\r\nimport fields from \"components/fields\"\r\nimport orderSlipConfig from \"./orderSlipConfig\"\r\nimport classes from \"./orderSlip.module.css\"\r\nimport GrillMenus from \"./grillMenus\"\r\nimport { Table } from \"antd\"\r\nimport { TextBoxComponent } from \"@syncfusion/ej2-react-inputs\"\r\n\r\nimport {\r\n  LABELS,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n  REMARKS,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { setOrderNo, clearOrderNos, setOrderViaField } from \"./orderSlipSlice\"\r\nimport { selectSchedulerComponentSlice } from \"../schedulerComponentSlice\"\r\nimport orderNoDate from \"./orderNoDate\"\r\nimport { useGetDropdowns } from \"../dropdowns\"\r\nimport { DROP_DOWN_LIST, INPUT, ORDER_VIA_TYPE } from \"components/fields/types\"\r\nimport { useGetDropdownGroup } from \"components/dropdowns/useDropdownGroup\"\r\nimport { useOrderViaField } from \"./useOrderViaField\"\r\nimport Input from \"components/fields/input\"\r\nimport OrderVia from \"components/fields/orderVia\"\r\nimport { Button } from \"antd\"\r\nimport { DownCircleOutlined, UpCircleOutlined } from \"@ant-design/icons\"\r\n\r\nfunction OrderSlip(props) {\r\n  const dispatch = useDispatch()\r\n  const selectSchedulerComponent = useSelector(selectSchedulerComponentSlice)\r\n  const dropdowns = useGetDropdowns()\r\n  // this is for orderVia and Partner Merchant field\r\n  const [isDisplayedDirect, isDisplayedPartner, handleOrderVia] =\r\n    useOrderViaField()\r\n  // const [groupDropdowns] = useGetDropdownGroup('orderVia')\r\n  const [toggleModified, setToggleModified] = useState(false)\r\n  const { dataSource } = selectSchedulerComponent\r\n  useEffect(() => {\r\n    countLibis()\r\n    countRonac()\r\n  }, [dataSource, props])\r\n  const countLibis = () => {\r\n    const filteredLibis = dataSource.filter((data) =>\r\n      data[ORDER_NO].includes(`LB001-${orderNoDate()}-685`)\r\n    )\r\n    let latestNumber = 0\r\n    for (const obj of filteredLibis) {\r\n      const splitedObj = obj[ORDER_NO].split(\"-685\")\r\n      if (latestNumber < parseInt(splitedObj[1])) {\r\n        latestNumber = parseInt(splitedObj[1])\r\n      }\r\n    }\r\n    dispatch(setOrderNo({ branch: \"Libis\", value: parseInt(latestNumber) + 1 }))\r\n  }\r\n\r\n  const countRonac = () => {\r\n    const filteredRonac = dataSource.filter((data) =>\r\n      data[ORDER_NO].includes(`RSJ002-${orderNoDate()}-685`)\r\n    )\r\n    let latestNumber = 0\r\n    for (const obj of filteredRonac) {\r\n      const splitedObj = obj[ORDER_NO].split(\"-685\")\r\n      if (latestNumber < parseInt(splitedObj[1])) {\r\n        latestNumber = parseInt(splitedObj[1])\r\n      }\r\n    }\r\n    dispatch(setOrderNo({ branch: \"Ronac\", value: parseInt(latestNumber) + 1 }))\r\n  }\r\n  return props !== undefined ? (\r\n    <div className={classes.container}>\r\n      {orderSlipConfig.map((customProps) => {\r\n        const dataSource =\r\n          typeof dropdowns[customProps.name] === \"undefined\"\r\n            ? []\r\n            : dropdowns[customProps.name]\r\n        if (customProps.type === DROP_DOWN_LIST) {\r\n          customProps.value = props[customProps?.name]\r\n          if (customProps.name === ORDER_VIA) {\r\n            customProps.enabled = isDisplayedDirect\r\n            customProps.onChange = (e) => {\r\n              handleOrderVia(e, customProps)\r\n            }\r\n          }\r\n        }\r\n        if (customProps.type === ORDER_VIA_TYPE) {\r\n          customProps.value = props[customProps?.name]\r\n          customProps.enabled = isDisplayedPartner\r\n          customProps.onChange = (e) => {\r\n            handleOrderVia(e, customProps)\r\n          }\r\n        }\r\n\r\n        return fields[customProps.type]({\r\n          ...props,\r\n          ...customProps,\r\n          dataSource,\r\n        })\r\n      })}\r\n      <GrillMenus {...props} />\r\n      <div style={{ width: \"100%\", position: \"relative\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 1000,\r\n            right: 0,\r\n            marginTop: \"-2rem\",\r\n          }}\r\n        >\r\n          {!toggleModified ? (\r\n            <Button\r\n              icon={\r\n                <DownCircleOutlined onClick={() => setToggleModified(true)} />\r\n              }\r\n              shape=\"circle\"\r\n            />\r\n          ) : (\r\n            <Button\r\n              icon={\r\n                <UpCircleOutlined onClick={() => setToggleModified(false)} />\r\n              }\r\n              shape=\"circle\"\r\n            />\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        {toggleModified ? (\r\n          <Table\r\n            dataSource={\r\n              typeof props.modifiedBy !== \"undefined\" ? props?.modifiedBy : []\r\n            }\r\n            pagination={false}\r\n            size=\"small\"\r\n            columns={[\r\n              {\r\n                title: \"Modified by\",\r\n                dataIndex: \"displayName\",\r\n                key: \"displayName\",\r\n              },\r\n              { title: \"Action\", dataIndex: \"action\", key: \"action\" },\r\n              { title: \"Date\", dataIndex: \"date\", key: \"date\" },\r\n            ]}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default OrderSlip\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\types.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\types.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\calculateSubTotal.js",["990"],"export default (totals) => {\r\n  const newTotals = { ...totals }\r\n  let qty = 0\r\n  let price = 0\r\n  for (const key in newTotals) {\r\n    const totalPrice = parseInt(totals[key].price) * parseInt(totals[key].qty)\r\n    qty += parseInt(totals[key].qty)\r\n    price += totalPrice\r\n  }\r\n  return { qty, subTotal: price.toFixed(2) }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\getAmount.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\index.js",["991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  ScheduleComponent,\r\n  ViewDirective,\r\n  ViewsDirective,\r\n  Inject,\r\n  Week,\r\n  Month,\r\n  Agenda,\r\n  DragAndDrop,\r\n  Resize,\r\n  Day,\r\n} from \"@syncfusion/ej2-react-schedule\"\r\nimport OrderSlip from \"components/SchedulerComponent/orderSlip\"\r\nimport {\r\n  selectSchedulerComponentSlice,\r\n  updateSchedules,\r\n  setSchedules,\r\n  clearSchedules,\r\n  setBranchColors,\r\n  removeSchedule,\r\n} from \"./schedulerComponentSlice\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport schedulerSchema from \"./schedulerSchema\"\r\nimport { addData, updateData, deleteData } from \"services\"\r\nimport { BRANCHES, SCHEDULES } from \"services/collectionNames\"\r\nimport formatDataSource from \"./formatDataSource\"\r\nimport db from \"services/firebase\"\r\nimport {\r\n  BC,\r\n  BC_HALF,\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  EIGHT,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n  TWELVE,\r\n  _ID,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport { DROPDOWN_DATAS } from \"components/SchedulerComponent/orderSlip/orderSlipConfig\"\r\nimport identifyDateRange, { getDaysInMonthUTC } from \"./identifyDateRange\"\r\nimport Backdrop from \"components/backdrop\"\r\nimport { selectOrderComponentSlice } from \"components/SchedulerComponent/orderSlip/orderSlipSlice\"\r\n\r\nimport \"./app.component.css\"\r\nimport { useGetDropdowns } from \"./dropdowns\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { CustomButton } from \"./styles\"\r\nimport getWeekOfDate from \"Restructured/Utilities/getWeekOfDate\"\r\nfunction SchedulerComponent({ setLoading }) {\r\n  const dropdowns = useGetDropdowns()\r\n  const dispatch = useDispatch()\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const selectOrderSlice = useSelector(selectOrderComponentSlice)\r\n  const schedulerComponentSlice = useSelector(selectSchedulerComponentSlice)\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [branchSelection, setBranchSelection] = useState(null)\r\n  const [eventSettings, setEventSettings] = useState({\r\n    dataSource: [],\r\n    allowDeleting: false,\r\n  })\r\n  const [orderSlipData, setOrderSlipData] = useState({})\r\n\r\n  // const filterByBranch = (branch) => {\r\n  //   if (branch) {\r\n  //     setBranchSelection(branch)\r\n  //     const dataSourceFilter = [\r\n  //       ...dataSource.filter((data) => data.branch === branch),\r\n  //     ]\r\n  //     setEventSettings({ ...eventSettings, dataSource: dataSourceFilter })\r\n  //   } else {\r\n  //     setBranchSelection(null)\r\n  //     setEventSettings({ ...eventSettings, dataSource: dataSource })\r\n  //   }\r\n  // }\r\n\r\n  const [stop, setStop] = useState(false)\r\n  useEffect(() => {\r\n    if (userComponentSlice?.roles.includes(\"Admin\")) {\r\n      if (stop === false) {\r\n        setEventSettings({\r\n          ...eventSettings,\r\n          dataSource: dataSource,\r\n          allowDeleting: true,\r\n        })\r\n      }\r\n    }\r\n    if (dataSource.length > 0) {\r\n      setStop(true)\r\n    }\r\n  }, [userComponentSlice, dataSource])\r\n\r\n  useEffect(() => {\r\n    setEventSettings({\r\n      ...eventSettings,\r\n      dataSource: [...formatDataSource(schedulerComponentSlice.dataSource)],\r\n    })\r\n  }, [schedulerComponentSlice.dataSource])\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const unsubscribe = db\r\n      .collection(SCHEDULES)\r\n      .orderBy(\"StartTime\", \"asc\")\r\n      .onSnapshot(function (snapshot) {\r\n        const schedules = []\r\n        for (const obj of snapshot.docChanges()) {\r\n          if (obj.type === \"modified\") {\r\n            const data = obj.doc.data()\r\n            const newData = {\r\n              ...data,\r\n              Subject: data.customer,\r\n            }\r\n            dispatch(updateSchedules(newData))\r\n          } else if (obj.type === \"added\") {\r\n            const data = obj.doc.data()\r\n            const newData = {\r\n              ...data,\r\n              Subject: data.customer,\r\n              [_ID]: obj.doc.id,\r\n            }\r\n            schedules.push(newData)\r\n            // dispatch(setSchedules(newData))\r\n          } else if (obj.type === \"removed\") {\r\n            const _id = obj.doc.id\r\n            dispatch(removeSchedule({ _id: _id }))\r\n          } else {\r\n            console.log(\"nothing\", obj.type)\r\n          }\r\n        }\r\n        if (schedules.length > 0) {\r\n          dispatch(setSchedules(schedules))\r\n        }\r\n        setLoading(false)\r\n      })\r\n    return () => {\r\n      unsubscribe()\r\n      dispatch(clearSchedules())\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(BRANCHES).onSnapshot(function (snapshot) {\r\n      for (const obj of snapshot.docChanges()) {\r\n        if (obj.type === \"modified\") {\r\n          const data = obj.doc.data()\r\n          dispatch(\r\n            setBranchColors({ branch: data.branchName, color: data.color })\r\n          )\r\n        } else if (obj.type === \"added\") {\r\n          const data = obj.doc.data()\r\n          dispatch(\r\n            setBranchColors({ branch: data.branchName, color: data.color })\r\n          )\r\n        } else {\r\n          console.log(\"nothing\")\r\n        }\r\n      }\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  const onActionBegin = (args) => {\r\n    if (args.requestType === \"eventChange\") {\r\n      const data = {\r\n        ...args.data,\r\n        totalDue: selectOrderSlice?.totalAmountPaid,\r\n      }\r\n      data.Subject = data[CUSTOMER]\r\n      const dataToBeSend = schedulerSchema(data)\r\n      delete dataToBeSend.RecurrenceRule\r\n      updateData({\r\n        data: { ...dataToBeSend },\r\n        collection: SCHEDULES,\r\n        id: args.data[_ID],\r\n      })\r\n      addData({\r\n        data: {\r\n          displayName: userComponentSlice.displayName,\r\n          email: userComponentSlice.email,\r\n          action: \"Modified\",\r\n          date: new Date(),\r\n          _id: data._id,\r\n        },\r\n        collection: \"logs\",\r\n      })\r\n    } else if (args.requestType === \"eventCreate\") {\r\n      const data = args.addedRecords[0]\r\n      data.Subject = data[CUSTOMER]\r\n      const orderNo = data?.branch\r\n        ? selectOrderSlice[data[BRANCH]]\r\n        : selectOrderSlice.Libis\r\n      const dataToBeSend = schedulerSchema({\r\n        ...data,\r\n        [ORDER_NO]: orderNo,\r\n        totalDue: selectOrderSlice?.totalAmountPaid,\r\n      })\r\n      delete dataToBeSend.RecurrenceRule\r\n      const result = addData({\r\n        data: dataToBeSend,\r\n        collection: SCHEDULES,\r\n        id: null,\r\n      })\r\n      result.then((id) => {\r\n        addData({\r\n          data: {\r\n            displayName: userComponentSlice.displayName,\r\n            email: userComponentSlice.email,\r\n            action: \"Created\",\r\n            date: new Date(),\r\n            _id: id,\r\n          },\r\n          collection: \"logs\",\r\n        })\r\n      })\r\n    } else if (args.requestType === \"eventRemove\") {\r\n      const { deletedRecords } = args\r\n      deleteData({ id: deletedRecords[0]._id, collection: SCHEDULES })\r\n    } else {\r\n      console.log(\"other action is triggered\")\r\n    }\r\n  }\r\n\r\n  const onNavigation = (args) => {\r\n    // console.log(\"navigating\", args)\r\n    // if (args.currentDate) {\r\n    //   console.log(getWeekOfDate(args.currentDate))\r\n    // }\r\n    // console.log(args.currentDate)\r\n    // console.log('monthList', monthList)\r\n    // const monthDays = getDaysInMonthUTC(args.currentDate)\r\n    // if (!monthList.includes(args.currentDate)) {\r\n    //   console.log('wala')\r\n    //   setMonthList([...monthDays])\r\n    // } else {\r\n    //   console.log('meron')\r\n    // }\r\n  }\r\n\r\n  const { branchColors } = schedulerComponentSlice\r\n  const onEventRendered = (args, branchDropdown) => {\r\n    const { element, data } = args\r\n    // element.style.background = branchColors[data[BRANCH]]\r\n    if (data?.status) {\r\n      if (data?.status === \"PENDING PAYMENT\") {\r\n        element.style.background = \"yellow\"\r\n        element.style.color = \"#666\"\r\n      }\r\n      if (data?.status === \"FULFILLED\") {\r\n        element.style.background = \"transparent\"\r\n        element.style.color = \"#333\"\r\n      }\r\n\r\n      if (data?.status === \"CONFIRMED\") {\r\n        element.style.background = \"lightblue\"\r\n        element.style.color = \"black\"\r\n      }\r\n\r\n      if (data?.status === \"CANCELLED\") {\r\n        element.style.background = \"orange\"\r\n        element.style.color = \"#333\"\r\n      }\r\n      if (data?.status === \"PAID\") {\r\n        element.style.background = \"transparent\"\r\n        element.style.color = \"#666\"\r\n      }\r\n    } else {\r\n      element.style.background = \"transparent\"\r\n      element.style.color = \"#333\"\r\n    }\r\n\r\n    if (!branchDropdown.includes(data[BRANCH])) {\r\n      element.hidden = true\r\n    }\r\n  }\r\n\r\n  const onPopUpOpen = (args) => {\r\n    // setLoading(true)\r\n    const { data } = args\r\n    setOrderSlipData(data)\r\n    if (args.type === \"QuickInfo\") {\r\n      args.cancel = true\r\n    }\r\n    const header = args.element.querySelector(\".e-title-text\")\r\n    const partnerMerchant = args.element.querySelector(\r\n      `#${PARTNER_MERCHANT_ORDER_NO}`\r\n    )\r\n    const orderVia = args.element.querySelector(\"#orderVia_hidden\")\r\n    if (header) {\r\n      if (data?.orderNo) {\r\n        header.innerHTML = \"Update Order\"\r\n      } else {\r\n        header.innerHTML = \"New Order\"\r\n      }\r\n    }\r\n    if (args.type === \"Editor\") {\r\n      const textArea = args.element.querySelector(\"#remarks\")\r\n      if (textArea.value === \"\") {\r\n        textArea.value = \"RIDER DETAILS: \\nNAME:\\nCONTACT NUMBER:\"\r\n      }\r\n      // args.element.onkeyup = (e) => {\r\n      //   if (!orderVia.value?.includes('Partner Merchant')) {\r\n      //     partnerMerchant.value = ''\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {dropdowns[BRANCH].length > 0 && (\r\n        <ScheduleComponent\r\n          startHour=\"09:00\"\r\n          endHour=\"19:00\"\r\n          editorTemplate={OrderSlip}\r\n          eventSettings={eventSettings}\r\n          views={[\r\n            {\r\n              option: \"Day\",\r\n              startHour: \"09:00\",\r\n              endHour: \"19:00\",\r\n              timeScale: { enable: true, slotCount: 3 },\r\n            },\r\n          ]}\r\n          actionBegin={onActionBegin}\r\n          navigating={onNavigation}\r\n          eventRendered={(args) => onEventRendered(args, dropdowns[BRANCH])}\r\n          popupOpen={onPopUpOpen}\r\n          height=\"92vh\"\r\n          width=\"100%\"\r\n        >\r\n          <ViewsDirective>\r\n            <ViewDirective option=\"Day\" />\r\n            <ViewDirective option=\"Week\" />\r\n            <ViewDirective option=\"Month\" />\r\n            <ViewDirective option=\"Agenda\" />\r\n          </ViewsDirective>\r\n          <Inject services={[Day, Week, Month, Agenda]} />\r\n        </ScheduleComponent>\r\n      )}\r\n      {/* <div\r\n        style={{ position: \"fixed\", top: 1, right: \"3rem\", padding: \"1rem\" }}\r\n      >\r\n        {userComponentSlice?.branches.map((data) => (\r\n          <CustomButton\r\n            onClick={() => filterByBranch(data)}\r\n            backgroundColor={branchSelection === data ? \"#e3165b\" : \"white\"}\r\n          >\r\n            {data}\r\n          </CustomButton>\r\n        ))}\r\n        <CustomButton\r\n          onClick={() => filterByBranch(null)}\r\n          backgroundColor={branchSelection === null ? \"#e3165b\" : \"white\"}\r\n        >\r\n          All\r\n        </CustomButton>\r\n      </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchedulerComponent\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\Table\\index.js",["1016","1017","1018","1019","1020"],"import * as React from 'react'\r\nimport {\r\n  GridComponent,\r\n  ColumnsDirective,\r\n  ColumnDirective,\r\n  Resize,\r\n  Sort,\r\n  ContextMenu,\r\n  Filter,\r\n  Page,\r\n  ExcelExport,\r\n  Group,\r\n  PdfExport,\r\n  Edit,\r\n  Inject,\r\n  Search,\r\n  Toolbar\r\n} from '@syncfusion/ej2-react-grids'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectTableSlice } from './tableSlice'\r\nimport { addData, deleteData, updateData } from 'services'\r\nimport { BRANCHES } from 'services/collectionNames'\r\nconst Table = (props) => {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const contextMenuItems = [\r\n    'AutoFit',\r\n    'AutoFitAll',\r\n    'SortAscending',\r\n    'SortDescending',\r\n    'Copy',\r\n    'Edit',\r\n    'Delete',\r\n    'Save',\r\n    'Cancel',\r\n    'PdfExport',\r\n    'ExcelExport',\r\n    'CsvExport',\r\n    'FirstPage',\r\n    'PrevPage',\r\n    'LastPage',\r\n    'NextPage'\r\n  ]\r\n\r\n  const onActionBegin = e => {\r\n    const { requestType, data } = e\r\n    const dataCopy = { ...data }\r\n    delete dataCopy._id\r\n    if (requestType === 'save') {\r\n      updateData({\r\n        data: dataCopy,\r\n        id: data._id,\r\n        collection: BRANCHES\r\n      })\r\n    }\r\n    if (requestType === 'delete') {\r\n      deleteData({\r\n        id: data[0]?._id,\r\n        collection: BRANCHES\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className='control-pane'>\r\n        <div className='control-section'>\r\n          <GridComponent\r\n            id='gridcomp'\r\n            dataSource={tableSlice.dataList}\r\n            allowPaging\r\n            allowSorting\r\n            allowFiltering\r\n            allowGrouping\r\n            allowExcelExport\r\n            allowPdfExport\r\n            contextMenuItems={contextMenuItems}\r\n            actionBegin={onActionBegin}\r\n            {...props}\r\n          >\r\n            <ColumnsDirective>\r\n              {tableSlice.headers.map(data => {\r\n                return (\r\n                  <ColumnDirective\r\n                    key={data.field}\r\n                    {...data}\r\n                  />\r\n                )\r\n              })}\r\n            </ColumnsDirective>\r\n            <Inject services={[Page, Toolbar, Edit, Sort, Filter, Group, ExcelExport]} />\r\n          </GridComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport const toolbarOptions = ['Add', 'Edit', 'Delete', 'Update', 'Cancel', 'Search']\r\nexport const editSettings = {\r\n  allowEditing: true,\r\n  allowAdding: true,\r\n  allowDeleting: true,\r\n  newRowPosition: 'Top'\r\n}\r\nexport default Table\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\index.js",["1021","1022","1023","1024","1025","1026","1027","1028"],"import {\r\n  ACCOUNT_NAME,\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  INDICATE_REASON,\r\n  LABELS,\r\n  MENU_GROUP_HEADERS,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  STATUS,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { SCHEDULES } from \"services/collectionNames\"\r\nimport db from \"services/firebase\"\r\nimport {\r\n  Wrapper,\r\n  Container,\r\n  Panel,\r\n  Paper,\r\n  Body,\r\n  Description,\r\n  Label,\r\n  Label2,\r\n  Actions,\r\n} from \"./styles\"\r\nimport { formatDate, normalizeHour } from \"components/print\"\r\nimport { menu } from \"components/SchedulerComponent/orderSlip/orderSlip\"\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nimport calculateSubTotal from \"commonFunctions/calculateSubTotal\"\r\nimport getAmount from \"commonFunctions/getAmount\"\r\nimport { Paymentform } from \"./paymentForm\"\r\nimport orderSlipConfig from \"components/SchedulerComponent/orderSlip/orderSlipConfig\"\r\nimport { DESCRIPTION } from \"components/fields/types\"\r\nimport { useGetProducts } from \"components/products/useGetProducts\"\r\nimport formatNumber from \"commonFunctions/formatNumber\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport { PARTNER_MERCHANT_ORDER_NO } from \"Restructured/Constants/schedules\"\r\n\r\nconst formatDateFromFirebase = (date) => {\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nexport default function PaymentDetails(props) {\r\n  const [products] = useGetProducts()\r\n  const [data, setData] = useState({})\r\n  const [totals, setTotals] = useState([])\r\n  const [subTotal, setSubTotal] = useState(0)\r\n  const [qty, setQty] = useState(0)\r\n  useEffect(() => {\r\n    loadData(props?.id)\r\n  }, [props?.id, products])\r\n\r\n  const loadData = (id) => {\r\n    db.collection(SCHEDULES)\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const firebaseData = doc.data()\r\n          setData({ ...firebaseData })\r\n          const _totals = {}\r\n          for (const obj of products) {\r\n            for (const product of obj.productList) {\r\n              if (typeof firebaseData[product.code] !== \"undefined\") {\r\n                if (product?.price > 0) {\r\n                  _totals[product?.code] = {\r\n                    qty: firebaseData[product?.code],\r\n                    price: product?.price,\r\n                    description: product?.description,\r\n                  }\r\n                } else {\r\n                  _totals[product?.code] = {\r\n                    qty: firebaseData[product?.code],\r\n                    price: parseInt(\r\n                      firebaseData[`customPrice${product?.code}`]\r\n                    ),\r\n                    description: product?.description,\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          setTotals({\r\n            ..._totals,\r\n          })\r\n          const result = calculateSubTotal(_totals)\r\n          setQty(result?.qty)\r\n          setSubTotal(result?.subTotal)\r\n        } else {\r\n          console.log(\"No such document!\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error)\r\n      })\r\n  }\r\n\r\n  const checkData = (field) => {\r\n    let fieldData = \"\"\r\n    if (typeof data[field] !== \"undefined\") {\r\n      if (field === DATE_ORDER_PLACED) {\r\n        fieldData = formatDate(formatDateFromFirebase(data[field]))\r\n      } else if (field === DATE_START) {\r\n        fieldData = normalizeHour(formatDateFromFirebase(data[field]))\r\n      } else if (field === DATE_END) {\r\n        fieldData = normalizeHour(formatDateFromFirebase(data[field]))\r\n      } else if (field === ORDER_VIA) {\r\n        fieldData = data[field] ? data[field] : data[ORDER_VIA_PARTNER]\r\n      } else {\r\n        fieldData = data[field]\r\n      }\r\n    }\r\n    return fieldData\r\n  }\r\n\r\n  const checkLabels = (field) => {\r\n    let fieldData = LABELS[field]\r\n    if (field === ORDER_VIA) {\r\n      fieldData = data[field] ? LABELS[field] : LABELS[ORDER_VIA_PARTNER]\r\n    }\r\n    return fieldData\r\n  }\r\n  console.log(\"data\", data)\r\n  const backgroundColors = {\r\n    FULFILLED: \"#ccccff\",\r\n    PAID: \"#ffffcc\",\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Actions>\r\n        <Grid>\r\n          <Flex>\r\n            <button\r\n              onClick={props.handleBack}\r\n              style={{\r\n                border: \"none\",\r\n                backgroundColor: \"transparent\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <BiArrowBack size={20} />\r\n            </button>\r\n            <div style={{ marginTop: \"-.3rem\", marginLeft: \"1rem\" }}>\r\n              {`Partner Merchant Order No: ${data[PARTNER_MERCHANT_ORDER_NO]}`}\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n      </Actions>\r\n      {/* // #ffffcc */}\r\n      <Container backgroundColor={backgroundColors[data[STATUS]]}>\r\n        <Panel>\r\n          <Paper>\r\n            <h3>Order Details</h3>\r\n            <div>\r\n              {data &&\r\n                [\r\n                  [ORDER_NO, BRANCH],\r\n                  [CUSTOMER, CONTACT_NUMBER],\r\n                  [DATE_ORDER_PLACED, ORDER_VIA],\r\n                  [DATE_START, DATE_END],\r\n                ].map((fieldName, index) => {\r\n                  return (\r\n                    <Body key={index}>\r\n                      <Description>\r\n                        <Label>{checkLabels(fieldName[0])}</Label>\r\n                        <div>{checkData(fieldName[0])}</div>\r\n                      </Description>\r\n                      <Description>\r\n                        <Label2>{checkLabels(fieldName[1])}</Label2>\r\n                        <div>{checkData(fieldName[1])}</div>\r\n                      </Description>\r\n                    </Body>\r\n                  )\r\n                })}\r\n            </div>\r\n            <div>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tr\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    width: \"100%\",\r\n                    backgroundColor: \"pink\",\r\n                    padding: \".5rem .5rem\",\r\n                  }}\r\n                >\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    Code\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    Product\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    Price\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    Qty\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n                {Object.keys(totals).map((total, index) => {\r\n                  return totals[total]?.qty > 0 ? (\r\n                    <tr\r\n                      key={index}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        width: \"100%\",\r\n                        padding: \".5rem .5rem\",\r\n                      }}\r\n                    >\r\n                      <td style={{ flex: \"1\" }}>{total}</td>\r\n                      <td style={{ flex: \"1\" }}>\r\n                        {totals[total]?.description}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          flex: \"1\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        {formatNumber(totals[total]?.price.toFixed(2))}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          flex: \"1\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        {totals[total]?.qty}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          flex: \"1\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        {formatNumber(\r\n                          (\r\n                            parseInt(totals[total]?.qty) *\r\n                            parseInt(totals[total]?.price)\r\n                          ).toFixed(2)\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ) : null\r\n                })}\r\n              </table>\r\n              <table style={{ width: \"100%\" }}>\r\n                <tr\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    width: \"100%\",\r\n                    borderTop: \"1px solid #eee\",\r\n                    padding: \".5rem .5rem\",\r\n                  }}\r\n                >\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    Total\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  />\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  />\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    {qty}\r\n                  </th>\r\n                  <th\r\n                    style={{\r\n                      flex: \"1\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    {formatNumber(subTotal)}\r\n                  </th>\r\n                </tr>\r\n              </table>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </Paper>\r\n        </Panel>\r\n        <Panel>\r\n          <Paper>\r\n            <h3>Payment Details</h3>\r\n            <div>\r\n              <Paymentform\r\n                id={props?.id}\r\n                subTotal={subTotal}\r\n                onBack={props.handleBack}\r\n              />\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </Paper>\r\n        </Panel>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\index.js",["1029","1030"],"import { Button } from 'antd'\r\nimport { useHandleModal } from 'commonFunctions/useHandleModal'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Wrapper } from './styles'\r\nimport { useGetUsers } from './useGetUsers'\r\nimport UserCard from './userCard'\r\nimport Modal from 'antd/lib/modal/Modal'\r\nimport fields from 'components/fields'\r\nimport Input from 'components/fields/input'\r\nimport { INPUT } from 'components/fields/types'\r\n\r\nexport default function Users(props) {\r\n  const [users, handleSave, handleAdd] = useGetUsers()\r\n  const [isModalVisible, showModal, handleOk, handleCancel] = useHandleModal()\r\n  const [values, setValues] = useState({})\r\n\r\n  const handleModalOk = () => {\r\n    handleAdd({ ...values })\r\n    setValues({ name: '', email: '' })\r\n    handleOk()\r\n  }\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <Button type='primary' danger onClick={showModal}>\r\n          Add\r\n        </Button>\r\n        <Modal title={props.name} visible={isModalVisible} onOk={handleModalOk} onCancel={handleCancel}>\r\n          {fields[INPUT]({ onChange: (e) => setValues({ ...values, email: e.target.value }), value: values.email, label: 'Email' })}\r\n          {fields[INPUT]({ onChange: (e) => setValues({ ...values, name: e.target.value }), value: values.name, label: 'Name' })}\r\n        </Modal>\r\n      </Wrapper>\r\n      <Wrapper>\r\n        {Object.keys(users).map(id => {\r\n          const data = { ...users[id] }\r\n          return (\r\n            <UserCard\r\n              key={data._id}\r\n              name={data.name}\r\n              email={data?._id}\r\n              roles={data?.roles}\r\n              photoURL={data?.photoURL}\r\n              branches={[...data?.branches]}\r\n              handleSave={({ roles, branches }) => {\r\n                handleSave(roles, branches, data._id)\r\n              }}\r\n              isEnabled={data?.isEnabled}\r\n            />\r\n          )\r\n        })}\r\n      </Wrapper>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\index.js",["1031","1032"],"import React, { useState } from \"react\"\r\nimport { AiOutlineMenuFold, AiOutlineMenuUnfold } from \"react-icons/ai\"\r\nimport { IoMdClose } from \"react-icons/io\"\r\nimport {\r\n  Item,\r\n  Wrapper,\r\n  Menu,\r\n  Link,\r\n  ItemMobileView,\r\n  User,\r\n  UserProfileLink,\r\n} from \"./appBarStyles\"\r\nimport { auth } from \"services/firebase\"\r\nimport {\r\n  selectUserSlice,\r\n  clearAccountInfo,\r\n} from \"containers/0.login/loginSlice\"\r\nimport UserInfoCard from \"./UserInfoCard\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectSideNav } from \"components/sideNav/sideNavSlice\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { update } from \"services\"\r\n\r\nfunction AppBar({ isToggled, toggle }) {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const sideNavSlice = useSelector(selectSideNav)\r\n  const user = useSelector(selectUserSlice)\r\n  const [viewProfile, setViewProfile] = useState(false)\r\n  const handleLogout = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(clearAccountInfo())\r\n        history.push(\"/\")\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper isToggled={isToggled}>\r\n        <Link onClick={toggle} isToggled={isToggled}>\r\n          {isToggled ? (\r\n            <AiOutlineMenuFold size={25} />\r\n          ) : (\r\n            <AiOutlineMenuUnfold size={25} />\r\n          )}\r\n        </Link>\r\n        <Menu>\r\n          <Item isToggled={isToggled}>Home</Item>\r\n          <Item isToggled={isToggled}>/</Item>\r\n          <Item isToggled={isToggled}>{sideNavSlice.selectedMenu[0]}</Item>\r\n          <Item isToggled={isToggled}>/</Item>\r\n          <Item isToggled={isToggled} isActive>\r\n            {sideNavSlice.selectedMenu[1]}\r\n          </Item>\r\n          <ItemMobileView>{sideNavSlice.selectedMenu[1]}</ItemMobileView>\r\n        </Menu>\r\n        <div style={{ position: \"relative\" }}>\r\n          <UserProfileLink\r\n            onClick={(e) => {\r\n              setViewProfile(true)\r\n            }}\r\n          >\r\n            <User />\r\n          </UserProfileLink>\r\n          {/* <div\r\n          style={{\r\n            padding: \"2rem\",\r\n            display: viewProfile ? \"block\" : \"none\",\r\n            zIndex: \"999\",\r\n            position: \"absolute\",\r\n            backgroundColor: \"white\",\r\n            right: 0,\r\n            top: 0,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => setViewProfile(false)}\r\n          >\r\n            <IoMdClose />\r\n          </div>\r\n          <img src={user.photoURL} />\r\n          <h4>{user.displayName}</h4>\r\n          <span>{user.email}</span>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              handleLogout()\r\n              // history.push(\"/\")\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div> */}\r\n        </div>\r\n      </Wrapper>\r\n      {viewProfile && (\r\n        <UserInfoCard\r\n          close={() => setViewProfile(false)}\r\n          name={user.displayName}\r\n          email={user.email}\r\n          branch={user.branches.length > 0 ? user.branches[0] : \"None\"}\r\n          logout={(e) => {\r\n            e.preventDefault()\r\n            handleLogout()\r\n            // history.push(\"/\")\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppBar\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\index.js",["1033","1034","1035","1036","1037","1038","1039","1040"],"import {\r\n  ACCOUNT_NAME,\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  DELIVERY_DATE,\r\n  INDICATE_REASON,\r\n  LABELS,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n  STATUS,\r\n  TIME_SLOT\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport Print from './print'\r\nimport {\r\n  Container,\r\n  Header,\r\n  Body,\r\n  Footer,\r\n  Description,\r\n  Label,\r\n  Label2,\r\n  HeaderContent\r\n} from './styles'\r\nimport cookedChefLogo from 'images/cookedChef.jpg'\r\nimport vitosLogo from 'images/vitosLogo.jpg'\r\nimport { useState } from 'react'\r\nimport { useGetBranches } from 'commonFunctions/useGetBranches'\r\nimport formatNumber from 'commonFunctions/formatNumber'\r\n\r\nexport const formatDate = (date) => {\r\n  if (date) {\r\n    const dateSplit = date.toString().split(' ')\r\n    return `${dateSplit[1]} ${dateSplit[2]}, ${dateSplit[3]} ${dateSplit[0]}`\r\n  } else {\r\n    return date\r\n  }\r\n}\r\n\r\nexport const normalizeHour = (date) => {\r\n  if (date) {\r\n    const dateSplit = date.toString().split(' ')\r\n    const newDate = `${dateSplit[1]} ${dateSplit[2]}, ${dateSplit[3]}`\r\n    const dateArray = dateSplit[4].split(':')\r\n    if (dateArray[0] > 12) {\r\n      const hour = dateArray[0] - 12\r\n      return `${newDate} ${hour}:${dateArray[1]} PM`\r\n    } else {\r\n      if (parseInt(dateArray[0]) === 12) {\r\n        return `${newDate} ${dateArray[0]}:${dateArray[1]} PM`\r\n      } else {\r\n        return `${newDate} ${dateArray[0]}:${dateArray[1]} AM`\r\n      }\r\n    }\r\n  } else {\r\n    return date\r\n  }\r\n}\r\n\r\nconst PrintDocument = ({\r\n  orderSlipConfig = [],\r\n  data,\r\n  menu,\r\n  totals,\r\n  qty,\r\n  subTotal,\r\n  productList\r\n}) => {\r\n  const branch = useGetBranches(data[BRANCH])\r\n  const checkData = (field) => {\r\n    let fieldData = ''\r\n    if (field === DATE_ORDER_PLACED) {\r\n      fieldData = formatDate(data[field])\r\n    } else if (field === DATE_START) {\r\n      fieldData = formatDate(data[field])\r\n    } else if (field === DATE_END) {\r\n      fieldData = normalizeHour(data[field])\r\n    } else if (field === TIME_SLOT) {\r\n      if (data[DATE_START] || data[DATE_END]) {\r\n        const start = normalizeHour(data[DATE_START]).split(' ')\r\n        const end = normalizeHour(data[DATE_END]).split(' ')\r\n        fieldData = `${start[3]} ${start[4]} - ${end[3]} ${end[4]}`\r\n      }\r\n    } else if (field === BRANCH) {\r\n      if (data[ORDER_NO]) {\r\n        const splittedOrderNo = data[ORDER_NO].split('-')\r\n        fieldData = `${splittedOrderNo[0]}-${data[field].toUpperCase()} ${\r\n          branch.branchAddress\r\n        }`\r\n      }\r\n    } else if (field === ORDER_VIA) {\r\n      if (data[field]) {\r\n        fieldData = data[field]\r\n      } else {\r\n        fieldData = data[ORDER_VIA_PARTNER]\r\n      }\r\n    } else if (field === PARTNER_MERCHANT_ORDER_NO) {\r\n      return data[ORDER_VIA_PARTNER] ? data[field] : ''\r\n    } else {\r\n      fieldData = data[field]\r\n    }\r\n    return fieldData\r\n  }\r\n\r\n  const changedLabel = (field) => {\r\n    if (field === DATE_ORDER_PLACED) {\r\n      return 'Date placed'\r\n    }\r\n    if (field === DATE_START) {\r\n      return 'Delivery Date/Time'\r\n    }\r\n    if (field === PARTNER_MERCHANT_ORDER_NO) {\r\n      return data[ORDER_VIA] ? '' : LABELS[field]\r\n    }\r\n    if (field === ORDER_VIA) {\r\n      return data[ORDER_VIA] ? LABELS[field] : LABELS[ORDER_VIA_PARTNER]\r\n    }\r\n    return LABELS[field]\r\n  }\r\n  return (\r\n    <Container>\r\n      <img\r\n        src={cookedChefLogo}\r\n        height={500}\r\n        style={{ position: 'absolute', zIndex: '-999', opacity: '0.1' }}\r\n      />\r\n      <Header>\r\n        <img src={vitosLogo} height={100} style={{ borderRadius: '50%' }} />\r\n        <HeaderContent>\r\n          <h2 style={{ marginLeft: '1rem' }}>VITO'S BBQ</h2>\r\n          <h2 style={{ marginLeft: '1rem' }}>ORDER FORM</h2>\r\n        </HeaderContent>\r\n      </Header>\r\n      <HeaderContent>\r\n        <h3>ORDER DETAILS</h3>\r\n      </HeaderContent>\r\n      {[\r\n        [ORDER_NO, BRANCH],\r\n        [PARTNER_MERCHANT_ORDER_NO, null],\r\n        [CUSTOMER, DATE_ORDER_PLACED],\r\n        [CONTACT_NUMBER, DATE_START],\r\n        [TIME_SLOT, null],\r\n        [ORDER_VIA, ACCOUNT_NAME]\r\n      ].map((fieldName, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              display: 'flex',\r\n              width: '90vw',\r\n              justifyContent: 'space-evenly'\r\n            }}\r\n          >\r\n            <Body>\r\n              <Description>\r\n                <Label>{changedLabel(fieldName[0])}: </Label>\r\n                <div style={{ marginLeft: '.5rem' }}>\r\n                  {checkData(fieldName[0])}\r\n                </div>\r\n              </Description>\r\n            </Body>\r\n            <Body>\r\n              <Description>\r\n                <Label>{changedLabel(fieldName[1])}:</Label>\r\n                <div style={{ marginLeft: '.5rem' }}>\r\n                  {checkData(fieldName[1])}\r\n                </div>\r\n              </Description>\r\n            </Body>\r\n          </div>\r\n        )\r\n      })}\r\n      <Footer>\r\n        <table style={{ width: '100%', fontSize: '10px' }}>\r\n          <tr\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-start',\r\n              width: '100%',\r\n              backgroundColor: 'pink',\r\n              padding: '.5rem .5rem'\r\n            }}\r\n          >\r\n            <th\r\n              style={{\r\n                flex: '1',\r\n                display: 'flex',\r\n                justifyContent: 'flex-start'\r\n              }}\r\n            >\r\n              Code\r\n            </th>\r\n            <th\r\n              style={{\r\n                flex: '1',\r\n                display: 'flex',\r\n                justifyContent: 'flex-start'\r\n              }}\r\n            >\r\n              Product\r\n            </th>\r\n            <th\r\n              style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}\r\n            >\r\n              Price\r\n            </th>\r\n            <th\r\n              style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}\r\n            >\r\n              Qty\r\n            </th>\r\n            <th\r\n              style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}\r\n            >\r\n              Amount\r\n            </th>\r\n          </tr>\r\n          {Object.keys(totals).map((productName, index) => {\r\n            const product = totals[productName]\r\n            const qty = product[0]\r\n            const price = product[1]\r\n            const description = product[2]\r\n            return qty > 0 ? (\r\n              <tr\r\n                key={index}\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-start',\r\n                  width: '100%'\r\n                }}\r\n              >\r\n                <td style={{ flex: '1' }}>{productName}</td>\r\n                <td style={{ flex: '1' }}>{description}</td>\r\n                <td\r\n                  style={{\r\n                    flex: '1',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end'\r\n                  }}\r\n                >\r\n                  {formatNumber(price.toFixed(2))}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    flex: '1',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end'\r\n                  }}\r\n                >\r\n                  {qty}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    flex: '1',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end'\r\n                  }}\r\n                >\r\n                  {formatNumber((parseInt(qty) * parseInt(price)).toFixed(2))}\r\n                </td>\r\n              </tr>\r\n            ) : null\r\n          })}\r\n        </table>\r\n        <table style={{ width: '100%' }}>\r\n          <tr\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-start',\r\n              width: '100%',\r\n              borderTop: '1px solid #eee'\r\n            }}\r\n          >\r\n            <th\r\n              style={{\r\n                flex: '1',\r\n                display: 'flex',\r\n                justifyContent: 'flex-start'\r\n              }}\r\n            >\r\n              Total\r\n            </th>\r\n            <th\r\n              style={{\r\n                flex: '1',\r\n                display: 'flex',\r\n                justifyContent: 'flex-start'\r\n              }}\r\n            />\r\n            <th\r\n              style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}\r\n            />\r\n            <th\r\n              style={{ flex: '1', display: 'flex', justifyContent: 'flex-end' }}\r\n            >\r\n              {formatNumber(subTotal.toFixed(2))}\r\n            </th>\r\n          </tr>\r\n        </table>\r\n      </Footer>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'flex-start',\r\n          backgroundColor: 'pink',\r\n          width: '90vw'\r\n        }}\r\n      >\r\n        <Label>Remarks</Label>\r\n        <div>\r\n          <textarea\r\n            value={data?.remarks}\r\n            style={{ width: '100%', border: 'none', height: '5rem' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nexport default (props) => {\r\n  const [triggeredClicked, setTriggeredClicked] = useState(false)\r\n  // const printDocument = triggeredClicked ? <PrintDocument {...props} /> : <div />\r\n  return (\r\n    <Print\r\n      component={<PrintDocument {...props} />}\r\n      button='Print'\r\n      triggeredClicked={() => setTriggeredClicked(true)}\r\n    />\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\index.js",["1041","1042"],"import React, { useEffect, useState } from 'react'\r\nimport { Container } from 'commonStyles'\r\nimport { Header, Body, Footer } from './styles'\r\nimport Dropdown from './dropdown'\r\nimport { Button, Divider } from 'antd'\r\nimport { addData, deleteData, getData } from 'services'\r\nimport { Dropdowngroup } from './dropdownGroup'\r\nimport { useGetDropdownGroup } from './useDropdownGroup'\r\n\r\nexport default function Dropdowns({ collectionName, withDropdownGroup }) {\r\n  const [dropdowns, setDropdowns] = useState({})\r\n  const [groupDropdowns, saveGroupDropdowns] = useGetDropdownGroup('orderVia')\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [collectionName])\r\n\r\n  const loadDropdowns = async () => {\r\n    const data = await getData(collectionName)\r\n    const dropdownList = {}\r\n    for (const obj of data) {\r\n      dropdownList[obj._id] = { name: obj.name, list: [...obj.list], isEditable: false }\r\n    }\r\n    setDropdowns(dropdownList)\r\n  }\r\n\r\n  const handleChange = (e, id) => {\r\n    const dropdownCopy = { ...dropdowns }\r\n    const dropdownObject = { ...dropdownCopy[id] }\r\n    dropdownObject.name = e.target.value\r\n    dropdownCopy[id] = dropdownObject\r\n    setDropdowns(dropdownCopy)\r\n  }\r\n\r\n  const handleToggleEdit = (id, status, list = [], name, buttonClicked) => {\r\n    const dropdownCopy = { ...dropdowns }\r\n    const dropdownObject = { ...dropdownCopy[id] }\r\n    dropdownObject.isEditable = status\r\n    if (buttonClicked === 'discard') {\r\n      dropdownObject.name = name\r\n    }\r\n    if (list.length > 0) {\r\n      dropdownObject.list = list\r\n    }\r\n    dropdownCopy[id] = dropdownObject\r\n    setDropdowns(dropdownCopy)\r\n  }\r\n\r\n  const handleChangeList = (id, list) => {\r\n    const dropdownCopy = { ...dropdowns }\r\n    const dropdownObject = { ...dropdownCopy[id] }\r\n    dropdownObject.list = [...list]\r\n    dropdownCopy[id] = dropdownObject\r\n    setDropdowns(dropdownCopy)\r\n  }\r\n\r\n  const handleAddDropdowns = async () => {\r\n    const data = {\r\n      name: '',\r\n      list: []\r\n    }\r\n    const docId = await addData({ data, collection: collectionName })\r\n    setDropdowns({ ...dropdowns, [docId]: { ...data } })\r\n  }\r\n\r\n  const handleRemove = async (id) => {\r\n    console.log('id', id)\r\n    const result = await deleteData({ id, collection: collectionName })\r\n    if (result === 'success') {\r\n      const dropdownsCopy = { ...dropdowns }\r\n      delete dropdownsCopy[id]\r\n      setDropdowns(dropdownsCopy)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Divider />\r\n      <h3 style={{ padding: '1rem 0 0 0' }}>Dropdowns </h3>\r\n      <Header display>\r\n        <Button type='primary' danger onClick={() => handleAddDropdowns()}>Add</Button>\r\n      </Header>\r\n      <Body>\r\n        {Object.keys(dropdowns).map(data => <Dropdown\r\n          collectionName={collectionName}\r\n          key={data}\r\n          id={data}\r\n          name={dropdowns[data]?.name}\r\n          list={dropdowns[data]?.list}\r\n          isEditable={dropdowns[data]?.isEditable}\r\n          handleToggleEdit={(status, list, name, buttonClicked) => handleToggleEdit(data, status, list, name, buttonClicked)}\r\n          handleChange={(e) => handleChange(e, data)}\r\n          handleChangeList={(list) => handleChangeList(data, list)}\r\n          handleRemove={() => handleRemove(data)}\r\n        />)}\r\n      </Body>\r\n      <Divider />\r\n      <h3 style={withDropdownGroup ? { padding: '1rem 0 0 0' } : { display: 'none' }}>Dropdown Groups</h3>\r\n      <Header display={withDropdownGroup}>\r\n        <Button type='primary' danger onClick={() => { }}>Add</Button>\r\n      </Header>\r\n      <Footer display={withDropdownGroup}>\r\n        {groupDropdowns.map(groupDropdown => {\r\n          const groups = []\r\n          for (const key in groupDropdown) {\r\n            if (key === '_id' || key === 'name') {\r\n            } else {\r\n              groups.push({\r\n                name: key,\r\n                values: groupDropdown[key]\r\n              })\r\n            }\r\n          }\r\n          return (\r\n            <Dropdowngroup\r\n              key={groupDropdowns.name}\r\n              groupName={groupDropdown.name}\r\n              groups={groups}\r\n            />\r\n          )\r\n        })}\r\n\r\n      </Footer>\r\n    </Container>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\dropdowns.js",["1043","1044"],"import { useState, useEffect } from \"react\"\r\nimport {\r\n  BRANCH,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  PAYMENT_MODE,\r\n  STATUS,\r\n} from \"./orderSlip/types\"\r\nimport db from \"services/firebase\"\r\nimport { getData } from \"services\"\r\nimport { BRANCHES } from \"services/collectionNames\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\n\r\nconst getWhereData = (name) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(\"dropdowns\")\r\n      .where(\"name\", \"==\", name)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          if (doc.exists) {\r\n            const data = doc.data()\r\n            resolve(data.list)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        resolve([])\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nconst getBranch = async () => {\r\n  const data = []\r\n  const result = await getData(BRANCHES)\r\n  for (const obj of result) {\r\n    data.push(obj?.branchName)\r\n  }\r\n  return data\r\n}\r\n\r\nexport function useGetDropdowns() {\r\n  const userSlice = useSelector(selectUserSlice)\r\n  const [dropdowns, setDropdowns] = useState({\r\n    [STATUS]: [],\r\n    [PAYMENT_MODE]: [],\r\n    [ORDER_VIA]: [],\r\n    [BRANCH]: [],\r\n    [ORDER_VIA_PARTNER]: [],\r\n  })\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [])\r\n\r\n  const loadDropdowns = async () => {\r\n    const status = await getWhereData(STATUS)\r\n    const orderVia = await getWhereData(ORDER_VIA)\r\n    const paymentMode = await getWhereData(PAYMENT_MODE)\r\n    const orderViaPartner = await getWhereData(ORDER_VIA_PARTNER)\r\n    const branch = userSlice.branches\r\n    setDropdowns({\r\n      ...dropdowns,\r\n      [STATUS]: status,\r\n      [ORDER_VIA]: [\"\", ...orderVia],\r\n      [PAYMENT_MODE]: paymentMode,\r\n      [BRANCH]: branch,\r\n      [ORDER_VIA_PARTNER]: [\"\", ...orderViaPartner],\r\n    })\r\n  }\r\n  return dropdowns\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\orderSlipConfig.js",["1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082"],"import {\r\n  BLANK_FIELD,\r\n  DATE_TIME_PICKER,\r\n  DESCRIPTION,\r\n  DROP_DOWN_LIST,\r\n  HEADER_FIELD,\r\n  HIDDEN,\r\n  INPUT,\r\n  ORDER_VIA_TYPE,\r\n  STATUS_REASON,\r\n  TEXT_AREA,\r\n} from \"components/fields/types\"\r\nimport {\r\n  ACCOUNT_NAME,\r\n  ATCHARA,\r\n  BAO,\r\n  BASTING_SAUCE,\r\n  BC,\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BC_HALF,\r\n  BC_SAUCE,\r\n  BRANCH,\r\n  CHILI_OIL,\r\n  CH_12,\r\n  CH_8,\r\n  CH_8_PS,\r\n  CL_12,\r\n  CL_8,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  DELIVERY_DATE,\r\n  EIGHT,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  ID,\r\n  INDICATE_REASON,\r\n  JV_1,\r\n  JV_2,\r\n  JV_4,\r\n  LABELS,\r\n  MENU_GROUP_HEADERS,\r\n  M_A,\r\n  M_B,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n  PAYMENT_MODE,\r\n  PRT,\r\n  REMARKS,\r\n  REPAER,\r\n  SPICED_VINEGAR,\r\n  STATUS,\r\n  TIME_SLOT,\r\n  TOTAL,\r\n  TWELVE,\r\n  _ID,\r\n} from \"./types\"\r\n\r\nexport const DROPDOWN_DATAS = {\r\n  [BRANCH]: [\"Libis\", \"Ronac\"],\r\n  [ORDER_VIA]: [\r\n    \"INSTAGRAM DM\",\r\n    \"FB MESSENGER\",\r\n    \"VIBER 770\",\r\n    \"VIBER 809\",\r\n    \"WHATSAPP 770\",\r\n    \"WHATSAPP 809\",\r\n    \"TEXT 770\",\r\n    \"TEXT 809\",\r\n  ],\r\n  [PAYMENT_MODE]: [\r\n    \"CASH\",\r\n    \"BDO / 98\",\r\n    \"KP / GCASH\",\r\n    \"ZAP\",\r\n    \"GRAB FOOD\",\r\n    \"DINGDONG PH\",\r\n    \"METROMART FOOD\",\r\n  ],\r\n  [STATUS]: [\r\n    \"CONFIRMED\",\r\n    \"PAID\",\r\n    \"SERVED\",\r\n    \"REVISED / RESCHEDULED\",\r\n    \"CANCELLED\",\r\n  ],\r\n}\r\nexport default [\r\n  {\r\n    name: BLANK_FIELD,\r\n    type: BLANK_FIELD,\r\n    isInlineBlock: true,\r\n  },\r\n  {\r\n    name: DATE_ORDER_PLACED,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_ORDER_PLACED],\r\n    default: \"StartTime\",\r\n    isInlineBlock: true,\r\n  },\r\n  {\r\n    name: BRANCH,\r\n    type: DROP_DOWN_LIST,\r\n    label: LABELS[BRANCH],\r\n    isInlineBlock: true,\r\n  },\r\n  {\r\n    name: ORDER_NO,\r\n    type: INPUT,\r\n    label: LABELS[ORDER_NO],\r\n    isInlineBlock: true,\r\n    disabled: true,\r\n    placeholder: \"Auto generate after save\",\r\n  },\r\n  {\r\n    name: CUSTOMER,\r\n    type: INPUT,\r\n    label: LABELS[CUSTOMER],\r\n    isInlineBlock: true,\r\n  },\r\n  // {\r\n  //   name: DELIVERY_DATE,\r\n  //   type: DATE_TIME_PICKER,\r\n  //   label: LABELS[DELIVERY_DATE],\r\n  //   default: 'StartTime',\r\n  //   isInlineBlock: true\r\n  // },\r\n  {\r\n    name: CONTACT_NUMBER,\r\n    type: INPUT,\r\n    label: LABELS[CONTACT_NUMBER],\r\n    isInlineBlock: true,\r\n  },\r\n  {\r\n    name: ORDER_VIA,\r\n    type: DROP_DOWN_LIST,\r\n    label: LABELS[ORDER_VIA],\r\n    isInlineBlock: true,\r\n  },\r\n  {\r\n    name: ACCOUNT_NAME,\r\n    type: INPUT,\r\n    label: LABELS[ACCOUNT_NAME],\r\n    isInlineBlock: true,\r\n  },\r\n  // {\r\n  //   name: PARTNER_MERCHANT_ORDER_NO,\r\n  //   type: INPUT,\r\n  //   label: LABELS[PARTNER_MERCHANT_ORDER_NO],\r\n  //   isInlineBlock: true\r\n  // },\r\n  {\r\n    name: ORDER_VIA_PARTNER,\r\n    type: ORDER_VIA_TYPE,\r\n  },\r\n  {\r\n    name: HEADER_FIELD,\r\n    type: HEADER_FIELD,\r\n    label: LABELS[TIME_SLOT],\r\n  },\r\n  {\r\n    name: DATE_START,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_START],\r\n    default: \"StartTime\",\r\n    isInlineBlock: true,\r\n    disabled: true,\r\n  },\r\n  {\r\n    name: DATE_END,\r\n    type: DATE_TIME_PICKER,\r\n    label: LABELS[DATE_END],\r\n    default: \"EndTime\",\r\n    isInlineBlock: true,\r\n    disabled: true,\r\n  },\r\n  {\r\n    name: REMARKS,\r\n    type: TEXT_AREA,\r\n    label: LABELS[REMARKS],\r\n  },\r\n  {\r\n    name: STATUS_REASON,\r\n    type: STATUS_REASON,\r\n  },\r\n  // {\r\n  //   name: STATUS,\r\n  //   type: DROP_DOWN_LIST,\r\n  //   label: LABELS[STATUS],\r\n  //   isInlineBlock: true,\r\n  // },\r\n  // {\r\n  //   name: INDICATE_REASON,\r\n  //   type: INPUT,\r\n  //   label: LABELS[INDICATE_REASON],\r\n  //   isInlineBlock: true,\r\n  // },\r\n  // this is important do not remove\r\n  {\r\n    name: _ID,\r\n    type: HIDDEN,\r\n    label: \"\",\r\n    isInline: true,\r\n  },\r\n]\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\grillMenus.js",["1083","1084","1085"],"import React, { useState, useEffect } from \"react\"\r\nimport { Item, Wrapper, Container } from \"./styles\"\r\nimport Input from \"components/fields/input\"\r\nimport { getData } from \"services\"\r\nimport { PRODUCTS } from \"services/collectionNames\"\r\nimport formatNumber from \"commonFunctions/formatNumber\"\r\n\r\nimport Print from \"components/print\"\r\nimport sort from \"commonFunctions/sort\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setAmountPaid } from \"./orderSlipSlice\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div style={{ padding: \".3rem\" }}>\r\n      <Container>\r\n        <Item>Code</Item>\r\n        <Item>Product</Item>\r\n        <Item right>Price</Item>\r\n        <Item right>Qty</Item>\r\n        <Item right>Total</Item>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Product = ({\r\n  groupHeader,\r\n  productList,\r\n  productData,\r\n  setProductData,\r\n  handleCustomPrice,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div style={{ padding: \".3rem\", color: \"red\" }}>{groupHeader}</div>\r\n      {productList.map((data) => {\r\n        const retainedPrice = [...productData[data?.code]]\r\n        const total =\r\n          parseInt(productData[data?.code][0]) * parseInt(retainedPrice[1])\r\n        return (\r\n          <Container key={data?.code}>\r\n            <Item>{data?.code}</Item>\r\n            <Item>{data?.description}</Item>\r\n            <Item right>\r\n              {data?.price === 0 ? (\r\n                <div style={{ marginTop: \"-.3rem\", paddingLeft: \"2rem\" }}>\r\n                  <Input\r\n                    isNumber\r\n                    name={`customPrice${data?.code}`}\r\n                    onChange={(e) => {\r\n                      handleCustomPrice(e, data?.code)\r\n                    }}\r\n                    value={productData && productData[data?.code][1]}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                formatNumber(data?.price.toFixed(2))\r\n              )}\r\n            </Item>\r\n            <Item right>\r\n              <div style={{ marginTop: \"-.3rem\", paddingLeft: \"2rem\" }}>\r\n                <Input\r\n                  isNumber\r\n                  name={data?.code}\r\n                  onChange={(e) => {\r\n                    setProductData(e, data?.code)\r\n                  }}\r\n                  value={productData && productData[data?.code][0]}\r\n                />\r\n              </div>\r\n            </Item>\r\n            <Item right>{formatNumber(total.toFixed(2))}</Item>\r\n          </Container>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = ({ total }) => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(setAmountPaid(total.toFixed(2)))\r\n  }, [total])\r\n  return (\r\n    <Container>\r\n      <Item>Total</Item>\r\n      <Item right>{formatNumber(total.toFixed(2))}</Item>\r\n    </Container>\r\n  )\r\n}\r\nexport default function (props) {\r\n  const [productList, setProductList] = useState([])\r\n  const [productData, setProductData] = useState({})\r\n\r\n  console.log(\"productData\", productData)\r\n  const handleChange = (e, code) => {\r\n    const retainedData = [...productData[code]]\r\n    if (e.target.value === \"\") {\r\n      setProductData({ ...productData, [code]: [\"0\", retainedData[1]] })\r\n    } else {\r\n      setProductData({\r\n        ...productData,\r\n        [code]: [e.target.value, retainedData[1]],\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCustomPrice = (e, code) => {\r\n    const retainedData = [...productData[code]]\r\n    const convertedPrice = parseInt(e.target.value)\r\n    if (!isNaN(convertedPrice)) {\r\n      setProductData({\r\n        ...productData,\r\n        [code]: [retainedData[0], convertedPrice],\r\n      })\r\n    } else {\r\n      setProductData({\r\n        ...productData,\r\n        [code]: [retainedData[0], convertedPrice],\r\n      })\r\n    }\r\n  }\r\n\r\n  const calculateSubTotal = (productDataList) => {\r\n    let subTotal = 0\r\n\r\n    for (const array in productDataList) {\r\n      subTotal +=\r\n        parseInt(productDataList[array][1]) *\r\n        parseInt(productDataList[array][0])\r\n    }\r\n    return subTotal\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProducts()\r\n  }, [])\r\n\r\n  const loadProducts = async () => {\r\n    const productData = {}\r\n    const result = await getData(PRODUCTS)\r\n    for (const obj of result) {\r\n      for (const product of obj.productList) {\r\n        if (product?.price > 0) {\r\n          productData[product.code] = props[product.code]\r\n            ? [\r\n                parseInt(props[product.code]),\r\n                product?.price,\r\n                product?.description,\r\n              ]\r\n            : [0, product?.price, product?.description]\r\n        } else {\r\n          productData[product.code] = props[product.code]\r\n            ? [\r\n                parseInt(props[product.code]),\r\n                parseInt(props[`customPrice${product.code}`]) || 0,\r\n                product?.description,\r\n              ]\r\n            : [\r\n                0,\r\n                parseInt(props[`customPrice${product.code}`]) || 0,\r\n                product?.description,\r\n              ]\r\n        }\r\n      }\r\n    }\r\n    setProductData(productData)\r\n    setProductList(sort(result, \"no\"))\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      {productList.map((data) => (\r\n        <Product\r\n          key={data?.groupHeader}\r\n          groupHeader={data?.groupHeader}\r\n          productList={data?.productList}\r\n          productData={productData}\r\n          setProductData={handleChange}\r\n          handleCustomPrice={handleCustomPrice}\r\n        />\r\n      ))}\r\n      <Footer total={calculateSubTotal(productData)} />\r\n      <br />\r\n      <br />\r\n      <Print\r\n        data={props}\r\n        totals={productData}\r\n        subTotal={calculateSubTotal(productData)}\r\n        productList={productList}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\identifyDateRange.js",["1086"],"export default function (args) {\r\n  if (typeof args === 'undefined') {\r\n    return ''\r\n  }\r\n\r\n  const date = new Date(args)\r\n  const day = date.getDay()\r\n  console.log(day)\r\n  switch (day) {\r\n    case 1:\r\n      return [1, 5]\r\n    case 2:\r\n      return [2, 4]\r\n    case 3:\r\n      return [3, 3]\r\n    case 4:\r\n      return [4, 2]\r\n    case 5:\r\n      return [5, 1]\r\n    case 6:\r\n      return [6, 0]\r\n    default:\r\n      return [0, 6]\r\n  }\r\n}\r\n\r\nexport const getDaysInMonthUTC = args => {\r\n  if (typeof args === 'undefined') {\r\n    return ''\r\n  }\r\n\r\n  const month = args.getMonth()\r\n  const year = args.getYear()\r\n  //   const date = new Date(Date.UTC(year, month, 1))\r\n  //   const days = []\r\n  //   while (date.getUTCMonth() === month) {\r\n  //     days.push(new Date(date))\r\n  //     date.setUTCDate(date.getUTCDate() + 1)\r\n  //   }\r\n  //   return days\r\n  var date = new Date(year, month, 1)\r\n  var days = []\r\n  while (date.getMonth() === month) {\r\n    days.push(new Date(date))\r\n    date.setDate(date.getDate() + 1)\r\n  }\r\n  return days\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\formatDataSource.js",["1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111"],"import {\r\n  DATE_START,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  EIGHT,\r\n  TWELVE,\r\n  BC,\r\n  BC_HALF,\r\n  CH_8,\r\n  CH_12,\r\n  BC_2,\r\n  BC_4,\r\n  JV_4,\r\n  JV_2,\r\n  BCJ_4,\r\n  BCJ_2,\r\n  BCJ_1,\r\n  FCH_8,\r\n  FCH_12,\r\n  FBC_4,\r\n  BAO,\r\n  REPAER,\r\n  CHILI_OIL,\r\n  SPICED_VINEGAR,\r\n  BC_SAUCE,\r\n  ATCHARA,\r\n  BASTING_SAUCE,\r\n  DELIVERY_DATE,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport {\r\n  formatDateFromDatabase,\r\n  formatDateSlash,\r\n} from \"Restructured/Utilities/dateFormat\"\r\n\r\nexport const formatDate = (date) => {\r\n  if (date === null) {\r\n    return \"\"\r\n  }\r\n  return new Date(date.seconds * 1000 + date.nanoseconds / 1000000)\r\n}\r\nexport default function (dataSource) {\r\n  const newDataSource = []\r\n  for (const obj of dataSource) {\r\n    const startTime = obj[DATE_START]\r\n    const endTime = obj[DATE_END]\r\n    const dateOrder = obj[DATE_ORDER_PLACED]\r\n    const modifiedBy =\r\n      typeof obj?.modifiedBy !== \"undefined\"\r\n        ? obj.modifiedBy.map((data) => {\r\n            const dataFromDatabase = formatDateFromDatabase(data.date)\r\n            return {\r\n              ...data,\r\n              date: formatDateSlash(dataFromDatabase),\r\n            }\r\n          })\r\n        : []\r\n    // const deliveryDate = obj[DELIVERY_DATE]\r\n    newDataSource.push({\r\n      ...obj,\r\n      [DATE_START]: formatDate(startTime),\r\n      [DATE_END]: formatDate(endTime),\r\n      [DATE_ORDER_PLACED]: formatDate(dateOrder),\r\n      modifiedBy: modifiedBy,\r\n      // [DELIVERY_DATE]: formatDate(deliveryDate)\r\n      // [CH_8]: obj[CH_8].toString(),\r\n      // [CH_12]: obj[CH_12].toString(),\r\n      // [BC_2]: obj[BC_2].toString(),\r\n      // [BC_4]: obj[BC_4].toString(),\r\n      // [JV_4]: obj[JV_4].toString(),\r\n      // [JV_2]: obj[JV_2].toString(),\r\n      // [BCJ_4]: obj[BCJ_4].toString(),\r\n      // [BCJ_2]: obj[BCJ_2].toString(),\r\n      // [BCJ_1]: obj[BCJ_1].toString(),\r\n      // [FCH_8]: obj[FCH_8].toString(),\r\n      // [FCH_12]: obj[FCH_12].toString(),\r\n      // [FBC_4]: obj[FBC_4].toString(),\r\n      // [ATCHARA]: obj[ATCHARA].toString(),\r\n      // [BC_SAUCE]: obj[BC_SAUCE].toString(),\r\n      // [SPICED_VINEGAR]: obj[SPICED_VINEGAR].toString(),\r\n      // [BASTING_SAUCE]: obj[BASTING_SAUCE].toString(),\r\n      // [CHILI_OIL]: obj[CHILI_OIL].toString(),\r\n      // [REPAER]: obj[REPAER].toString(),\r\n      // [BAO]: obj[BAO].toString(),\r\n    })\r\n  }\r\n  return newDataSource\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\paymentForm.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126"],"import React, { useEffect, useState } from \"react\"\r\nimport fields from \"components/fields\"\r\nimport Input from \"components/fields/input\"\r\nimport {\r\n  DATE_PICKER,\r\n  DROP_DOWN_LIST,\r\n  INPUT,\r\n  NUMBER,\r\n} from \"components/fields/types\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  PAYMENT_LABELS,\r\n  REF_NO,\r\n  SOURCE,\r\n  TOTAL_DUE,\r\n} from \"./types\"\r\nimport { Container, Wrapper } from \"./styles\"\r\nimport CustomDialog from \"components/dialog\"\r\nimport { AiOutlineMinus } from \"react-icons/ai\"\r\nimport { Button } from \"antd\"\r\nimport { SCHEDULES } from \"services/collectionNames\"\r\nimport { updateData, update } from \"services\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectTableSlice } from \"components/Table/tableSlice\"\r\nimport { useGetDropdowns } from \"components/PaymentDetails/dropdowns\"\r\nimport { Uploads } from \"components/uploads\"\r\nimport formatNumber from \"commonFunctions/formatNumber\"\r\nimport DiscountAndOthersDialog from \"./DiscountAndOthersDialog\"\r\nimport PartialPayments from \"./partialModal\"\r\nimport { formatDateFromDatabase } from \"Restructured/Utilities/dateFormat\"\r\n\r\nexport function Paymentform(props) {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const [others, setOthers] = useState({ \"Senior Citizen\": 0 })\r\n  const [formFields, setFormFields] = useState({})\r\n  const [orderNo, setOrderNo] = useState(\"\")\r\n  const [balance, setBalance] = useState(props?.subTotal)\r\n  const dropdowns = useGetDropdowns()\r\n  useEffect(() => {\r\n    setBalance(parseInt(props?.subTotal))\r\n    const newFormFields = {}\r\n    const newOthers = {}\r\n    const { dataList } = tableSlice\r\n    const data = dataList.find((row) => row._id === props?.id)\r\n    if (data?.partials) {\r\n      newFormFields.partials = data?.partials.map((partial) => {\r\n        return {\r\n          ...partial,\r\n          date: formatDateFromDatabase(partial.date),\r\n        }\r\n      })\r\n    }\r\n    // this is only for dropdowns\r\n    for (const obj of dropdowns) {\r\n      newFormFields[obj?.name] =\r\n        typeof data[obj?.name] !== \"undefined\" ? data[obj?.name] : \"\"\r\n    }\r\n\r\n    for (const key in data.others) {\r\n      newOthers[key] = data.others[key]\r\n    }\r\n\r\n    // to set a default value in the field of amount paid\r\n    if (\r\n      newFormFields[AMOUNT_PAID] === \"0\" ||\r\n      newFormFields[AMOUNT_PAID] === \"\"\r\n    ) {\r\n      newFormFields[AMOUNT_PAID] = props.subTotal\r\n    }\r\n    newFormFields[TOTAL_DUE] = props.subTotal\r\n    newFormFields[\"discountAdditionalDetails\"] = {\r\n      ...data[\"discountAdditionalDetails\"],\r\n    }\r\n\r\n    setOrderNo(data?.orderNo)\r\n    setOthers(newOthers)\r\n    setFormFields(newFormFields)\r\n    calculateBalance(props.subTotal)\r\n  }, [props?.subTotal, props?.id, dropdowns])\r\n\r\n  useEffect(() => {\r\n    calculateBalance(formFields[AMOUNT_PAID])\r\n  }, [others, formFields[AMOUNT_PAID]])\r\n\r\n  const calculateBalance = (amountPaid = 0) => {\r\n    // console.log(props.subTotal)\r\n    // const amountPaid = formFields[AMOUNT_PAID]\r\n    // const paid = isNaN(amountPaid)\r\n    //   ? 0\r\n    //   : amountPaid === ''\r\n    //     ? 0\r\n    //     : parseInt(amountPaid)\r\n    // let newBalance = parseInt(props?.subTotal) - paid\r\n    // for (const key in others) {\r\n    //   const value = others[key]\r\n    //   console.log(key, value)\r\n    //   const discount = isNaN(value) ? 0 : value === '' ? 0 : parseInt(value)\r\n    //   newBalance = newBalance - discount\r\n    // }\r\n    // setBalance(newBalance)\r\n    let _newBalance = parseInt(props.subTotal) || 0\r\n    for (const key in others) {\r\n      _newBalance = _newBalance - others[key]\r\n    }\r\n    _newBalance = _newBalance - parseInt(amountPaid)\r\n    setBalance(_newBalance)\r\n  }\r\n\r\n  const handleOthers = (data) => {\r\n    const newOthers = {}\r\n    for (const key in data) {\r\n      newOthers[data[key]] = 0\r\n    }\r\n    setOthers(newOthers)\r\n  }\r\n\r\n  const handleChange = (e, fieldName) => {\r\n    setOthers({ ...others, [fieldName]: e.target.value })\r\n  }\r\n\r\n  const handleChangeFormFields = (e, fieldName, type) => {\r\n    const value = type === DROP_DOWN_LIST ? e.value : e.target.value\r\n    setFormFields({ ...formFields, [fieldName]: value })\r\n  }\r\n\r\n  const handleRemove = (fieldName) => {\r\n    const newOthers = { ...others }\r\n    delete newOthers[fieldName]\r\n    setOthers(newOthers)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const d = new Date(formFields[DATE_PAYMENT])\r\n    if (Object.prototype.toString.call(d) === \"[object Date]\") {\r\n      // it is a date\r\n      if (isNaN(d.getTime())) {\r\n        // d.valueOf() could also work\r\n        alert(\"Date is invalid\")\r\n        // date is not valid\r\n        return\r\n      } else {\r\n        // date is valid\r\n      }\r\n    } else {\r\n      // not a date\r\n    }\r\n\r\n    console.log(\"submitted\", formFields)\r\n    update({\r\n      data: {\r\n        ...formFields,\r\n        [DATE_PAYMENT]: new Date(formFields[DATE_PAYMENT]),\r\n        others: { ...others },\r\n      },\r\n      collection: SCHEDULES,\r\n      id: props?.id,\r\n    })\r\n    props.onBack()\r\n  }\r\n\r\n  const handleDiscountAdditionalDetails = (data, discName) => {\r\n    const _formFields = { ...formFields }\r\n    _formFields[\"discountAdditionalDetails\"] = { ...data }\r\n    _formFields.amountPaid = (\r\n      Number(_formFields[TOTAL_DUE]) - Number(data[discName]?.amount)\r\n    ).toFixed(2)\r\n    setFormFields(_formFields)\r\n    setOthers({ [discName]: data[discName]?.amount })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Container>\r\n          {dropdowns.map((customProps) => {\r\n            return fields[customProps?.type]({\r\n              ...customProps,\r\n              // this value is applied only for dropdowns field\r\n              value: formFields[customProps?.name],\r\n              onChange: (e) => {\r\n                if (\r\n                  customProps?.name === TOTAL_DUE ||\r\n                  customProps?.name === AMOUNT_PAID\r\n                ) {\r\n                } else {\r\n                  handleChangeFormFields(e, customProps?.name, customProps.type)\r\n                }\r\n              },\r\n            })\r\n          })}\r\n        </Container>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"0rem 1rem\",\r\n          }}\r\n        >\r\n          <Uploads id={props?.id} />\r\n          <PartialPayments\r\n            formFields={formFields}\r\n            setFormFields={setFormFields}\r\n            dropdowns={dropdowns}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem 0rem\",\r\n          }}\r\n        >\r\n          <div style={{ flex: \"1\" }}>Others</div>\r\n          <div>\r\n            {/* <CustomDialog\r\n              label=\"Less\"\r\n              others={others}\r\n              setOthers={handleOthers}\r\n            /> */}\r\n            <DiscountAndOthersDialog\r\n              totalDue={formFields[TOTAL_DUE]}\r\n              setDiscountAdditionalDetails={handleDiscountAdditionalDetails}\r\n              formFields={formFields}\r\n              others={others}\r\n              orderNo={orderNo}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {Object.keys(others).map((fieldName, index) => {\r\n          return (\r\n            <Container key={index}>\r\n              {fields[NUMBER]({\r\n                name: fieldName,\r\n                label: fieldName,\r\n                value: others[fieldName],\r\n                // onChange: (e) => handleChange(e, fieldName),\r\n              })}\r\n\r\n              <div\r\n                style={{\r\n                  flex: \".2\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: \"100%\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Button\r\n                  type=\"secondary\"\r\n                  shape=\"circle\"\r\n                  icon={\r\n                    <AiOutlineMinus onClick={() => handleRemove(fieldName)} />\r\n                  }\r\n                  // disabled={fieldName === \"Amount Paid\"}\r\n                />\r\n              </div>\r\n            </Container>\r\n          )\r\n        })}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            padding: \"1rem 0rem\",\r\n          }}\r\n        >\r\n          <div style={{ flex: \"1\" }}>Balance</div>\r\n          <div>{formatNumber(balance.toFixed(2))}</div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button type=\"primary\" danger onClick={handleSubmit}>\r\n            {\" \"}\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\dropdown.js",["1127"],"import fields from 'components/fields'\r\nimport Input from 'components/fields/input'\r\nimport { StyledDropdown, ChipContainer, Chips, Chip, ChipValue, ChipButton, Footer } from './styles'\r\nimport { INPUT } from 'components/fields/types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai'\r\nimport { GrAdd } from 'react-icons/gr'\r\nimport { Button } from 'antd'\r\nimport { updateData } from 'services'\r\n\r\nexport default function Dropdown(props) {\r\n  const [isAddShowing, setIsAddShowing] = useState(true)\r\n  const [list, setList] = useState([])\r\n  const [name, setName] = useState('')\r\n  const [initialList, setInitialList] = useState([])\r\n\r\n  useEffect(() => {\r\n    setName(props.name)\r\n    setInitialList(props.list)\r\n  }, [])\r\n  const handleAddChip = (e) => {\r\n    if (e.target.value.trim() !== '') {\r\n      const addedList = [...list]\r\n      addedList.push(e.target.value)\r\n      setList(addedList)\r\n\r\n      const listCopy = [...props.list]\r\n      if (!props?.list.includes(e.target.value)) {\r\n        listCopy.push(e.target.value)\r\n      }\r\n      props.handleChangeList(listCopy)\r\n    }\r\n  }\r\n\r\n  const handleRemoveChip = (value) => {\r\n    const listCopy = [...props.list]\r\n    const newListCopy = listCopy.filter(data => data !== value)\r\n    props.handleChangeList(newListCopy)\r\n  }\r\n\r\n  const handleClose = (clickedButton) => {\r\n    if (clickedButton === 'discard') {\r\n      // const listCopy = [...props.list]\r\n      // const newListCopy = listCopy.filter(data => !list.includes(data))\r\n      props.handleToggleEdit(false, initialList, name, 'discard')\r\n    } else {\r\n      setName(props.name)\r\n      setInitialList(props.list)\r\n      props.handleToggleEdit(false)\r\n      const data = {\r\n        name: props.name,\r\n        list: props.list\r\n      }\r\n      const collection = props?.collectionName\r\n      const id = props.id\r\n      updateData({ data, collection, id })\r\n    }\r\n    setList([])\r\n  }\r\n  return (\r\n    <StyledDropdown>\r\n      <div style={props.isEditable ? { width: '100%' } : { display: 'none' }}>\r\n        {fields[INPUT]({ label: 'Name', value: props.name, onChange: (e) => props.handleChange(e), isInline: true })}\r\n      </div>\r\n      <div style={!props.isEditable ? { width: '100%' } : { display: 'none' }}>\r\n        <label>Name: </label>\r\n        {props.name}\r\n      </div>\r\n      <br />\r\n      <ChipContainer>\r\n        <Chips>\r\n          {props?.list.map(listValue =>\r\n            <Chip key={listValue}>\r\n              <ChipValue>{listValue}</ChipValue>\r\n              <ChipButton onHover onClick={() => handleRemoveChip(listValue)} isEditable={props.isEditable}>\r\n                <AiOutlineCloseCircle />\r\n              </ChipButton>\r\n            </Chip>)}\r\n\r\n          <div style={!props.isEditable ? { display: 'none' } : {}}>\r\n            {isAddShowing\r\n              ? <Chip onHover>\r\n                <ChipValue onClick={() => setIsAddShowing(false)}>Add</ChipValue>\r\n                <ChipButton isEditable onClick={() => setIsAddShowing(false)}>\r\n                  <GrAdd />\r\n                </ChipButton>\r\n              </Chip>\r\n              : <Input onBlur={(e) => {\r\n                handleAddChip(e)\r\n                setIsAddShowing(true)\r\n              }}\r\n              />}\r\n\r\n          </div>\r\n        </Chips>\r\n\r\n      </ChipContainer>\r\n      <Footer display={!props.isEditable}>\r\n        <Button\r\n          size='small'\r\n          danger onClick={props.handleRemove}\r\n        >Remove\r\n        </Button>\r\n        <Button\r\n          size='small'\r\n          type='primary'\r\n          danger onClick={() => props.handleToggleEdit(true)}\r\n        >Edit\r\n        </Button>\r\n      </Footer>\r\n      <Footer display={props.isEditable}>\r\n        <Button\r\n          size='small'\r\n          danger\r\n          onClick={() => handleClose('discard')}\r\n        >Discard\r\n        </Button>\r\n        <Button\r\n          disabled={!isAddShowing}\r\n          type='primary'\r\n          size='small'\r\n          danger onClick={() => handleClose()}\r\n        >Save\r\n        </Button>\r\n      </Footer>\r\n    </StyledDropdown>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\appBarStyles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\schedulerSchema.js",["1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157"],"import orderSlipConfig, {\r\n  DROPDOWN_DATAS,\r\n} from \"components/SchedulerComponent/orderSlip/orderSlipConfig\"\r\nimport {\r\n  ACCOUNT_NAME,\r\n  ATCHARA,\r\n  BAO,\r\n  BASTING_SAUCE,\r\n  BC,\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BC_HALF,\r\n  BC_SAUCE,\r\n  BRANCH,\r\n  CHILI_OIL,\r\n  CH_12,\r\n  CH_8,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  DELIVERY_DATE,\r\n  EIGHT,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  GUID,\r\n  ID,\r\n  INDICATE_REASON,\r\n  JV_2,\r\n  JV_4,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  PAYMENT_MODE,\r\n  REPAER,\r\n  SPICED_VINEGAR,\r\n  STATUS,\r\n  TWELVE,\r\n  _ID,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\n\r\nconst schedulerSchema = {}\r\nfor (const obj of orderSlipConfig) {\r\n  if (obj.name) {\r\n    schedulerSchema[obj.name] = \"\"\r\n  }\r\n}\r\n\r\n// for number only\r\nconst checkIfValidNumber = (number) => {\r\n  if (isNaN(number)) {\r\n    return 0\r\n  } else {\r\n    if (number.trim() !== \"\") {\r\n      return parseInt(number)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\n// for dropdown only\r\nconst fillDropdownValueIfNull = (data, key) => {\r\n  if (data[key] === null) {\r\n    return DROPDOWN_DATAS[key][0]\r\n  } else {\r\n    return data[key]\r\n  }\r\n}\r\n\r\nexport default function (data) {\r\n  if (data) {\r\n    return {\r\n      ...data,\r\n      [BRANCH]: fillDropdownValueIfNull(data, BRANCH),\r\n      [DATE_START]: data[DATE_START],\r\n      [DATE_END]: data[DATE_END],\r\n      [CUSTOMER]: data[CUSTOMER],\r\n      [CONTACT_NUMBER]: data[CONTACT_NUMBER],\r\n      [ORDER_NO]: data[ORDER_NO],\r\n      [INDICATE_REASON]: data[INDICATE_REASON],\r\n      [ACCOUNT_NAME]: data[ACCOUNT_NAME],\r\n      [ID]: data[ID],\r\n      [GUID]: data?.Guid ? data?.Guid : null,\r\n      [_ID]: data[_ID],\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n\r\n// [CH_8]: checkIfValidNumber(data[CH_8]),\r\n// [CH_12]: checkIfValidNumber(data[CH_12]),\r\n// [BC_2]: checkIfValidNumber(data[BC_2]),\r\n// [BC_4]: checkIfValidNumber(data[BC_4]),\r\n// [JV_4]: checkIfValidNumber(data[JV_4]),\r\n// [JV_2]: checkIfValidNumber(data[JV_2]),\r\n// [BCJ_4]: checkIfValidNumber(data[BCJ_4]),\r\n// [BCJ_2]: checkIfValidNumber(data[BCJ_2]),\r\n// [BCJ_1]: checkIfValidNumber(data[BCJ_1]),\r\n// [FCH_8]: checkIfValidNumber(data[FCH_8]),\r\n// [FCH_12]: checkIfValidNumber(data[FCH_12]),\r\n// [FBC_4]: checkIfValidNumber(data[FBC_4]),\r\n// [ATCHARA]: checkIfValidNumber(data[ATCHARA]),\r\n// [BC_SAUCE]: checkIfValidNumber(data[BC_SAUCE]),\r\n// [SPICED_VINEGAR]: checkIfValidNumber(data[SPICED_VINEGAR]),\r\n// [BASTING_SAUCE]: checkIfValidNumber(data[BASTING_SAUCE]),\r\n// [CHILI_OIL]: checkIfValidNumber(data[CHILI_OIL]),\r\n// [REPAER]: checkIfValidNumber(data[REPAER]),\r\n// [BAO]: checkIfValidNumber(data[BAO]),\r\n// [DATE_ORDER_PLACED]: data[DATE_ORDER_PLACED] || new Date(),\r\n// [DELIVERY_DATE]: data[DELIVERY_DATE] || new Date(),\r\n// [ORDER_VIA]: fillDropdownValueIfNull(data, ORDER_VIA),\r\n// [STATUS]: fillDropdownValueIfNull(data, STATUS),\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\print.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\userCard.js",["1158","1159","1160","1161","1162"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Avatar, Dropdown, Switch, Button } from 'antd'\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons'\r\nimport { Wrapper } from './styles'\r\nimport Tags from 'components/tags'\r\nimport { getData, updateData } from 'services'\r\nimport { BRANCHES, ROLES, USERS } from 'services/collectionNames'\r\nimport Edit from './edit'\r\nconst { Meta } = Card\r\n\r\nconst Settings = ({ setIsEnabled, isEnabled }) => {\r\n  return (\r\n    <Card\r\n      style={{ width: 300 }}\r\n    >\r\n      <Wrapper>\r\n        <label style={{ marginRight: '1rem' }}>Disabled / Enabled </label>\r\n        <Switch checked={isEnabled} onChange={setIsEnabled} />\r\n      </Wrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function Users (props) {\r\n  const [isEnabled, setIsEnabled] = useState(false)\r\n  const [roles, setRoles] = useState([])\r\n  const [branches, setBranches] = useState([])\r\n\r\n  useEffect(() => {\r\n    setIsEnabled(props?.isEnabled)\r\n    setRoles(props?.roles)\r\n    setBranches(props?.branches)\r\n  }, [props])\r\n\r\n  const handleSave = (values) => {\r\n    props.handleSave(values)\r\n  }\r\n\r\n  const handleEnabled = (state) => {\r\n    const data = {\r\n      isEnabled: state\r\n    }\r\n    updateData({ collection: USERS, data, id: props?.email })\r\n    setIsEnabled(state)\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <Card\r\n        style={{ width: 300 }}\r\n        actions={[\r\n          <Dropdown\r\n            key='setting' overlay={<Settings\r\n              isEnabled={isEnabled}\r\n              setIsEnabled={() => { handleEnabled(!isEnabled) }}\r\n                                   />} placement='bottomCenter'\r\n          >\r\n            <SettingOutlined />\r\n          </Dropdown>,\r\n          <Dropdown\r\n            key='edit' overlay={\r\n              <Edit\r\n                isEnabled={isEnabled}\r\n                roleValues={roles}\r\n                branchValues={branches}\r\n                handleSave={handleSave}\r\n              />\r\n            } placement='bottomCenter'\r\n          >\r\n            <EditOutlined />\r\n          </Dropdown>,\r\n          <EllipsisOutlined key='ellipsis' />\r\n        ]}\r\n      >\r\n        {!isEnabled && <div style={{\r\n          height: '80%',\r\n          width: '100%',\r\n          background: 'grey',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: 999,\r\n          opacity: 0.5,\r\n          display: 'flex',\r\n          color: 'white',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n                       >UNAUTHORIZED USER\r\n        </div>}\r\n        <Meta\r\n          avatar={<Avatar src={props.photoURL} />}\r\n          title={props.name}\r\n          description={\r\n            <div>\r\n              <p>{props.email}<br /><small style={{ color: 'red' }}>{roles.join(', ')}</small></p>\r\n            </div>\r\n          }\r\n        />\r\n        <div style={{ height: '4rem' }}>\r\n          <div style={{ display: 'flex', flexFlow: 'row wrap', marginLeft: '3rem' }}>\r\n            {branches.map(data => <div key={data} style={{ backgroundColor: '#444', margin: '.3rem', color: 'white', padding: '0rem 1rem', borderRadius: '10px' }}>{data}</div>)}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\0.container\\index.js",["1163","1164","1165","1166"],"import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport Banner from \"../1.banner\"\r\nimport Menu from \"../2.menu\"\r\nimport { GRILL_RESERVATION } from \"../2.menu/menuData\"\r\n// import FilteringPanel from \"../3.filteringPanel/filteringPanel\"\r\nimport { FilteringPanel } from \"Restructured/Components/Features\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport { selectSideNav } from \"../sideNavSlice\"\r\nimport { Sidenav, Header, Body, Footer } from \"./styles\"\r\n\r\nfunction SideNav({ isToggled }) {\r\n  const { selectedMenu } = useSelector(selectSideNav)\r\n  return (\r\n    <Sidenav isToggled={isToggled}>\r\n      <Header>\r\n        <Banner />\r\n      </Header>\r\n      <Body>\r\n        <Menu isToggled={isToggled} />\r\n        {/* <br /> */}\r\n        {/* {selectedMenu[1] === GRILL_RESERVATION && (\r\n          <Grid display={isToggled} padding=\"0.5rem\">\r\n            <FilteringPanel />\r\n          </Grid>\r\n        )} */}\r\n      </Body>\r\n      <Footer> </Footer>\r\n    </Sidenav>\r\n  )\r\n}\r\n\r\nexport default SideNav\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\index.js",["1167","1168","1169"],"import DateTimePicker from './dateTimePicker'\r\nimport DropdownList from './dropdownList'\r\nimport Input from './input'\r\nimport TextArea from './textArea'\r\nimport {\r\n  BLANK_FIELD,\r\n  CHIPS,\r\n  DATE_PICKER,\r\n  DATE_TIME_PICKER,\r\n  DESCRIPTION,\r\n  DROP_DOWN_LIST,\r\n  HEADER_FIELD,\r\n  HIDDEN,\r\n  INPUT,\r\n  NUMBER,\r\n  ORDER_VIA_TYPE,\r\n  STATUS_REASON,\r\n  TEXT_AREA\r\n} from './types'\r\nimport classes from './index.module.css'\r\nimport Chips from './chips'\r\nimport DatePicker from './datePicker'\r\nimport { Description } from 'containers/0.login/styles'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Number from './number'\r\nimport OrderVia from './orderVia'\r\nimport StatusField from './statusField'\r\n\r\nconst RenderComponent = ({ label, children, isInline, isInlineBlock }) => {\r\n  if (isInline) {\r\n    return (\r\n      <div className={classes.containerInline}>\r\n        <div>\r\n          <label>{label}</label>\r\n        </div>\r\n        <div>{children}</div>\r\n      </div>\r\n    )\r\n  }\r\n  if (isInlineBlock) {\r\n    return (\r\n      <div className={classes.containerBlock}>\r\n        <div>\r\n          <label>{label}</label>\r\n        </div>\r\n        <div>{children}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.block}>\r\n      <div>\r\n        <label>{label}</label>\r\n      </div>\r\n      <div>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DescriptionComponent = (props) => {\r\n  const prices = [props[props.name], props.dataSource[2]]\r\n  const total = prices[0] * prices[1]\r\n  const [amount, setAmount] = useState(isNaN(total) ? '0.00' : total.toFixed(2))\r\n  const computeHandler = (e) => {\r\n    const newTotal = e.target.value * prices[1]\r\n    setAmount(newTotal.toFixed(2))\r\n    const qty =\r\n      isNaN(e.target.value) || e.target.value === '' ? '0' : e.target.value\r\n    props.setTotals({\r\n      ...props.totals,\r\n      [props.name]: { qty, price: props.dataSource[2] }\r\n    })\r\n  }\r\n\r\n  const renderData = (data, index) => {\r\n    if (props.name === 'Header') {\r\n      return data\r\n    }\r\n    if (typeof data === 'string') {\r\n      if (index === 3) {\r\n        return amount\r\n      } else if (index === 2) {\r\n        return data\r\n      } else {\r\n        return data\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.description}>\r\n      {props.dataSource.map((data, index) => {\r\n        return (\r\n          <div key={data} style={{ width: '100%' }}>\r\n            {typeof data === 'string' ? (\r\n              <div\r\n                style={\r\n                  index >= 2\r\n                    ? {\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-end'\r\n                      }\r\n                    : {}\r\n                }\r\n              >\r\n                {renderData(data, index)}\r\n              </div>\r\n            ) : (\r\n              fields[data.type]({\r\n                ...props,\r\n                onChange: computeHandler\r\n              })\r\n            )}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst fields = {\r\n  [DATE_TIME_PICKER]: (props) => {\r\n    return (\r\n      <RenderComponent\r\n        label={props.label}\r\n        isInline={props.isInline}\r\n        isInlineBlock={props.isInlineBlock}\r\n      >\r\n        <DateTimePicker {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DATE_PICKER]: (props) => {\r\n    return (\r\n      <RenderComponent\r\n        label={props.label}\r\n        isInline={props.isInline}\r\n        isInlineBlock={props.isInlineBlock}\r\n      >\r\n        <DatePicker {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DROP_DOWN_LIST]: (props) => {\r\n    return (\r\n      <RenderComponent {...props} isInline={props.isInline}>\r\n        <DropdownList {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [INPUT]: (props) => {\r\n    return (\r\n      <RenderComponent\r\n        label={props?.label}\r\n        isInline={props?.isInline}\r\n        isInlineBlock={props?.isInlineBlock}\r\n      >\r\n        <Input {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  // this is a special case\r\n  [ORDER_VIA_TYPE]: (props) => {\r\n    return (\r\n      <RenderComponent\r\n        label={props?.label}\r\n        isInline={props?.isInline}\r\n        isInlineBlock={props?.isInlineBlock}\r\n      >\r\n        <OrderVia {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  // this is a special case\r\n  [STATUS_REASON]: (props) => {\r\n    return (\r\n      <RenderComponent\r\n        label={props?.label}\r\n        isInline={props?.isInline}\r\n        isInlineBlock={props?.isInlineBlock}\r\n      >\r\n        <StatusField {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [TEXT_AREA]: (props) => {\r\n    return (\r\n      <RenderComponent {...props}>\r\n        <TextArea {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [NUMBER]: (props) => {\r\n    return (\r\n      <RenderComponent {...props}>\r\n        <Number {...props} />\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [DESCRIPTION]: (props) => {\r\n    return <DescriptionComponent {...props} />\r\n  },\r\n  [HIDDEN]: (props) => {\r\n    return (\r\n      <input\r\n        id={props.name}\r\n        className='e-field e-input'\r\n        type='hidden'\r\n        name={props.name}\r\n        style={{ width: '100%' }}\r\n      />\r\n    )\r\n  },\r\n  [BLANK_FIELD]: (props) => {\r\n    return <RenderComponent {...props} />\r\n  },\r\n  [HEADER_FIELD]: (props) => {\r\n    return (\r\n      <RenderComponent>\r\n        <b>{props.label}</b>\r\n      </RenderComponent>\r\n    )\r\n  },\r\n  [CHIPS]: (props) => {\r\n    return <Chips {...props} />\r\n  }\r\n}\r\n\r\nexport default fields\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\types.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\print\\ComponentToPrint.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\edit.js",["1170","1171","1172","1173"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Avatar, Dropdown, Switch, Button } from 'antd'\r\nimport { Wrapper } from './styles'\r\nimport Tags from 'components/tags'\r\nimport { getData } from 'services'\r\nimport { BRANCHES, ROLES } from 'services/collectionNames'\r\n\r\nconst Edit = ({\r\n  setIsEnabled,\r\n  isEnabled,\r\n  handleDiscard,\r\n  handleSave,\r\n  roleValues,\r\n  branchValues\r\n}) => {\r\n  const [roles, setRoles] = useState([])\r\n  const [branches, setBranches] = useState([])\r\n  const [isTouched, setIsTouched] = useState(false)\r\n  const [values, setValues] = useState({ branches: [], roles: [] })\r\n\r\n  useEffect(() => {\r\n    loadBranches()\r\n    loadRoles()\r\n    setValues({ branches: branchValues, roles: roleValues })\r\n  }, [])\r\n\r\n  const loadBranches = async () => {\r\n    const data = []\r\n    const result = await getData(BRANCHES)\r\n    for (const obj of result) {\r\n      data.push(obj.branchName)\r\n    }\r\n    setBranches(data)\r\n  }\r\n\r\n  const loadRoles = async () => {\r\n    const data = []\r\n    const result = await getData(ROLES)\r\n    for (const obj of result) {\r\n      data.push(obj.name)\r\n    }\r\n    setRoles(data)\r\n  }\r\n  return (\r\n    <Card\r\n      style={{ width: 300 }}\r\n    >\r\n      <Wrapper>\r\n        <Tags\r\n          label='Roles'\r\n          values={values.roles}\r\n          dropdowns={roles}\r\n          onChange={(value) => {\r\n            setIsTouched(true)\r\n            setValues({ ...values, roles: value })\r\n          }}\r\n        />\r\n        <Tags\r\n          label='Branches'\r\n          values={values.branches}\r\n          dropdowns={branches}\r\n          setIsTouched={() => setIsTouched(true)}\r\n          onChange={(value) => {\r\n            setIsTouched(true)\r\n            setValues({ ...values, branches: value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n        {isTouched && <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end', width: '100%' }}>\r\n          <Button\r\n            danger onClick={() => {\r\n              setIsTouched(false)\r\n              setValues({ branches: branchValues, roles: roleValues })\r\n            }}\r\n          >Discard\r\n          </Button>\r\n          <Button\r\n            danger type='primary' onClick={() => {\r\n              setIsTouched(false)\r\n              handleSave({ ...values })\r\n            }}\r\n          >Save\r\n          </Button>\r\n        </div>}\r\n      </Wrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Edit\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\0.container\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\filteringPanel.js",["1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187"],"import React, { useState, useEffect } from \"react\"\r\nimport fields from \"components/fields\"\r\nimport classes from \"./filteringPanel.module.css\"\r\nimport { DATE_PICKER, DROP_DOWN_LIST } from \"components/fields/types\"\r\nimport {\r\n  BCJ_1,\r\n  BCJ_2,\r\n  BCJ_4,\r\n  BC_2,\r\n  BC_4,\r\n  BRANCH,\r\n  CH_12,\r\n  CH_8,\r\n  DATE_END,\r\n  DATE_START,\r\n  FBC_4,\r\n  FCH_12,\r\n  FCH_8,\r\n  JV_2,\r\n  JV_4,\r\n  LABELS,\r\n  _ID,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport Animate, { FadeInLeft } from \"animate-css-styled-components\"\r\nimport { DROPDOWN_DATAS } from \"components/SchedulerComponent/orderSlip/orderSlipConfig\"\r\n\r\nimport { selectSchedulerComponentSlice } from \"components/SchedulerComponent/schedulerComponentSlice\"\r\n\r\nimport { useSelector } from \"react-redux\"\r\nimport { Body, Header } from \"./styles\"\r\nimport formatDataSource from \"components/SchedulerComponent/formatDataSource\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { useGetProducts } from \"components/products/useGetProducts\"\r\nimport sortByDate from \"commonFunctions/sort\"\r\n\r\nconst normalizeHour = (date) => {\r\n  const dateArray = date.split(\":\")\r\n  if (dateArray[0] > 12) {\r\n    const hour = dateArray[0] - 12\r\n    return `${hour}:${dateArray[1]} PM`\r\n  } else {\r\n    if (parseInt(dateArray[0]) === 12) {\r\n      return `${dateArray[0]}:${dateArray[1]} PM`\r\n    } else {\r\n      return `${dateArray[0]}:${dateArray[1]} AM`\r\n    }\r\n  }\r\n}\r\n\r\nconst getOnlyDate = (dateTime) => {\r\n  const dateTimeSplit = dateTime.toString().split(\" \")\r\n  return `${dateTimeSplit[1]} ${dateTimeSplit[2]} ${dateTimeSplit[3]}`\r\n}\r\n\r\nconst sumUp = (filteredData, productList) => {\r\n  const newFilteredData = []\r\n  for (const obj of filteredData) {\r\n    let _index = \"\"\r\n    const isExist = newFilteredData.some((data, index) => {\r\n      const startTime1 = data[DATE_START]?.toString().split(\" \")\r\n      const startTime2 = obj[DATE_START]?.toString().split(\" \")\r\n      _index = index\r\n      return normalizeHour(startTime1[4]) === normalizeHour(startTime2[4])\r\n    })\r\n\r\n    // put data into the product schema\r\n    const productWithData = {}\r\n    for (const key in productList) {\r\n      productWithData[key] = parseInt(obj[key])\r\n    }\r\n\r\n    if (isExist) {\r\n      const _newFilteredObj = { ...newFilteredData[_index] }\r\n      newFilteredData.splice(_index, 1)\r\n      for (const key in productList) {\r\n        _newFilteredObj[key] =\r\n          parseInt(_newFilteredObj[key]) + parseInt(obj[key])\r\n      }\r\n      newFilteredData.push({ ..._newFilteredObj })\r\n    } else {\r\n      newFilteredData.push({\r\n        [DATE_START]: obj[DATE_START],\r\n        [DATE_END]: obj[DATE_END],\r\n        [BRANCH]: obj[BRANCH], // this to identify the color of panel\r\n        ...productWithData,\r\n      })\r\n    }\r\n  }\r\n  return newFilteredData\r\n}\r\n\r\nfunction FilteringPanel({ isToggled }) {\r\n  const listOfProducts = {}\r\n  const [products] = useGetProducts()\r\n  const schedulerComponentSlice = useSelector(selectSchedulerComponentSlice)\r\n  const dataSource = [...formatDataSource(schedulerComponentSlice.dataSource)]\r\n\r\n  // produced a property of products\r\n  for (const obj of products) {\r\n    for (const product of obj.productList) {\r\n      listOfProducts[product?.code] = product?.description\r\n    }\r\n  }\r\n  const userSlice = useSelector(selectUserSlice)\r\n  const branchFirstItem =\r\n    userSlice.branches?.length > 0 ? userSlice.branches[0] : \"\"\r\n  const [branchValue, setBranchValue] = useState(branchFirstItem)\r\n  const [dateValue, setDateValue] = useState(new Date())\r\n  const [filteredDataSource, setFilteredDataSource] = useState([])\r\n  useEffect(() => {\r\n    const filteredDataCopy = [...handleFiltering(branchValue, dateValue)]\r\n    const sumUpData = [...sumUp(filteredDataCopy, listOfProducts)]\r\n    setFilteredDataSource(sumUpData)\r\n  }, [schedulerComponentSlice.dataSource])\r\n\r\n  const handleFiltering = (branch, date) => {\r\n    const filteredData = dataSource.filter((data) => {\r\n      const dateStart = getOnlyDate(data[DATE_START])\r\n      const dateFilter = getOnlyDate(date)\r\n      return data[BRANCH] === branch && dateStart === dateFilter\r\n    })\r\n    return filteredData\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Header isToggled={isToggled}>\r\n        <div>\r\n          {fields[DROP_DOWN_LIST]({\r\n            name: BRANCH,\r\n            label: LABELS[BRANCH],\r\n            dataSource: userSlice.branches,\r\n            value: branchValue,\r\n            onChange: (e) => {\r\n              setBranchValue(e.value)\r\n              const filteredDataCopy = [...handleFiltering(e.value, dateValue)]\r\n              const sumUpData = [...sumUp(filteredDataCopy, listOfProducts)]\r\n              setFilteredDataSource([])\r\n              setFilteredDataSource(sumUpData)\r\n            },\r\n          })}\r\n        </div>\r\n        <div>\r\n          {fields[DATE_PICKER]({\r\n            name: DATE_PICKER,\r\n            value: dateValue,\r\n            disabled: false,\r\n            label: \"Date\",\r\n            onChange: (e) => {\r\n              setDateValue(e.target.value)\r\n              const filteredDataCopy = [\r\n                ...handleFiltering(branchValue, e.target.value),\r\n              ]\r\n              const sumUpData = [...sumUp(filteredDataCopy, listOfProducts)]\r\n              setFilteredDataSource([])\r\n              setFilteredDataSource(sumUpData)\r\n            },\r\n          })}\r\n        </div>\r\n      </Header>\r\n      <Body isToggled={isToggled}>\r\n        {sortByDate(filteredDataSource, DATE_START).map((data, index) => {\r\n          const startTime = data[DATE_START]?.toString().split(\" \")\r\n          const endTime = data[DATE_END]?.toString().split(\" \")\r\n          const chips = Object.keys(listOfProducts).map((product) => {\r\n            if (data[product]) {\r\n              return {\r\n                label: listOfProducts[product],\r\n                value: data[product],\r\n              }\r\n            } else {\r\n              return null\r\n            }\r\n          })\r\n\r\n          const { branchColors } = schedulerComponentSlice\r\n          return (\r\n            <Animate\r\n              key={data[_ID]}\r\n              Animation={[FadeInLeft]}\r\n              duration={[\"1s\"]}\r\n              delay={[`0.${1 + index}s`]}\r\n            >\r\n              <div\r\n                className={classes[`panel${data[BRANCH]}`]}\r\n                style={{ backgroundColor: branchColors[data[BRANCH]] }}\r\n              >\r\n                <div className={classes.timeContainer}>\r\n                  <div>\r\n                    <label>Time start</label>\r\n                    <span>{normalizeHour(startTime[4])}</span>\r\n                  </div>\r\n                  <div>\r\n                    <label>Time end</label>\r\n                    <span>{normalizeHour(endTime[4])}</span>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.chips}>\r\n                  <div>\r\n                    {chips.map((chip, index) => {\r\n                      return (\r\n                        chip !== null && (\r\n                          <div key={index}>\r\n                            {`${chip.label}: ${chip.value}`}\r\n                          </div>\r\n                        )\r\n                      )\r\n                    })}\r\n\r\n                    {/* <div>{`${chips[1].label}: ${chips[1].value}`}</div>\r\n                    <div>{`${chips[2].label}: ${chips[2].value}`}</div>\r\n                    <div>{`${chips[3].label}: ${chips[3].value}`}</div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Animate>\r\n          )\r\n        })}\r\n      </Body>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilteringPanel\r\n",["1188","1189"],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\commonStyles\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\dropdowns.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\number.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\datePicker.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\chips.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\input.js",["1190","1191"],"import { PARTNER_MERCHANT_ORDER_NO } from 'components/SchedulerComponent/orderSlip/types'\r\nimport React from 'react'\r\nimport classes from './index.module.css'\r\nimport styled from 'styled-components'\r\n\r\nconst OutlinedContainer = styled.div`\r\n  border: 1px solid grey;\r\n  margin-top: 0.5rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  box-sizing: content-box;\r\n  position: relative;\r\n`\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <OutlinedContainer>\r\n      <input\r\n        id={props.name}\r\n        className='e-field e-input'\r\n        type={props.isNumber ? 'number' : 'text'}\r\n        name={props.name}\r\n        value={props.value}\r\n        style={{ width: '100%' }}\r\n        onChange={props?.onChange}\r\n        disabled={props?.disabled}\r\n        placeholder={props?.placeholder}\r\n        onBlur={props?.onBlur}\r\n      />\r\n    </OutlinedContainer>\r\n  )\r\n})\r\n\r\nexport default Input\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\dropdownList.js",["1192","1193","1194"],"import React, { useEffect, useState } from 'react'\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns'\r\nimport styled from 'styled-components'\r\nimport {\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  selectOrderComponentSlice,\r\n  setOrderViaField\r\n} from 'components/SchedulerComponent/orderSlip/orderSlipSlice'\r\n\r\nconst OutlinedContainer = styled.div`\r\n  border: 1px solid grey;\r\n  margin-top: 0.5rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  box-sizing: content-box;\r\n  position: relative;\r\n`\r\nfunction DropdownList (props) {\r\n  const [isDisplayed, setIsDisplayed] = useState(true)\r\n  const orderComponentSlice = useSelector(selectOrderComponentSlice)\r\n  const dispatch = useDispatch()\r\n\r\n  // const onChange = () => {\r\n  //   if (props.name === ORDER_VIA) {\r\n  //     return {\r\n  //       change: (e) => {\r\n  //         dispatch(setOrderViaField(e.value))\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     return {\r\n  //       change: props?.onChange\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    loadDisplayedSetting()\r\n  }, [orderComponentSlice.orderViaField])\r\n\r\n  const loadDisplayedSetting = () => {\r\n    if (orderComponentSlice.orderViaField) {\r\n      if (orderComponentSlice.orderViaField.includes('Partner Merchant')) {\r\n        setIsDisplayed(false)\r\n      } else {\r\n        setIsDisplayed(true)\r\n      }\r\n    } else {\r\n      setIsDisplayed(true)\r\n    }\r\n  }\r\n\r\n  const handleOrderVia = (e) => {\r\n    if (e) {\r\n      if (props.name === ORDER_VIA) {\r\n        if (e.value === null) {\r\n          dispatch(setOrderViaField(e.value))\r\n        } else {\r\n          dispatch(setOrderViaField(`Direct ${e.value}`))\r\n        }\r\n      }\r\n      if (props.name === ORDER_VIA_PARTNER) {\r\n        if (e.value === null) {\r\n          dispatch(setOrderViaField(e.value))\r\n        } else {\r\n          dispatch(setOrderViaField(`Partner Merchant ${e.value}`))\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return props?.isGrouped ? (\r\n    <OutlinedContainer>\r\n      <DropDownListComponent\r\n        id={props.name}\r\n        value={props?.value}\r\n        className='e-field'\r\n        popupHeight='200px'\r\n        fields={props.field}\r\n        dataSource={props.dataSource}\r\n        placeholder='Choose'\r\n        enabled={props?.enabled}\r\n      />\r\n    </OutlinedContainer>\r\n  ) : (\r\n    <OutlinedContainer>\r\n      <DropDownListComponent\r\n        enabled={props.enabled}\r\n        id={props.name}\r\n        value={props?.value}\r\n        placeholder='Choose'\r\n        data-name={props.name}\r\n        change={props?.onChange}\r\n        className='e-field'\r\n        style={{ width: '100%' }}\r\n        dataSource={[...props.dataSource]}\r\n      />\r\n    </OutlinedContainer>\r\n  )\r\n}\r\n\r\nexport default DropdownList\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\dateTimePicker.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\2.menu\\index.js",["1195"],"import React, { useState } from \"react\"\r\nimport {\r\n  Wrapper,\r\n  TitleItem,\r\n  MenuItem,\r\n  MenuText,\r\n  ArrowDown,\r\n  ArrowUp,\r\n  SubItem,\r\n  SubMenuContainer,\r\n} from \"./styles\"\r\nimport { useSelectMenus } from \"./menuData\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectSideNav } from \"../sideNavSlice\"\r\nimport { selectMenuSlice } from \"./menuSlice\"\r\n\r\nconst menus = {}\r\nfunction Menu({ isToggled }) {\r\n  const { menuData } = useSelector(selectMenuSlice)\r\n  const sideNavSlice = useSelector(selectSideNav)\r\n  const [state, setState] = useState(menus)\r\n\r\n  for (const obj of menuData) {\r\n    menus[obj.title] = sideNavSlice.selectedMenu.includes(obj.title)\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {menuData.map(({ title, Icon, subMenu, display, path, flex }) => (\r\n        <div\r\n          style={\r\n            title === \"Settings\"\r\n              ? { position: \"absolute\", bottom: 1, width: \"100%\" }\r\n              : {}\r\n          }\r\n        >\r\n          <MenuItem key={title} style={display ? {} : { display: \"none\" }}>\r\n            {/* main title */}\r\n            {subMenu.length > 0 ? (\r\n              <TitleItem\r\n                active={sideNavSlice.selectedMenu.includes(title)}\r\n                onClick={() => setState({ ...state, [title]: !state[title] })}\r\n              >\r\n                <div>\r\n                  <Icon isToggled={isToggled} />\r\n                </div>\r\n                <MenuText isToggled={isToggled}>{title}</MenuText>\r\n                {state[title] ? <ArrowUp /> : <ArrowDown />}\r\n              </TitleItem>\r\n            ) : (\r\n              <SubItem isToggled={isToggled} to={path}>\r\n                {title}\r\n              </SubItem>\r\n            )}\r\n\r\n            {/* sub items */}\r\n            <SubMenuContainer active={state[title]} isToggled={isToggled}>\r\n              {subMenu.map((subItem) => (\r\n                <SubItem\r\n                  style={subItem.display ? {} : { display: \"none\" }}\r\n                  to={subItem.path}\r\n                  key={subItem.title}\r\n                  active={sideNavSlice.selectedMenu.includes(subItem.title)}\r\n                >\r\n                  <span style={{ marginLeft: \"5rem\" }}>{subItem.title}</span>\r\n                </SubItem>\r\n              ))}\r\n            </SubMenuContainer>\r\n          </MenuItem>\r\n        </div>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\1.banner\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\3.filteringPanel\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dialog\\index.js",["1196","1197","1198"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button } from \"antd\"\r\nimport fields from \"components/fields\"\r\nimport { INPUT } from \"components/fields/types\"\r\nimport { AiOutlinePlus } from \"react-icons/ai\"\r\n\r\nexport default function App(props) {\r\n  const [fieldNames, setFieldNames] = useState({})\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n    props.setOthers(fieldNames)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  const handleAdd = (index) => {\r\n    const newFieldNames = { ...fieldNames }\r\n    newFieldNames[index] = \"\"\r\n    setFieldNames(newFieldNames)\r\n  }\r\n\r\n  const handleChange = (e, index) => {\r\n    const newFieldNames = { ...fieldNames }\r\n    newFieldNames[index] = e.target.value\r\n    setFieldNames(newFieldNames)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props?.others) {\r\n      let count = 0\r\n      for (const key in props?.others) {\r\n        setFieldNames({ ...fieldNames, [count]: key })\r\n        count = count + 1\r\n      }\r\n    } else {\r\n      setFieldNames({ 0: \"\" })\r\n    }\r\n  }, [props?.others])\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showModal} danger>\r\n        {props.label}\r\n      </Button>\r\n      <Modal\r\n        title=\"Add fields\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {Object.keys(fieldNames).map((fieldName, index) => {\r\n          return (\r\n            <div key={index} style={{ display: \"flex\" }}>\r\n              <div style={{ flex: \".8\" }}>\r\n                {fields[INPUT]({\r\n                  name: fieldName,\r\n                  value: fieldNames[index],\r\n                  onChange: (e) => handleChange(e, index),\r\n                })}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  flex: \".2\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {/* {Object.keys(fieldNames).length - 1 === index && (\r\n                  <Button\r\n                    type='secondary'\r\n                    danger\r\n                    shape='circle'\r\n                    onClick={() => handleAdd(index + 1)}\r\n                    icon={<AiOutlinePlus />}\r\n                  />\r\n                )} */}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\tags\\index.js",["1199","1200"],"import React, { useEffect, useState } from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst children = []\r\nfor (let i = 10; i < 36; i++) {\r\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>)\r\n}\r\n\r\nexport default function Tags (props) {\r\n  return (\r\n    <>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        mode='multiple'\r\n        allowClear\r\n        style={{ width: '100%' }}\r\n        placeholder='Please select'\r\n        value={props.values}\r\n        onChange={props.onChange}\r\n      >\r\n        {props.dropdowns.map(data => <Option key={data}>{data}</Option>)}\r\n      </Select>\r\n    </>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\sideNav\\1.banner\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\5.product_masterfile\\index.js",["1201","1202"],"import React, { useState, useEffect } from 'react'\r\nimport AppBar from 'components/appBar'\r\nimport { Wrapper, Container, RightContent } from '../styles'\r\nimport Sidenav from 'components/sideNav'\r\nimport Animate, { FadeIn } from 'animate-css-styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { navigateTo } from 'components/sideNav/sideNavSlice'\r\nimport {\r\n  MASTER_DATA\r\n} from 'components/sideNav/2.menu/menuData'\r\nimport { Products } from 'components/products'\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([MASTER_DATA, props?.breadcrumbs]))\r\n  }, [props?.breadcrumbs])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={['1s']} delay={['0.2s']}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Products />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\index.js",["1203","1204","1205","1206"],"import { Panel, Wrapper, Footer } from \"./styles\"\r\nimport React, { useEffect } from \"react\"\r\nimport { useGetProducts } from \"./useGetProducts\"\r\nimport { Container } from \"commonStyles\"\r\nimport { Button } from \"antd\"\r\nimport Table, { toolbarOptions, editSettings } from \"./table\"\r\n\r\nexport function Products(props) {\r\n  const [products, handleChange] = useGetProducts()\r\n  const columns = [\r\n    {\r\n      headerText: \"Code\",\r\n      field: \"code\",\r\n      isPrimaryKey: true,\r\n    },\r\n    {\r\n      headerText: \"Description\",\r\n      field: \"description\",\r\n    },\r\n    {\r\n      headerText: \"Price\",\r\n      field: \"price\",\r\n    },\r\n  ]\r\n  return (\r\n    <Wrapper>\r\n      {products.map((data) => {\r\n        if (typeof data.productList === \"undefined\") {\r\n          data.productList = []\r\n        }\r\n        return (\r\n          <Panel key={data.groupHeader}>\r\n            <Container>\r\n              <div>{data.groupHeader}</div>\r\n              <br />\r\n              <Table\r\n                id={data._id}\r\n                productList={data.productList}\r\n                columns={columns}\r\n                toolbar={toolbarOptions}\r\n                editSettings={editSettings}\r\n              />\r\n              <br />\r\n            </Container>\r\n          </Panel>\r\n        )\r\n      })}\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\useGetProducts.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\products\\table.js",["1207","1208","1209","1210","1211","1212","1213","1214"],"import * as React from \"react\"\r\nimport {\r\n  GridComponent,\r\n  ColumnsDirective,\r\n  ColumnDirective,\r\n  Resize,\r\n  Sort,\r\n  ContextMenu,\r\n  Page,\r\n  ExcelExport,\r\n  Group,\r\n  PdfExport,\r\n  Edit,\r\n  Inject,\r\n  Search,\r\n  Toolbar,\r\n} from \"@syncfusion/ej2-react-grids\"\r\nimport { addData, deleteData, updateData } from \"services\"\r\nimport { PRODUCTS } from \"services/collectionNames\"\r\nconst Table = (props) => {\r\n  const [productList, setProductList] = React.useState([])\r\n  const contextMenuItems = [\r\n    \"AutoFit\",\r\n    \"AutoFitAll\",\r\n    \"SortAscending\",\r\n    \"SortDescending\",\r\n    \"Copy\",\r\n    \"Edit\",\r\n    \"Delete\",\r\n    \"Save\",\r\n    \"Cancel\",\r\n    \"PdfExport\",\r\n    \"ExcelExport\",\r\n    \"CsvExport\",\r\n    \"FirstPage\",\r\n    \"PrevPage\",\r\n    \"LastPage\",\r\n    \"NextPage\",\r\n  ]\r\n\r\n  React.useEffect(() => {\r\n    setProductList(props.productList)\r\n  }, [props])\r\n  const onActionBegin = (e) => {\r\n    const { requestType, data, action } = e\r\n    if (requestType === \"save\") {\r\n      if (action === \"add\") {\r\n        const dataCopy = { ...data }\r\n        let productList = [...props.productList]\r\n        if (\r\n          props.productList.some((product) => product?.code === dataCopy?.code)\r\n        ) {\r\n          productList = productList.filter(\r\n            (prod) => prod?.code !== dataCopy?.code\r\n          )\r\n        }\r\n        const productListConvertedPriceToNumber = productList.map((product) => {\r\n          return {\r\n            ...product,\r\n            price: parseInt(product.price),\r\n          }\r\n        })\r\n        setProductList(productList)\r\n        const updatedProductList = [\r\n          ...productListConvertedPriceToNumber,\r\n          {\r\n            ...data,\r\n            description: data.description || \"EMPTY\",\r\n            price: parseInt(data.price) || 0,\r\n          },\r\n        ]\r\n        updateData({\r\n          data: { productList: updatedProductList },\r\n          id: props.id,\r\n          collection: PRODUCTS,\r\n        })\r\n      }\r\n      if (action === \"edit\") {\r\n        console.log(\"props\", data)\r\n        const dataCopy = { ...data }\r\n        const productList = props.productList.filter(\r\n          (product) => product.code !== dataCopy.code\r\n        )\r\n        productList.push({ ...data })\r\n        console.log(\"projectList\", productList)\r\n        setProductList(productList)\r\n        updateData({\r\n          data: { productList },\r\n          id: props.id,\r\n          collection: PRODUCTS,\r\n        })\r\n      }\r\n    }\r\n    if (requestType === \"delete\") {\r\n      const dataCopy = { ...data }\r\n      const productList = [\r\n        ...props.productList.filter(\r\n          (product) => product.code !== dataCopy[0].code\r\n        ),\r\n      ] // dataCopy[0] has zero since the response is an array\r\n      setProductList(productList)\r\n      updateData({\r\n        data: { productList },\r\n        id: props.id,\r\n        collection: PRODUCTS,\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"control-pane\">\r\n        <div className=\"control-section\">\r\n          <GridComponent\r\n            id=\"gridcomp\"\r\n            dataSource={productList}\r\n            allowPaging\r\n            allowSorting\r\n            allowExcelExport\r\n            allowPdfExport\r\n            contextMenuItems={contextMenuItems}\r\n            actionBegin={onActionBegin}\r\n            {...props}\r\n          >\r\n            <ColumnsDirective>\r\n              {props.columns.map((data) => {\r\n                return <ColumnDirective key={data.field} {...data} />\r\n              })}\r\n            </ColumnsDirective>\r\n            <Inject services={[Page, Toolbar, Edit, Sort]} />\r\n          </GridComponent>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport const toolbarOptions = [\"Add\", \"Edit\", \"Delete\", \"Update\", \"Cancel\"]\r\nexport const editSettings = {\r\n  allowEditing: true,\r\n  allowAdding: true,\r\n  allowDeleting: true,\r\n  newRowPosition: \"Top\",\r\n}\r\nexport default Table\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\textArea.js",["1215","1216","1217"],"import { TextBoxComponent } from \"@syncfusion/ej2-react-inputs\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst OutlinedContainer = styled.div`\r\n  border: 1px solid grey;\r\n  margin-top: 0.5rem;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  box-sizing: content-box;\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nfunction TextArea(props) {\r\n  return (\r\n    <OutlinedContainer>\r\n      <textarea\r\n        id={props.name}\r\n        class=\"e-field e-input\"\r\n        name={props.name}\r\n        rows=\"3\"\r\n        cols=\"50\"\r\n        value={props.value}\r\n        style={{ resize: \"vertical\" }}\r\n        onChange={props?.onChange}\r\n      />\r\n    </OutlinedContainer>\r\n  )\r\n}\r\n\r\nexport default TextArea\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\dropdownGroup.js",["1218"],"import { isEditable } from '@syncfusion/ej2-grids'\r\nimport { Button } from 'antd'\r\nimport Tags from 'components/tags'\r\nimport React, { useState } from 'react'\r\nimport { GroupContainer, StyledDropdown, Chips, Chip, ChipValue, ChipContainer, Footer } from './styles'\r\n\r\nexport function Dropdowngroup(props) {\r\n  const [values, setValues] = useState(['test'])\r\n  return props.isEditable\r\n    ? (\r\n      <StyledDropdown>\r\n        <label>Name: {props.groupName}</label><br />\r\n        <GroupContainer>\r\n          <Tags\r\n            label={props.groupName}\r\n            values={values}\r\n            dropdowns={['test', 'test2', 'test3']}\r\n            onChange={(value) => {\r\n              setValues({ ...values, roles: value })\r\n            }}\r\n          />\r\n        </GroupContainer>\r\n      </StyledDropdown>\r\n    )\r\n    : (\r\n      <StyledDropdown>\r\n        <label>Name: {props.groupName}</label><br />\r\n        <ChipContainer>\r\n          {props.groups.map(group =>\r\n            <div key={group?.name}>\r\n              <label>{group?.name}</label>\r\n              <Chips>\r\n                {group.values?.map(listValue =>\r\n                  <Chip key={listValue}>\r\n                    <ChipValue>{listValue}</ChipValue>\r\n                  </Chip>)}\r\n              </Chips>\r\n            </div>)}\r\n        </ChipContainer>\r\n        <Footer display={!props.isEditable}>\r\n          <Button\r\n            size='small'\r\n            danger onClick={() => { }}\r\n          >Remove\r\n          </Button>\r\n          <Button\r\n            size='small'\r\n            type='primary'\r\n            danger onClick={() => { }}\r\n          >Edit\r\n          </Button>\r\n        </Footer>\r\n      </StyledDropdown>\r\n    )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\dropdowns\\useDropdownGroup.js",["1219"],"import { useEffect, useState } from 'react'\r\nimport { addData, getData } from 'services'\r\n\r\nexport function useGetDropdownGroup(dropdownName) {\r\n  const [groupDropdowns, setGroupDropdowns] = useState([])\r\n  useEffect(() => {\r\n    loadGroupDropdown()\r\n  }, [])\r\n\r\n  const loadGroupDropdown = async () => {\r\n    const result = await getData('groupDropdowns')\r\n    setGroupDropdowns([...result])\r\n  }\r\n\r\n  const saveGroupDropdowns = async (list) => {\r\n    const result = await addData({ data: [], collection: dropdownName })\r\n  }\r\n\r\n  return [groupDropdowns, saveGroupDropdowns]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\useGetBranches.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\users\\useGetUsers.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\useHandleModal.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\formatDate.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\sort.js",["1220"],"export default (array, field) => {\r\n  return array.sort((a, b) => a[field] - b[field])\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\uploads\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\uploads\\useGetUploads.js",["1221","1222"],"import { useEffect, useState } from 'react'\r\nimport { addData, deleteData, getData } from 'services'\r\nimport db, { storage } from 'services/firebase'\r\n\r\nexport function useGetUploads (documentId) {\r\n  const [fileList, setFileList] = useState([\r\n    // {\r\n    //   uid: 'a',\r\n    //   name: 'xxx.png',\r\n    //   status: 'done',\r\n    //   url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    //   thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    //   idRef: 'asdfasdfasdf'\r\n    // },\r\n    // {\r\n    //   uid: 'b',\r\n    //   name: 'yyy.png',\r\n    //   status: 'error'\r\n    // }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    loadUploads(documentId)\r\n  }, [documentId])\r\n\r\n  const addUpload = async (data) => {\r\n    const newFileListFilter = fileList.filter(file => file.status !== 'uploading')\r\n    const newFileList = [...newFileListFilter]\r\n    const docRefId = await addData({ collection: 'uploads', data })\r\n    newFileList.push({ ...data, uploadId: docRefId })\r\n    setFileList(newFileList)\r\n  }\r\n\r\n  const handleUpload = (file) => {\r\n    console.log('file', file)\r\n    const newFileList = [...fileList]\r\n    newFileList.push({ name: file?.name, status: 'uploading', uid: file?.uid, percent: 50, url: '' })\r\n    setFileList(newFileList)\r\n\r\n    const uploadTask = storage.ref(`uploads/${documentId}/${file.name}`).put(file)\r\n    uploadTask.on(\r\n      'state_changed',\r\n      snapshot => { },\r\n      error => {\r\n        console.log(error)\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(`uploads/${documentId}`)\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            if (url) {\r\n              const data = { name: file?.name, url, thumbUrl: url, idRef: documentId, status: 'done', uid: file?.uid }\r\n              addUpload(data)\r\n            }\r\n          })\r\n      }\r\n    )\r\n  }\r\n  const handleRemove = (file) => {\r\n    const newFileList = fileList.filter(f => f.uploadId !== file.uploadId)\r\n    setFileList(newFileList)\r\n    // Create a reference to the file to delete\r\n    const deleteTask = storage?.ref(`uploads/${file.idRef}/`).child(file.name)\r\n    // Delete the file\r\n    deleteTask.delete().then(() => {\r\n      deleteData({ id: file.uploadId, collection: 'uploads' })\r\n    }).catch((error) => {\r\n      console.log('delete upload error occured', error)\r\n      // Uh-oh, an error occurred!\r\n    })\r\n  }\r\n  const loadUploads = async (id) => {\r\n    db.collection('uploads')\r\n      .where('idRef', '==', id)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const newFileList = [...fileList]\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data()\r\n          newFileList.push({ ...data, uploadId: doc.id })\r\n        })\r\n        setFileList([...newFileList])\r\n      })\r\n  }\r\n  return [fileList, handleUpload, handleRemove]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\orderVia.js",["1223","1224","1225","1226"],"// this function component is a special case\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport Input from \"./input\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  LABELS,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport DropdownList from \"./dropdownList\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectOrderComponentSlice } from \"components/SchedulerComponent/orderSlip/orderSlipSlice\"\r\n\r\nconst Container = styled.div`\r\n  display: ${(props) => (props.isDisplayed ? \"flex\" : \"flex\")};\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  position: relative;\r\n`\r\nconst Left = styled.div`\r\n  width: 50%;\r\n\r\n  label {\r\n    color: #888;\r\n  }\r\n`\r\n\r\nconst Right = styled.div`\r\n  width: 50%;\r\n  position: absolute;\r\n  right: -0.9rem;\r\n\r\n  label {\r\n    color: #888;\r\n  }\r\n`\r\n\r\nfunction OrderVia(props) {\r\n  const orderComponentSlice = useSelector(selectOrderComponentSlice)\r\n  const [isPartnerMerchant, setPartnerMerchant] = useState(false)\r\n  const [newProps, setNewProps] = useState(props)\r\n  const [secondFieldValue, setSecondFieldValue] = useState(\"\")\r\n  const [isDisplayed, setIsDisplayed] = useState(false)\r\n  // const [dataSource, setDataSource] = useState([])\r\n  useEffect(() => {\r\n    setNewProps(props)\r\n    // reStructureDataSource()\r\n    setSecondFieldValue(props[PARTNER_MERCHANT_ORDER_NO])\r\n  }, [props])\r\n\r\n  // const reStructureDataSource = () => {\r\n  //   const newDataSource =\r\n  //     props?.label === LABELS[ORDER_VIA]\r\n  //       ? props.dataSource.filter((data) => data.Category === 'Direct')\r\n  //       : props.dataSource.filter(\r\n  //         (data) => data.Category === 'Partner Merchant'\r\n  //       )\r\n\r\n  //   setDataSource(newDataSource)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    loadDisplayedSetting()\r\n  }, [orderComponentSlice.orderViaField])\r\n\r\n  const loadDisplayedSetting = () => {\r\n    if (orderComponentSlice.orderViaField) {\r\n      if (orderComponentSlice.orderViaField.includes(\"Direct\")) {\r\n        setIsDisplayed(false)\r\n      } else if (\r\n        orderComponentSlice.orderViaField.includes(\"Partner Merchant\")\r\n      ) {\r\n        setIsDisplayed(true)\r\n      } else {\r\n        setIsDisplayed(true)\r\n      }\r\n    } else {\r\n      setIsDisplayed(true)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Left>\r\n        <label>{LABELS[ORDER_VIA_PARTNER]}</label>\r\n        <DropdownList\r\n          {...newProps}\r\n          enabled={props?.enabled}\r\n          value={newProps[ORDER_VIA_PARTNER]}\r\n          name={ORDER_VIA_PARTNER}\r\n          id={ORDER_VIA_PARTNER}\r\n          change={props?.onChange}\r\n        />\r\n      </Left>\r\n      <Right>\r\n        <label>{LABELS[PARTNER_MERCHANT_ORDER_NO]}</label>\r\n        <Input\r\n          {...newProps}\r\n          name={PARTNER_MERCHANT_ORDER_NO}\r\n          disabled={!isDisplayed}\r\n          value={secondFieldValue}\r\n          onChange={(e) => {\r\n            setSecondFieldValue(e.target.value)\r\n          }}\r\n        />\r\n      </Right>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OrderVia\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\fields\\statusField.js",["1227","1228"],"// this function component is a special case\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport Input from './input'\r\nimport styled from 'styled-components'\r\nimport {\r\n  INDICATE_REASON,\r\n  LABELS,\r\n  ORDER_VIA,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n  STATUS\r\n} from 'components/SchedulerComponent/orderSlip/types'\r\nimport DropdownList from './dropdownList'\r\nimport { useGetDropdowns } from 'components/SchedulerComponent/dropdowns'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  position: relative;\r\n`\r\nconst Left = styled.div`\r\n  width: 50%;\r\n\r\n  label {\r\n    color: #888;\r\n  }\r\n`\r\n\r\nconst Right = styled.div`\r\n  width: 50%;\r\n  position: absolute;\r\n  right: -0.9rem;\r\n\r\n  label {\r\n    color: #888;\r\n  }\r\n`\r\n\r\nfunction StatusField (props) {\r\n  const dropdowns = useGetDropdowns()\r\n  const [isCancelledResched, setIsCancelledResched] = useState(false)\r\n  const [newProps, setNewProps] = useState(props)\r\n  const [secondFieldValue, setSecondFieldValue] = useState('')\r\n  useEffect(() => {\r\n    setNewProps(props)\r\n    setSecondFieldValue(props[INDICATE_REASON])\r\n  }, [props])\r\n  return (\r\n    <Container>\r\n      <Left>\r\n        <label>{LABELS[STATUS]}</label>\r\n        <DropdownList\r\n          {...newProps}\r\n          value={newProps[STATUS]}\r\n          name={STATUS}\r\n          dataSource={dropdowns[STATUS]}\r\n          onChange={(e) => {\r\n            if (e.value) {\r\n              if (\r\n                e.value === 'REVISED / RESCHEDULED' ||\r\n                e.value === 'CANCELLED'\r\n              ) {\r\n                setIsCancelledResched(false)\r\n                setSecondFieldValue(props[INDICATE_REASON])\r\n              } else {\r\n                setIsCancelledResched(true)\r\n                setSecondFieldValue('')\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </Left>\r\n      <Right>\r\n        <label>{LABELS[INDICATE_REASON]}</label>\r\n        <Input\r\n          {...newProps}\r\n          name={INDICATE_REASON}\r\n          value={secondFieldValue}\r\n          disabled={isCancelledResched}\r\n          onChange={(e) => {\r\n            setSecondFieldValue(e.target.value)\r\n          }}\r\n        />\r\n      </Right>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StatusField\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\orderSlip\\useOrderViaField.js",["1229"],"import { useState, useEffect } from \"react\"\r\nimport { ORDER_VIA, ORDER_VIA_PARTNER } from \"./types\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectOrderComponentSlice, setOrderViaField } from \"./orderSlipSlice\"\r\n\r\nexport function useOrderViaField() {\r\n  const dispatch = useDispatch()\r\n  const [isDisplayedDirect, setIsDisplayedDirect] = useState(true)\r\n  const [isDisplayedPartner, setIsDisplayedPartner] = useState(true)\r\n  const orderComponentSlice = useSelector(selectOrderComponentSlice)\r\n\r\n  useEffect(() => {\r\n    loadDisplayedSetting()\r\n  }, [orderComponentSlice.orderViaField])\r\n\r\n  const loadDisplayedSetting = () => {\r\n    if (orderComponentSlice.orderViaField) {\r\n      if (orderComponentSlice.orderViaField.includes(\"Partner Merchant\")) {\r\n        setIsDisplayedDirect(false)\r\n        setIsDisplayedPartner(true)\r\n      } else {\r\n        setIsDisplayedDirect(true)\r\n        setIsDisplayedPartner(false)\r\n      }\r\n    } else {\r\n      setIsDisplayedDirect(true)\r\n      setIsDisplayedPartner(true)\r\n    }\r\n  }\r\n\r\n  const handleOrderVia = (e, props) => {\r\n    if (e) {\r\n      console.log(\"testOrdervia\", e)\r\n      if (props.name === ORDER_VIA) {\r\n        if (e.value === null || e.value === \"\") {\r\n          dispatch(setOrderViaField(e.value))\r\n        } else {\r\n          dispatch(setOrderViaField(`Direct ${e.value}`))\r\n        }\r\n      }\r\n      if (props.name === ORDER_VIA_PARTNER) {\r\n        if (e.value === null || e.value === \"\") {\r\n          dispatch(setOrderViaField(e.value))\r\n        } else {\r\n          dispatch(setOrderViaField(`Partner Merchant ${e.value}`))\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return [isDisplayedDirect, isDisplayedPartner, handleOrderVia]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\commonFunctions\\formatNumber.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\index.js",["1230","1231","1232"],"import React, { useState } from \"react\"\r\nimport {\r\n  DATE,\r\n  DATE_START,\r\n  DATE_END,\r\n  BRANCH,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport {\r\n  Timepicker,\r\n  RangePicker,\r\n  Select,\r\n} from \"Restructured/Components/Commons\"\r\nimport Panel from \"./Panel\"\r\nimport useSchedulerFilter from \"./Controllers/useSchedulerFilter\"\r\nimport Animate, { FadeInLeft } from \"animate-css-styled-components\"\r\nimport Print from \"../Print\"\r\nimport FilteringPanelDocs from \"../Print/Documents/filteringPanelDocs\"\r\nimport { FloatContainer } from \"./styles\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport { STATUS } from \"components/SchedulerComponent/orderSlip/types\"\r\n\r\nfunction FilteringPanel({ isToggled }) {\r\n  const [\r\n    dataFetched,\r\n    dataFiltered,\r\n    branch,\r\n    branchColors,\r\n    branchDatasource,\r\n    products,\r\n    productLabels,\r\n    getDataByBranch,\r\n    getDataByDate,\r\n  ] = useSchedulerFilter()\r\n\r\n  console.log(\"printDataFetched\", dataFetched)\r\n  return (\r\n    <Grid>\r\n      <Select\r\n        label=\"Branch\"\r\n        dataSource={branchDatasource}\r\n        value={branch}\r\n        onChange={(value) => getDataByBranch(value)}\r\n      />\r\n      <RangePicker\r\n        label=\"Date\"\r\n        onChange={(value) => {\r\n          getDataByDate({ dates: value })\r\n        }}\r\n        disabled={products.length > 0 ? false : true}\r\n      />\r\n      <Grid>\r\n        {dataFiltered.map((data, index) => {\r\n          const chips = []\r\n          for (const key in data) {\r\n            if (products.includes(key)) {\r\n              chips.push(`${productLabels[key]}: ${data[key]}`)\r\n            }\r\n          }\r\n          return (\r\n            <Animate\r\n              key={index}\r\n              Animation={[FadeInLeft]}\r\n              duration={[\"1s\"]}\r\n              delay={[`0.${1 + index}s`]}\r\n            >\r\n              <Panel\r\n                date={data[DATE]}\r\n                timeStart={data[DATE_START]}\r\n                timeEnd={data[DATE_END]}\r\n                backgroundColor={branchColors[data[BRANCH]]}\r\n                chips={[...chips]}\r\n              />\r\n            </Animate>\r\n          )\r\n        })}\r\n      </Grid>\r\n      <FloatContainer display={isToggled}>\r\n        {dataFetched.length > 0 && branch && (\r\n          <Print\r\n            component={\r\n              <FilteringPanelDocs\r\n                documentPrintInfo={{\r\n                  dataFetched: dataFetched,\r\n                  products,\r\n                  productLabels,\r\n                }}\r\n                branch={branch}\r\n              />\r\n            }\r\n            button={<AiFillPrinter fontSize=\"1.5rem\" />}\r\n          />\r\n        )}\r\n      </FloatContainer>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FilteringPanel\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Styles\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\Timepicker\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\RangePicker\\index.js",["1233"],"import React from \"react\"\r\nimport { FieldContainer } from \"../styles\"\r\nimport { DatePicker, Space } from \"antd\"\r\nconst { RangePicker } = DatePicker\r\n\r\nfunction CustomTimePicker({\r\n  label,\r\n  onChange,\r\n  value,\r\n  disabled,\r\n  showTime = true,\r\n  format = \"MM/DD/YYYY hh:mm A\",\r\n}) {\r\n  return (\r\n    <FieldContainer>\r\n      <label>{label}</label>\r\n      <RangePicker\r\n        showTime={showTime}\r\n        use12Hours\r\n        format={format}\r\n        minuteStep={30}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n        value={value}\r\n      />\r\n    </FieldContainer>\r\n  )\r\n}\r\n\r\nexport default CustomTimePicker\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Panel\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Panel\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Commons\\Select\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Controllers\\useSchedulerFilter.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\dateFormat.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\Controllers\\FilteringPanelMethods.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Constants\\schedules.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Styles\\toggleableContainer.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\ComponentToPrint.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\filteringPanelDocs.js",["1234","1235"],"import React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { CODE, DESCRIPTION, QUANTITY } from \"Restructured/Constants/products\"\r\nimport { DATE_END, DATE_START } from \"Restructured/Constants/schedules\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport FilteringPanelMethods from \"../../FilteringPanel/Controllers/FilteringPanelMethods\"\r\nimport PrintMethods from \"../Controllers/PrintMethods\"\r\n\r\nfunction FilteringPanelDocs(props) {\r\n  const [documentPrintInfo, setDocumentPrintInfo] = useState({})\r\n  const [products, setProducts] = useState([])\r\n  const [productLabels, setProductLabels] = useState({})\r\n  const [summary, setSummary] = useState([])\r\n  const [printDetailsPerSched, setPrintDetailsPerSched] = useState([])\r\n  useEffect(() => {\r\n    setDocumentPrintInfo(props.documentPrintInfo)\r\n    setProducts(products)\r\n    setProductLabels(productLabels)\r\n    handlePrintDetailsPerSched(props.documentPrintInfo, props.branch)\r\n  }, [props.documentPrintInfo, props.branch])\r\n\r\n  const handlePrintDetailsPerSched = (printInfo, branch) => {\r\n    const _dataFetched = [...printInfo.dataFetched]\r\n    const args = {\r\n      branch,\r\n      dataFetched: _dataFetched,\r\n    }\r\n    console.log(\"console\", _dataFetched)\r\n    const _orders = FilteringPanelMethods.produceOrders({ ...args })\r\n    const _detailsPerSched = PrintMethods.producePrintDetailsPerSchedule({\r\n      branch,\r\n      orders: _orders,\r\n      products: printInfo?.products,\r\n      productLabels: printInfo?.productLabels,\r\n    })\r\n    const _summaryPerProduct = PrintMethods.producePrintSummaryPerProduct(\r\n      _detailsPerSched\r\n    )\r\n    console.log(\"console\", _summaryPerProduct)\r\n    setSummary(_summaryPerProduct)\r\n    setPrintDetailsPerSched(_detailsPerSched)\r\n  }\r\n  return (\r\n    <Grid padding=\"3rem\">\r\n      <Grid>\r\n        <h3>VITOS BBQ</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <h3>ORDER LIST FORM</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <div>DETAILS PER PRODUCT</div>\r\n        <table>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Slot</th>\r\n            <th>Code</th>\r\n            <th>Product</th>\r\n            <th style={{ display: \"flex\", justifyContent: \"flex-end\" }}>Qty</th>\r\n          </tr>\r\n          {printDetailsPerSched.map((data) => {\r\n            return (\r\n              <tr>\r\n                <td>{data.date}</td>\r\n                <td>{`${data[DATE_START]} - ${data[DATE_END]}`}</td>\r\n                <td>{data[CODE]}</td>\r\n                <td>{data[DESCRIPTION]}</td>\r\n                <td style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                  {data[QUANTITY]}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </table>\r\n      </Grid>\r\n      <br />\r\n      <Grid>\r\n        <div>SUMMARY PER PRODUCT</div>\r\n        <table>\r\n          <tr>\r\n            <th>Code</th>\r\n            <th>Product</th>\r\n            <th style={{ display: \"flex\", justifyContent: \"flex-end\" }}>Qty</th>\r\n          </tr>\r\n          {summary.map((data) => {\r\n            return (\r\n              <tr>\r\n                <td>{data[CODE]}</td>\r\n                <td>{data[DESCRIPTION]}</td>\r\n                <td style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                  {data[QUANTITY]}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </table>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FilteringPanelDocs\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\FilteringPanel\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Controllers\\PrintMethods.js",["1236"],"import sort from \"Restructured/Utilities/sorting\"\r\nimport { CODE, DESCRIPTION, QUANTITY } from \"Restructured/Constants/products\"\r\nimport { BRANCH, DATE_END, DATE_START } from \"Restructured/Constants/schedules\"\r\n\r\nexport default class PrintMethods {\r\n  //produce filtering panels array of data\r\n  static producePrintDetailsPerSchedule = ({\r\n    orders,\r\n    products,\r\n    productLabels,\r\n    branch,\r\n  }) => {\r\n    const _data = []\r\n\r\n    for (const obj of orders) {\r\n      if (obj[BRANCH] === branch) {\r\n        for (const key in obj) {\r\n          if (products.includes(key)) {\r\n            _data.push({\r\n              date: obj?.date,\r\n              [DATE_START]: obj[DATE_START],\r\n              [DATE_END]: obj[DATE_END],\r\n              [DESCRIPTION]: productLabels[key],\r\n              [CODE]: key,\r\n              [QUANTITY]: obj[key],\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return _data //sort(_data, CODE)\r\n  }\r\n\r\n  static producePrintSummaryPerProduct = (dataList) => {\r\n    const _newData = []\r\n    const conditions = (_obj, obj) => {\r\n      return _obj[CODE] === obj[CODE]\r\n    }\r\n\r\n    for (const obj of dataList) {\r\n      const _newDataExist = _newData.some((_obj) => conditions(_obj, obj))\r\n      if (!_newDataExist) {\r\n        _newData.push(obj)\r\n      } else {\r\n        const _data = _newData.find((_obj) => conditions(_obj, obj))\r\n        const _dataIndex = _newData.findIndex((_obj) => conditions(_obj, obj))\r\n        let _modifiedData = { ..._data }\r\n        _modifiedData[QUANTITY] = _data[QUANTITY] + obj[QUANTITY]\r\n        _newData.splice(_dataIndex, 1, _modifiedData)\r\n      }\r\n    }\r\n    return _newData\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Constants\\products.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\sorting.js",["1237"],"export default function (array, field) {\r\n  return array.sort((a, b) => {\r\n    if (a[field] < b[field]) {\r\n      return -1\r\n    }\r\n    if (a[field] > b[field]) {\r\n      return 1\r\n    }\r\n    return 0\r\n  })\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\index.js",["1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256"],"import { Button, Space, Table, Tag } from \"antd\"\r\nimport { Paper } from \"components/PaymentDetails/styles\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  REF_NO,\r\n} from \"components/PaymentDetails/types\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { RangePicker, Select } from \"Restructured/Components/Commons\"\r\nimport { CODE, QUANTITY } from \"Restructured/Constants/products\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  LABELS,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { Flex, Grid, Item } from \"Restructured/Styles\"\r\nimport Controllers from \"./Controllers\"\r\nimport useReports from \"./Controllers/useReports\"\r\nimport Services from \"./Services\"\r\n\r\nfunction Reports() {\r\n  const [\r\n    dropdowns,\r\n    reports,\r\n    sourceSummary,\r\n    branch,\r\n    setBranch,\r\n    dateFromTo,\r\n    setDateFromTo,\r\n    handleExport,\r\n  ] = useReports()\r\n\r\n  return (\r\n    <Grid alignItems=\"center\">\r\n      <Flex justifyContent=\"flex-end\">\r\n        <Item width=\"calc(100% - 750px)\">\r\n          <Button type=\"primary\" danger onClick={handleExport}>\r\n            Export as Excel\r\n          </Button>\r\n        </Item>\r\n        <Item>\r\n          <Select\r\n            label=\"Branch\"\r\n            dataSource={[...dropdowns]}\r\n            value={branch}\r\n            onChange={(value) => {\r\n              setBranch(value)\r\n            }}\r\n          />\r\n        </Item>\r\n        <Item>\r\n          <RangePicker\r\n            showTime={false}\r\n            format=\"MM/DD/YYYY\"\r\n            label=\"Date\"\r\n            value={dateFromTo}\r\n            onChange={(value) => {\r\n              setDateFromTo(value)\r\n            }}\r\n          />\r\n        </Item>\r\n        <Item width=\"100%\">\r\n          {reports.map((data) => {\r\n            const dataSource = data?.data\r\n            return (\r\n              <div key={data.header} style={{ padding: \"1rem\" }}>\r\n                <Paper>\r\n                  <h3>{data.header}</h3>\r\n                  <Table columns={data?.columns} dataSource={dataSource} />\r\n                </Paper>\r\n                <Flex justifyContent=\"flex-end\">\r\n                  <Item>\r\n                    <Table\r\n                      columns={sourceSummary[data?.header]?.columns}\r\n                      dataSource={sourceSummary[data?.header]?.data}\r\n                    />\r\n                  </Item>\r\n                </Flex>\r\n              </div>\r\n            )\r\n          })}\r\n        </Item>\r\n      </Flex>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\index.js",["1257","1258","1259","1260","1261","1262","1263"],"import {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  REF_NO,\r\n} from \"components/PaymentDetails/types\"\r\nimport {\r\n  DATE_END,\r\n  DATE_START,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport {\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n  SOURCE,\r\n  STATUS,\r\n} from \"Restructured/Constants/schedules\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n  formatTime,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport FilteringPanelMethods from \"../../FilteringPanel/Controllers/FilteringPanelMethods\"\r\nimport formatNumber from \"Restructured/Utilities/formatNumber\"\r\nimport Services from \"../Services\"\r\nimport dummy from \"../_dummy\"\r\nimport { CODE, QUANTITY } from \"Restructured/Constants/products\"\r\nimport calculateTotalAmountPaid from \"./calculateTotalAmountPaid\"\r\nimport calculateTotalCost from \"./calculateTotalCost\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\n\r\nexport default class Controllers {\r\n  static async produceScheduleReports(_reports, products) {\r\n    const { _products, _productGroupHeaderAndPrice, _productGroupHeader } =\r\n      ProductServices.produceProductList(products)\r\n\r\n    const tableData = {\r\n      DIRECT: [],\r\n    }\r\n    for (const _data of _reports) {\r\n      const _startTime = formatDateFromDatabase(_data[DATE_START])\r\n      const _endTime = formatDateFromDatabase(_data[DATE_END])\r\n      const _datePlaced = formatDateFromDatabase(_data[DATE_ORDER_PLACED])\r\n      const _datePayment =\r\n        typeof _data[DATE_PAYMENT] !== \"undefined\"\r\n          ? formatDateFromDatabase(_data[DATE_PAYMENT])\r\n          : \"\"\r\n      const productObj = FilteringPanelMethods.produceProductListWithData({\r\n        products: _products,\r\n        dataList: _data,\r\n      })\r\n\r\n      const amountPaid = parseInt(_data[AMOUNT_PAID])\r\n      // const amountPaid = calculateTotalAmountPaid(\r\n      //   _data[AMOUNT_PAID],\r\n      //   _data?.others\r\n      // )\r\n      const totalCost = calculateTotalCost(\r\n        productObj,\r\n        _productGroupHeaderAndPrice\r\n      )\r\n\r\n      const _productsLength = Object.keys(productObj).length\r\n      let _productCounts = 1\r\n      if (_data[SOURCE]) {\r\n        for (const key in productObj) {\r\n          const orderVia = _data[ORDER_VIA]\r\n          const orderViaPartner = _data[ORDER_VIA_PARTNER]\r\n          const _price =\r\n            typeof _data[`customPrice${key}`] === \"undefined\"\r\n              ? _productGroupHeaderAndPrice[key]?.price\r\n              : parseInt(_data[`customPrice${key}`])\r\n          if (orderVia) {\r\n            if (_productCounts === 1) {\r\n              tableData.DIRECT.push({\r\n                ..._data,\r\n                [CODE]: key,\r\n                [ORDER_NO]: _data[ORDER_NO],\r\n                [QUANTITY]: productObj[key],\r\n                [CUSTOMER]: _data[CUSTOMER],\r\n                [SOURCE]: _data[SOURCE] ? _data[SOURCE] : \"\",\r\n                [BRANCH]: _data[BRANCH],\r\n                [DATE_START]: formatTime(_startTime),\r\n                startDate: formatDateDash(_startTime),\r\n                [DATE_ORDER_PLACED]: formatDateDash(_datePlaced),\r\n                [REF_NO]: _data[REF_NO],\r\n                [ACCOUNT_NUMBER]: _data[ACCOUNT_NUMBER],\r\n                [MODE_PAYMENT]: _data[MODE_PAYMENT],\r\n                [DATE_PAYMENT]: _datePayment\r\n                  ? formatDateDash(_datePayment)\r\n                  : \"\",\r\n                [ORDER_VIA]: _data[ORDER_VIA],\r\n                [CONTACT_NUMBER]: _data[CONTACT_NUMBER],\r\n                status:\r\n                  _productsLength === 1\r\n                    ? amountPaid < totalCost\r\n                      ? _data[STATUS]\r\n                      : \"PAID\"\r\n                    : \"--\",\r\n                amount: (_price * productObj[key]).toFixed(2),\r\n                less: _productsLength === 1 ? _data?.others : {},\r\n                amountPaid:\r\n                  _productsLength === 1 ? amountPaid.toFixed(2) : \"--\",\r\n              })\r\n            } else {\r\n              if (_productCounts === _productsLength) {\r\n                tableData.DIRECT.push({\r\n                  ..._data,\r\n                  [CODE]: key,\r\n                  [ORDER_NO]: _data[ORDER_NO],\r\n                  [QUANTITY]: productObj[key],\r\n                  [CUSTOMER]: \"--\",\r\n                  [SOURCE]: \"--\",\r\n                  [BRANCH]: \"--\",\r\n                  [DATE_START]: \"--\",\r\n                  startDate: formatDateDash(_startTime),\r\n                  [DATE_ORDER_PLACED]: \"--\",\r\n                  [REF_NO]: \"--\",\r\n                  [ACCOUNT_NUMBER]: \"--\",\r\n                  [MODE_PAYMENT]: \"--\",\r\n                  [DATE_PAYMENT]: \"--\",\r\n                  [ORDER_VIA]: \"--\",\r\n                  [CONTACT_NUMBER]: \"--\",\r\n                  status: amountPaid < totalCost ? _data[STATUS] : \"PAID\",\r\n                  amount: (_price * productObj[key]).toFixed(2),\r\n                  amountPaid: amountPaid.toFixed(2),\r\n                  less: _data?.others,\r\n                })\r\n              } else {\r\n                tableData.DIRECT.push({\r\n                  ..._data,\r\n                  [CODE]: key,\r\n                  [ORDER_NO]: _data[ORDER_NO],\r\n                  [QUANTITY]: productObj[key],\r\n                  [CUSTOMER]: \"--\",\r\n                  [SOURCE]: \"--\",\r\n                  [BRANCH]: \"--\",\r\n                  [DATE_START]: \"--\",\r\n                  startDate: formatDateDash(_startTime),\r\n                  [DATE_ORDER_PLACED]: \"--\",\r\n                  [REF_NO]: \"--\",\r\n                  [ACCOUNT_NUMBER]: \"--\",\r\n                  [MODE_PAYMENT]: \"--\",\r\n                  [DATE_PAYMENT]: \"--\",\r\n                  [ORDER_VIA]: \"--\",\r\n                  [CONTACT_NUMBER]: \"--\",\r\n                  status: \"--\",\r\n                  amount: (_price * productObj[key]).toFixed(2),\r\n                  amountPaid: \"--\",\r\n                  less: {},\r\n                })\r\n              }\r\n            }\r\n          } else {\r\n            console.log(\"PARTNER\", _productsLength)\r\n            if (orderViaPartner) {\r\n              const viaType = `PARTNER MERCHANT ${orderViaPartner}`\r\n              if (_productCounts === 1) {\r\n                if (typeof tableData[viaType] === \"undefined\") {\r\n                  tableData[viaType] = []\r\n                }\r\n                tableData[viaType].push({\r\n                  ..._data,\r\n                  [CODE]: key,\r\n                  [ORDER_NO]: _data[ORDER_NO],\r\n                  [QUANTITY]: productObj[key],\r\n                  [CUSTOMER]: _data[CUSTOMER],\r\n                  [SOURCE]: _data[SOURCE] ? _data[SOURCE] : \"\",\r\n                  [BRANCH]: _data[BRANCH],\r\n                  [DATE_START]: formatTime(_startTime),\r\n                  startDate: formatDateDash(_startTime),\r\n                  [DATE_ORDER_PLACED]: formatDateDash(_datePlaced),\r\n                  [REF_NO]: _data[REF_NO],\r\n                  [ACCOUNT_NUMBER]: _data[ACCOUNT_NUMBER],\r\n                  [MODE_PAYMENT]: _data[MODE_PAYMENT],\r\n                  [DATE_PAYMENT]: _datePayment\r\n                    ? formatDateDash(_datePayment)\r\n                    : \"\",\r\n                  [ORDER_VIA]: _data[ORDER_VIA],\r\n                  [CONTACT_NUMBER]: _data[CONTACT_NUMBER],\r\n                  status:\r\n                    _productsLength === 1\r\n                      ? amountPaid < totalCost\r\n                        ? _data[STATUS]\r\n                        : \"PAID\"\r\n                      : \"--\",\r\n                  amount: (_price * productObj[key]).toFixed(2),\r\n                  less: _productsLength === 1 ? _data?.others : {},\r\n                  amountPaid:\r\n                    _productsLength === 1 ? amountPaid.toFixed(2) : \"--\",\r\n                })\r\n              } else {\r\n                if (_productCounts === _productsLength) {\r\n                  tableData[viaType].push({\r\n                    ..._data,\r\n                    [CODE]: key,\r\n                    [ORDER_NO]: _data[ORDER_NO],\r\n                    [QUANTITY]: productObj[key],\r\n                    [CUSTOMER]: \"--\",\r\n                    [SOURCE]: \"--\",\r\n                    [BRANCH]: \"--\",\r\n                    [DATE_START]: \"--\",\r\n                    startDate: formatDateDash(_startTime),\r\n                    [DATE_ORDER_PLACED]: \"--\",\r\n                    [REF_NO]: \"--\",\r\n                    [ACCOUNT_NUMBER]: \"--\",\r\n                    [MODE_PAYMENT]: \"--\",\r\n                    [DATE_PAYMENT]: \"--\",\r\n                    [ORDER_VIA]: \"--\",\r\n                    [CONTACT_NUMBER]: \"--\",\r\n                    status: amountPaid < totalCost ? _data[STATUS] : \"PAID\",\r\n                    amount: (_price * productObj[key]).toFixed(2),\r\n                    amountPaid: amountPaid.toFixed(2),\r\n                    less: _data?.others,\r\n                  })\r\n                } else {\r\n                  tableData[viaType].push({\r\n                    ..._data,\r\n                    [CODE]: key,\r\n                    [ORDER_NO]: _data[ORDER_NO],\r\n                    [QUANTITY]: productObj[key],\r\n                    [CUSTOMER]: \"--\",\r\n                    [SOURCE]: \"--\",\r\n                    [BRANCH]: \"--\",\r\n                    [DATE_START]: \"--\",\r\n                    startDate: formatDateDash(_startTime),\r\n                    [DATE_ORDER_PLACED]: \"--\",\r\n                    [REF_NO]: \"--\",\r\n                    [ACCOUNT_NUMBER]: \"--\",\r\n                    [MODE_PAYMENT]: \"--\",\r\n                    [DATE_PAYMENT]: \"--\",\r\n                    [ORDER_VIA]: \"--\",\r\n                    [CONTACT_NUMBER]: \"--\",\r\n                    status: \"--\",\r\n                    amount: (_price * productObj[key]).toFixed(2),\r\n                    amountPaid: \"--\",\r\n                    less: {},\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (_productCounts !== _productsLength) {\r\n            _productCounts = _productCounts + 1\r\n          } else {\r\n            _productCounts = 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(\"tableData\", tableData)\r\n    return tableData\r\n  }\r\n\r\n  static async produceSourceSummary(_reports) {\r\n    const sourceSummary = {\r\n      DIRECT: [],\r\n    }\r\n    for (const _data of _reports) {\r\n      const orderVia = _data[ORDER_VIA]\r\n      const orderViaPartner = _data[ORDER_VIA_PARTNER]\r\n      const datePlaced = formatDateFromDatabase(_data[DATE_START])\r\n      const amountPaid = parseInt(_data[AMOUNT_PAID])\r\n      // const amountPaid = calculateTotalAmountPaid(\r\n      //   _data[AMOUNT_PAID],\r\n      //   _data?.others\r\n      // )\r\n\r\n      if (orderVia) {\r\n        if (_data[SOURCE]) {\r\n          // const _finalSum = parseInt(_totalSumOfDirect) + parseInt(amountPaid)\r\n          sourceSummary.DIRECT.push({\r\n            [SOURCE]: _data[SOURCE],\r\n            [AMOUNT_PAID]: amountPaid.toFixed(2),\r\n            [DATE_START]: formatDateDash(datePlaced),\r\n          })\r\n        }\r\n      } else {\r\n        if (orderViaPartner !== null || orderViaPartner !== \"\") {\r\n          const viaType = `PARTNER MERCHANT ${orderViaPartner}`\r\n          if (typeof sourceSummary[viaType] === \"undefined\") {\r\n            if (_data[SOURCE]) {\r\n              console.log(_data[SOURCE], amountPaid)\r\n              sourceSummary[viaType] = [\r\n                {\r\n                  [SOURCE]: _data[SOURCE],\r\n                  [AMOUNT_PAID]: amountPaid.toFixed(2),\r\n                  [DATE_START]: formatDateDash(datePlaced),\r\n                },\r\n              ]\r\n            }\r\n          } else {\r\n            console.log(_data[SOURCE], amountPaid)\r\n            if (_data[SOURCE]) {\r\n              sourceSummary[viaType].push({\r\n                [SOURCE]: _data[SOURCE],\r\n                [AMOUNT_PAID]: amountPaid.toFixed(2),\r\n                [DATE_START]: formatDateDash(datePlaced),\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return sourceSummary\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Services\\index.js",["1264"],"import { BRANCH, DATE_ORDER_PLACED } from \"Restructured/Constants/schedules\"\r\nimport db from \"services/firebase\"\r\nexport default class Services {\r\n  static async getSchedules(branch, dateFromTo) {\r\n    if (dateFromTo === null) return []\r\n    const startTime = new Date(dateFromTo[0]?._d.setHours(0, 0, 0, 0))\r\n    const endTime = new Date(dateFromTo[1]?._d.setHours(23, 59, 59, 59))\r\n    // const endTime = new Date(\r\n    //   dateFromTo[1]?._d.setDate(dateFromTo[1]?._d.getDate())\r\n    // )\r\n    return new Promise((resolve, reject) => {\r\n      db.collection(\"schedules\")\r\n        .where(\"StartTime\", \">=\", startTime)\r\n        .where(\"StartTime\", \"<=\", endTime)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            _dataFetched.push({ ..._data, _id: doc.id })\r\n          })\r\n          const filterByBranch = _dataFetched.filter(\r\n            (data) => data[BRANCH] === branch\r\n          )\r\n          resolve(filterByBranch)\r\n        })\r\n        .catch((error) => {\r\n          reject(error)\r\n          console.log(\"Error getting documents: \", error)\r\n        })\r\n    })\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\ProductServices.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\useReports.js",["1265","1266"],"import { Tag } from \"antd\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  REF_NO,\r\n} from \"components/PaymentDetails/types\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { CODE, QUANTITY } from \"Restructured/Constants/products\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport DropdownServices from \"Restructured/Services/DropdownServices\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport sumArray, {\r\n  sumArrayOfObjectsGrouping,\r\n} from \"Restructured/Utilities/sumArray\"\r\nimport ExportService from \"../../ExcelExporter/ExportService\"\r\nimport Services from \"../Services\"\r\nimport ExcelFormatter from \"./ExcelFormatter/ExcelFormatter\"\r\nimport Controllers from \"./index\"\r\n\r\nfunction useReports() {\r\n  const dateNow = new Date()\r\n  const dateFrom = new Date(dateNow.setDate(dateNow.getDate() - 10))\r\n  const from = moment(dateFrom, \"MM/DD/YYYY\")\r\n  const to = moment(new Date(), \"MM/DD/YYYY\")\r\n  const defaultRange = [from, to]\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const [branch, setBranch] = useState(\"\")\r\n  const [dateFromTo, setDateFromTo] = useState(defaultRange)\r\n  const [dropdowns, setDropdowns] = useState([])\r\n  const [reports, setReports] = useState([])\r\n  const [sourceSummary, setSourceSummary] = useState({})\r\n\r\n  useEffect(() => {\r\n    setDropdowns(userComponentSlice.branches)\r\n    if (userComponentSlice.branches.length > 0) {\r\n      setBranch(userComponentSlice.branches[0])\r\n    }\r\n  }, [userComponentSlice.branches])\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"DATE PLACED\",\r\n      dataIndex: DATE_ORDER_PLACED,\r\n      key: DATE_ORDER_PLACED,\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    // {\r\n    //   title: \"ORDER #\",\r\n    //   dataIndex: ORDER_NO,\r\n    //   key: ORDER_NO,\r\n    // },\r\n    {\r\n      title: \"NAME\",\r\n      dataIndex: CUSTOMER,\r\n      key: CUSTOMER,\r\n    },\r\n    {\r\n      title: \"CONTACT #\",\r\n      dataIndex: CONTACT_NUMBER,\r\n      key: CONTACT_NUMBER,\r\n    },\r\n    {\r\n      title: \"VIA\",\r\n      dataIndex: ORDER_VIA,\r\n      key: ORDER_VIA,\r\n    },\r\n    {\r\n      title: \"TIME\",\r\n      dataIndex: DATE_START,\r\n      key: DATE_START,\r\n    },\r\n    {\r\n      title: \"CODE\",\r\n      dataIndex: CODE,\r\n      key: CODE,\r\n    },\r\n    {\r\n      title: \"QUANTITY\",\r\n      dataIndex: QUANTITY,\r\n      key: QUANTITY,\r\n    },\r\n    {\r\n      title: \"DATE PAYMENT\",\r\n      dataIndex: DATE_PAYMENT,\r\n      key: DATE_PAYMENT,\r\n    },\r\n    {\r\n      title: \"MODE\",\r\n      dataIndex: MODE_PAYMENT,\r\n      key: MODE_PAYMENT,\r\n    },\r\n    {\r\n      title: \"SOURCE\",\r\n      dataIndex: SOURCE,\r\n      key: SOURCE,\r\n    },\r\n    {\r\n      title: \"REF #\",\r\n      dataIndex: REF_NO,\r\n      key: REF_NO,\r\n    },\r\n    {\r\n      title: \"ACCT #\",\r\n      dataIndex: ACCOUNT_NUMBER,\r\n      key: ACCOUNT_NUMBER,\r\n    },\r\n    {\r\n      title: \"TOTAL AMOUNT\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      align: \"right\",\r\n    },\r\n    {\r\n      title: \"AMOUNT PAID\",\r\n      dataIndex: \"amountPaid\",\r\n      key: \"amountPaid\",\r\n      align: \"right\",\r\n    },\r\n    {\r\n      title: \"OTHERS/DEDUCTION\",\r\n      dataIndex: \"less\",\r\n      key: \"less\",\r\n      align: \"right\",\r\n      render: (tags) => (\r\n        <>\r\n          {typeof tags !== \"undefined\" ? (\r\n            Object.keys(tags).map((tag) => {\r\n              return <Tag key={tag}>{`${tag}: ${tags[tag]}`}</Tag>\r\n            })\r\n          ) : (\r\n            <Tag></Tag>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"STATUS\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (value) => {\r\n        if (value === \"PAID\") {\r\n          return <Tag color=\"green\">{value}</Tag>\r\n        }\r\n        if (value === \"--\") {\r\n          return <Tag>{value}</Tag>\r\n        }\r\n        return <Tag color=\"red\">{value}</Tag>\r\n      },\r\n      align: \"right\",\r\n    },\r\n  ]\r\n\r\n  const getReports = async (reports) => {\r\n    if (!reports) reports = await Services.getSchedules(branch, dateFromTo)\r\n    const products = await ProductServices.getProducts()\r\n    const tableData = await Controllers.produceScheduleReports(\r\n      reports,\r\n      products\r\n    )\r\n    const _reports = []\r\n    const _excelReport = []\r\n    for (const key in tableData) {\r\n      if (key === \"DIRECT\") {\r\n        _reports.push({\r\n          header: key,\r\n          columns: [...tableColumns],\r\n          data: tableData[key],\r\n        })\r\n        _excelReport.push({\r\n          [key]: ExcelFormatter.groupDataByDateStart(tableData[key]),\r\n        })\r\n      } else {\r\n        _reports.push({\r\n          header: key,\r\n          columns: [...tableColumns.filter(({ title }) => title !== \"VIA\")],\r\n          data: tableData[key],\r\n        })\r\n        _excelReport.push({\r\n          [key]: ExcelFormatter.groupDataByDateStart(tableData[key]),\r\n        })\r\n      }\r\n    }\r\n    setReports(_reports)\r\n    return _excelReport\r\n  }\r\n\r\n  const getSourceSummary = async (reports) => {\r\n    if (!reports) reports = await Services.getSchedules(branch, dateFromTo)\r\n    const sourceSummary = await Controllers.produceSourceSummary(reports)\r\n    const _reports = {}\r\n    const returnedSourceSummary = {}\r\n    for (const key in sourceSummary) {\r\n      const _sourceSummary = [...sourceSummary[key]]\r\n      _sourceSummary.push({\r\n        [SOURCE]: \"Total\",\r\n        [AMOUNT_PAID]: sumArray(sourceSummary[key], AMOUNT_PAID).toFixed(2),\r\n      })\r\n\r\n      const groupedSourceSummary = sumArrayOfObjectsGrouping(\r\n        _sourceSummary,\r\n        SOURCE,\r\n        AMOUNT_PAID\r\n      )\r\n      _reports[key] = {\r\n        columns: [\r\n          {\r\n            title: \"From\",\r\n            dataIndex: SOURCE,\r\n            key: SOURCE,\r\n            align: \"right\",\r\n          },\r\n          {\r\n            title: \"Amount Paid\",\r\n            dataIndex: AMOUNT_PAID,\r\n            key: AMOUNT_PAID,\r\n            align: \"right\",\r\n          },\r\n        ],\r\n        data: groupedSourceSummary,\r\n      }\r\n      setSourceSummary(_reports)\r\n\r\n      // this is use in excel formatter\r\n      returnedSourceSummary[key] = {\r\n        columns: [\r\n          {\r\n            title: \"From\",\r\n            dataIndex: SOURCE,\r\n            key: SOURCE,\r\n            align: \"right\",\r\n          },\r\n          {\r\n            title: \"Amount Paid\",\r\n            dataIndex: AMOUNT_PAID,\r\n            key: AMOUNT_PAID,\r\n            align: \"right\",\r\n          },\r\n        ],\r\n        data: _sourceSummary,\r\n      }\r\n    }\r\n\r\n    return returnedSourceSummary\r\n  }\r\n\r\n  const handleExport = async () => {\r\n    const sourceDropdowns = await DropdownServices.getDropdowns(SOURCE)\r\n    const data = await Services.getSchedules(branch, dateFromTo)\r\n    if (data.length === 0) {\r\n      alert(\"No data to be exported\")\r\n      return\r\n    }\r\n    const sourceSummary = await getSourceSummary(data)\r\n    const excelReport = await getReports(data)\r\n    const transformedExcelReport = ExcelFormatter.transformGroupByDate(\r\n      excelReport,\r\n      data,\r\n      sourceSummary\r\n    )\r\n    const dataSummary = ExcelFormatter.dataSummary(data)\r\n    const orderViaSummary = ExcelFormatter.orderViaSummary(\r\n      data,\r\n      sourceDropdowns.list,\r\n      dateFromTo\r\n    )\r\n    ExportService.exportExcelReports(\r\n      {\r\n        ...transformedExcelReport,\r\n        ...dataSummary,\r\n        ...orderViaSummary,\r\n      },\r\n      [sourceDropdowns.list]\r\n    )\r\n  }\r\n\r\n  return [\r\n    dropdowns,\r\n    reports,\r\n    sourceSummary,\r\n    branch,\r\n    setBranch,\r\n    dateFromTo,\r\n    setDateFromTo,\r\n    handleExport,\r\n  ]\r\n}\r\n\r\nexport default useReports\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\DropdownServices.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\_dummy.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\calculateTotalAmountPaid.js",["1267"],"export default function (amountPaid, others) {\r\n  if (typeof amountPaid !== \"undefined\") {\r\n    const _amountPaid = parseInt(amountPaid)\r\n    let _others = 0\r\n    if (typeof others !== \"undefined\") {\r\n      for (const key in others) {\r\n        _others = _others + parseInt(others[key])\r\n      }\r\n    }\r\n    console.log(_amountPaid, _others)\r\n    // return _amountPaid + _others\r\n    return _amountPaid - _others\r\n  }\r\n  return 0\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\calculateTotalCost.js",["1268"],"export default function (prodObj, prodGroupHeaderAndPrice) {\r\n  let _totalCost = 0\r\n  for (const key in prodObj) {\r\n    const _price = prodGroupHeaderAndPrice[key]?.price\r\n    _totalCost = _price + _totalCost\r\n  }\r\n  return _totalCost\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\formatNumber.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\6.reports\\index.js",["1269","1270","1271","1272"],"import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport {\r\n  MASTER_DATA,\r\n  PAYMENT_TRANSACTION,\r\n  REPORTS,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { Products } from \"components/products\"\r\nimport { Reports } from \"Restructured/Components/Features\"\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([REPORTS, PAYMENT_TRANSACTION]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Reports />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\index.js",["1273"],"import react from \"react\"\r\nimport ExportService from \"./ExportService\"\r\nconst filePath = \"./excel-from-js.xlsx\"\r\nfunction ExcelExporter() {\r\n  const users = [\r\n    {\r\n      id: 0,\r\n      name: \"da\",\r\n      age: 23,\r\n      Sdf: \"d\",\r\n    },\r\n    {\r\n      id: 0,\r\n      name: \"da\",\r\n      age: 25,\r\n      Sdf: \"d\",\r\n    },\r\n  ]\r\n\r\n  const workSheetColumnNames = [\"ID\", \"Name\", \"Age\", \"Sdf\"]\r\n  const workSheetName = \"Users\"\r\n  const handleClick = () => {\r\n    ExportService.exportUsersToExcel(\r\n      users,\r\n      workSheetColumnNames,\r\n      workSheetName,\r\n      filePath\r\n    )\r\n  }\r\n\r\n  return <button onClick={handleClick}>Clck</button>\r\n}\r\n\r\nexport default ExcelExporter\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\exportService.js",["1274"],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\ExportService.js",["1275"],"import fs from \"fs\"\r\nimport XLSX from \"xlsx\"\r\nimport path from \"path\"\r\nexport default class ExportService {\r\n  static saveToWorkbookDates(workBook, data, name) {\r\n    const merge = [\r\n      { s: { r: 0, c: 0 }, e: { r: 0, c: 14 } },\r\n      { s: { r: 1, c: 0 }, e: { r: 1, c: 14 } },\r\n      { s: { r: 2, c: 0 }, e: { r: 2, c: 14 } },\r\n      { s: { r: 5, c: 0 }, e: { r: 5, c: 6 } },\r\n      { s: { r: 5, c: 7 }, e: { r: 5, c: 14 } },\r\n    ]\r\n    const workSheet = XLSX.utils.aoa_to_sheet(data)\r\n\r\n    if (!workSheet[\"!merges\"]) workSheet[\"!merges\"] = []\r\n    for (const mergeObj of merge) {\r\n      workSheet[\"!merges\"].push(mergeObj)\r\n    }\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, name)\r\n  }\r\n\r\n  static saveToWorkbookDSummary(workBook, data, name) {\r\n    const merge = [\r\n      { s: { r: 0, c: 0 }, e: { r: 0, c: 1 } },\r\n      { s: { r: 1, c: 0 }, e: { r: 1, c: 1 } },\r\n      { s: { r: 2, c: 0 }, e: { r: 2, c: 1 } },\r\n    ]\r\n    const workSheet = XLSX.utils.aoa_to_sheet(data)\r\n\r\n    if (!workSheet[\"!merges\"]) workSheet[\"!merges\"] = []\r\n    for (const mergeObj of merge) {\r\n      workSheet[\"!merges\"].push(mergeObj)\r\n    }\r\n\r\n    XLSX.utils.book_append_sheet(\r\n      workBook,\r\n      workSheet,\r\n      `DSUMMARY 1 - ${data.length - 8}`\r\n    )\r\n  }\r\n\r\n  static saveToWorkbookSource(workBook, data, name) {\r\n    const merge = [\r\n      { s: { r: 0, c: 0 }, e: { r: 0, c: 1 } },\r\n      { s: { r: 1, c: 0 }, e: { r: 1, c: 1 } },\r\n      { s: { r: 2, c: 0 }, e: { r: 2, c: 1 } },\r\n    ]\r\n    const workSheet = XLSX.utils.aoa_to_sheet(data)\r\n\r\n    if (!workSheet[\"!merges\"]) workSheet[\"!merges\"] = []\r\n    for (const mergeObj of merge) {\r\n      workSheet[\"!merges\"].push(mergeObj)\r\n    }\r\n\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, name)\r\n  }\r\n\r\n  static exportExcelReports(sheets, additionalParams = []) {\r\n    const workBook = XLSX.utils.book_new()\r\n    console.log(\"sheets\", sheets)\r\n    for (const key in sheets) {\r\n      switch (key) {\r\n        case \"dSummary\":\r\n          this.saveToWorkbookDSummary(workBook, [...sheets[key]], key)\r\n          break\r\n        default:\r\n          console.log(\"additional\", additionalParams)\r\n          if (additionalParams[0].includes(key)) {\r\n            this.saveToWorkbookSource(workBook, [...sheets[key]], key)\r\n          } else {\r\n            this.saveToWorkbookDates(workBook, [...sheets[key]], key)\r\n          }\r\n      }\r\n    }\r\n\r\n    XLSX.writeFile(workBook, path.resolve(\"./excel-report.xlsx\"))\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\sumArray.js",["1276","1277","1278"],"import thousandsSeparators from \"./formatNumber\"\r\n\r\nexport default function (array, field) {\r\n  // Getting sum of numbers\r\n  if (array.length > 0) {\r\n    if (field) {\r\n      const sum = array.reduce(function (a = 0, b) {\r\n        let fieldNumber = typeof b[field] !== \"undefined\" ? b[field] : 0\r\n        return Number(a) + Number(fieldNumber)\r\n      }, 0)\r\n      return sum\r\n    }\r\n    const sum = array.reduce(function (a, b) {\r\n      return Number(a) + Number(b)\r\n    }, 0)\r\n    return sum\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const sumArrayDatas = (array, index) => {\r\n  if (array.length > 0) {\r\n    const sum = array.reduce(function (a = 0, b) {\r\n      if (typeof b[index] === \"number\") {\r\n        return parseInt(a) + parseInt(b[index])\r\n      }\r\n      if (b[index]) {\r\n        if (!isNaN(b[index])) {\r\n          return parseInt(a) + parseInt(b[index])\r\n        } else {\r\n          return parseInt(a) + 0\r\n        }\r\n      } else {\r\n        return parseInt(a) + 0\r\n      }\r\n    }, 0)\r\n    return sum\r\n  }\r\n  return 0\r\n}\r\n\r\n// to group the same name of value in an object\r\nexport const sumArrayOfObjectsGrouping = (data, field1, field2) => {\r\n  const newDataByGroup = []\r\n  data.forEach((obj) => {\r\n    console.log(obj[field1], obj[field2])\r\n    let newDataByGroupIndex = 0\r\n\r\n    // check first if data already exist\r\n    const dataExist = newDataByGroup.find((d, index2) => {\r\n      if (typeof d[field1] !== \"undefined\") {\r\n        if (d[field1] === obj[field1]) {\r\n          newDataByGroupIndex = index2\r\n        }\r\n        return d[field1] === obj[field1]\r\n      }\r\n    })\r\n\r\n    if (dataExist) {\r\n      const number1 = parseInt(dataExist[field2])\r\n      const number2 = parseInt(obj[field2])\r\n      console.log(\"number\", dataExist[field2])\r\n      console.log(number1, number2)\r\n      const sumNumber = number1 + number2\r\n      const renewedData = {\r\n        ...obj,\r\n        [field2]: sumNumber.toFixed(2),\r\n      }\r\n      newDataByGroup.splice(newDataByGroupIndex, 1, renewedData)\r\n    } else {\r\n      const number = parseInt(obj[field2])\r\n      newDataByGroup.push({\r\n        ...obj,\r\n        [field2]: number.toFixed(2),\r\n      })\r\n    }\r\n  })\r\n  console.log(\"newDataByGroup\", newDataByGroup)\r\n  return newDataByGroup\r\n}\r\n\r\nexport const sumNumbers = (array) => {\r\n  return array.reduce((a, b) => Number(a) + Number(b), 0)\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\ExcelFormatter\\ExcelFormatter.js",["1279","1280","1281","1282","1283","1284","1285","1286"],"import {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  REF_NO,\r\n  SOURCE,\r\n} from \"components/PaymentDetails/types\"\r\nimport { CODE, QUANTITY } from \"Restructured/Constants/products\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { replace } from \"Restructured/Utilities/arrayFuntions\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n  formatDateLong,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport sumArray, {\r\n  sumArrayDatas,\r\n  sumArrayOfObjectsGrouping,\r\n} from \"Restructured/Utilities/sumArray\"\r\nimport calculateTotalAmountPaid from \"../calculateTotalAmountPaid\"\r\nimport {\r\n  tableGroups,\r\n  tableHeadersTotal,\r\n  tableHeaders,\r\n  sourceHeaders,\r\n  sourceData,\r\n  lessData,\r\n} from \"./ExcelConstantDataRow\"\r\n\r\nexport default class ExcelFormatter {\r\n  static producedObjectToArray(obj) {\r\n    let less = \"\"\r\n    for (const key in obj?.less) {\r\n      less = parseInt(obj?.less[key])\r\n    }\r\n    return [\r\n      obj[DATE_ORDER_PLACED] || \"\",\r\n      obj[CUSTOMER] || \"\",\r\n      obj[CONTACT_NUMBER] || \"\",\r\n      obj[ORDER_VIA] || \"\",\r\n      obj[DATE_START] || \"\",\r\n      obj[CODE] || \"\",\r\n      obj[QUANTITY] || \"\",\r\n      obj[DATE_PAYMENT] || \"\",\r\n      obj[MODE_PAYMENT] || \"\",\r\n      obj[SOURCE] || \"\",\r\n      obj[REF_NO] || \"\",\r\n      obj[ACCOUNT_NUMBER] || \"\",\r\n      obj.amount || \"\",\r\n      obj[AMOUNT_PAID] || \"\",\r\n      less ? parseInt(less).toFixed(2) : \"\",\r\n      obj.status || \"\",\r\n    ]\r\n  }\r\n\r\n  static groupDataByDateStart(data) {\r\n    const _groupData = {}\r\n    for (const obj of data) {\r\n      const dateValue = obj.startDate\r\n      if (typeof _groupData[dateValue] !== \"undefined\") {\r\n        _groupData[dateValue].push(this.producedObjectToArray(obj))\r\n      } else {\r\n        _groupData[dateValue] = [\r\n          tableGroups,\r\n          tableHeaders,\r\n          this.producedObjectToArray(obj),\r\n        ]\r\n      }\r\n    }\r\n    const _groupDataWithTotals = {}\r\n    for (const date in _groupData) {\r\n      const orderViaDatePropCopy = [..._groupData[date]]\r\n      let lessValue = 0\r\n      const dataObj = data.find((d) => {\r\n        if (typeof d.less !== \"undefined\") {\r\n          return d.startDate === date && Object.keys(d.less).length > 0\r\n        }\r\n      })\r\n      // if (dataObj?.less) {\r\n      //   for (const key in dataObj?.less) {\r\n      //     lessValue = parseInt(dataObj?.less[key])\r\n      //   }\r\n      // }\r\n      // this boundary is for totals of each group data of order via\r\n      const _totalQty = sumArrayDatas(orderViaDatePropCopy, 6)\r\n      const _totalAmount = sumArrayDatas(orderViaDatePropCopy, 12)\r\n      const _totalAmountPaid = sumArrayDatas(orderViaDatePropCopy, 13)\r\n      const _totalDiscount = sumArrayDatas(orderViaDatePropCopy, 14)\r\n\r\n      console.log(\"_totalQty\", _totalQty)\r\n      console.log(\"_totalAmount\", _totalAmount)\r\n      console.log(\"_totalAmountPaid\", _totalAmountPaid)\r\n      // this data will be the combined rows of grouped order via and totals\r\n      // each loop will update the totals row of each \"grouped order via\"\r\n      const arrayWithTotals = replace(\r\n        orderViaDatePropCopy,\r\n        orderViaDatePropCopy.length,\r\n        tableHeadersTotal(\r\n          _totalQty,\r\n          _totalAmount.toFixed(2),\r\n          _totalAmountPaid.toFixed(2),\r\n          _totalDiscount.toFixed(2)\r\n        )\r\n      )\r\n      _groupDataWithTotals[date] = [...arrayWithTotals]\r\n\r\n      // this is for less row setup\r\n      // const specificData = data.filter(\r\n      //   (d) => d.startDate === date && Object.keys(d.less).length > 0\r\n      // )\r\n      // console.log(`specific ${date}`, specificData)\r\n      // for (const obj of specificData) {\r\n      //   const less = obj?.less\r\n      //   if (typeof less !== \"undefined\") {\r\n      //     for (const key of Object.keys(less)) {\r\n      //       console.log(key, less[key])\r\n      //       _groupDataWithTotals[date].push(\r\n      //         lessData(key, less[key], obj[ORDER_NO])\r\n      //       )\r\n      //     }\r\n      //   }\r\n      // }\r\n      // console.log(\"_groupDataWithtotals\", _groupDataWithTotals)\r\n    }\r\n    return _groupDataWithTotals\r\n  }\r\n\r\n  static transformGroupByDate(excelReport, data, sourceSummary) {\r\n    const dates = []\r\n    for (const obj of data) {\r\n      const startTime = formatDateFromDatabase(obj[DATE_START])\r\n      dates.push(formatDateDash(startTime))\r\n    }\r\n\r\n    const _groupData = {}\r\n    for (const obj of dates) {\r\n      if (typeof _groupData[obj] === \"undefined\") {\r\n        _groupData[obj] = []\r\n      }\r\n    }\r\n\r\n    // const sourceSummaryInfo = this.sourceSummaryFilteredByDate(\r\n    //   data,\r\n    //   sourceSummary\r\n    // )\r\n    // console.log(\"sourceSummaryInfo\", sourceSummaryInfo)\r\n    let count = 0\r\n    for (const dateValue in _groupData) {\r\n      for (const orderVia of excelReport) {\r\n        if (orderVia) {\r\n          // check the object orderVia 1 by 1 and filtered or group it by date\r\n          for (const key in orderVia) {\r\n            if (typeof orderVia[key][dateValue] !== \"undefined\") {\r\n              if (_groupData[dateValue].length === 0) {\r\n                count = 0\r\n              }\r\n              if (count === 0) {\r\n                _groupData[dateValue].push([\"VITO'S BBQ RONAC\"])\r\n                _groupData[dateValue].push([\"DAILY ORDER MASTERLIST\"])\r\n                _groupData[dateValue].push([formatDateLong(dateValue)])\r\n                _groupData[dateValue].push([])\r\n              }\r\n              if (count > 0) {\r\n                _groupData[dateValue].push([])\r\n                _groupData[dateValue].push([])\r\n              }\r\n              _groupData[dateValue].push([key])\r\n\r\n              for (const obj3 of orderVia[key][dateValue]) {\r\n                _groupData[dateValue].push(obj3)\r\n              }\r\n\r\n              const _sourceSummaryInfo = this.sourceSummaryFilteredByDate(\r\n                data,\r\n                dateValue,\r\n                key\r\n              )\r\n              _groupData[dateValue].push([])\r\n              _groupData[dateValue].push(sourceHeaders)\r\n              if (_sourceSummaryInfo.length > 0) {\r\n                for (const sourceSummaryArrays of _sourceSummaryInfo)\r\n                  _groupData[dateValue].push(sourceSummaryArrays)\r\n              }\r\n              // source summary portion\r\n              // if (typeof sourceSummaryInfo[dateValue] !== \"undefined\") {\r\n              //   _groupData[dateValue].push([])\r\n              //   _groupData[dateValue].push(sourceHeaders)\r\n              //   for (const summaryArray of sourceSummaryInfo[dateValue]) {\r\n              //     _groupData[dateValue].push(summaryArray)\r\n              //   }\r\n              // }\r\n\r\n              count = count + 1\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return _groupData\r\n  }\r\n\r\n  static sourceSummaryFilteredByDate(data, dateValue, key) {\r\n    const filteredDataByDate = data.filter((obj) => {\r\n      const dateStart = formatDateFromDatabase(obj[DATE_START])\r\n      const formatDateStart = formatDateDash(dateStart)\r\n      return dateValue === formatDateStart && obj[SOURCE]\r\n    })\r\n    const filteredDataByOrderVia = filteredDataByDate.filter((obj) => {\r\n      return obj[ORDER_VIA]\r\n    })\r\n\r\n    const filteredDataByOrderViaPartner = filteredDataByDate.filter((obj) => {\r\n      return key.includes(obj[ORDER_VIA_PARTNER])\r\n    })\r\n\r\n    const responseData = []\r\n    const newData = []\r\n    if (key === \"DIRECT\") {\r\n      // produce simplified object with only the property needed is visible\r\n      for (const obj of filteredDataByOrderVia) {\r\n        // to get the only value of a discount and set it in the other variable\r\n        let others = 0\r\n        let count = 1\r\n        for (const key in obj[\"others\"]) {\r\n          others = obj[\"others\"][key]\r\n          count = count + 1\r\n        }\r\n        if (typeof obj[AMOUNT_PAID] !== \"undefined\") {\r\n          newData.push({\r\n            [SOURCE]: obj[SOURCE],\r\n            [AMOUNT_PAID]: Number(obj[AMOUNT_PAID]),\r\n            // [AMOUNT_PAID]: Number(obj[AMOUNT_PAID]) - Number(others),\r\n          })\r\n        }\r\n      }\r\n      const combinedTotals = sumArrayOfObjectsGrouping(\r\n        newData,\r\n        SOURCE,\r\n        AMOUNT_PAID\r\n      )\r\n      for (const obj of combinedTotals) {\r\n        responseData.push(sourceData(obj[SOURCE], obj[AMOUNT_PAID]))\r\n      }\r\n      responseData.push(\r\n        sourceData(\"Total\", sumArray(newData, AMOUNT_PAID).toFixed(2))\r\n      )\r\n      return responseData\r\n    }\r\n\r\n    // produce simplified object with only the property needed is visible\r\n    for (const obj of filteredDataByOrderViaPartner) {\r\n      // to get the only value of a discount and set it in the other variable\r\n      let others = 0\r\n      let count = 1\r\n      for (const key in obj[\"others\"]) {\r\n        others = obj[\"others\"][key]\r\n        count = count + 1\r\n      }\r\n      if (typeof obj[AMOUNT_PAID] !== \"undefined\") {\r\n        newData.push({\r\n          [SOURCE]: obj[SOURCE],\r\n          [AMOUNT_PAID]: Number(obj[AMOUNT_PAID]),\r\n          // [AMOUNT_PAID]: Number(obj[AMOUNT_PAID]) - Number(others),\r\n        })\r\n      }\r\n    }\r\n    const combinedTotals = sumArrayOfObjectsGrouping(\r\n      newData,\r\n      SOURCE,\r\n      AMOUNT_PAID\r\n    )\r\n    for (const obj of combinedTotals) {\r\n      responseData.push(sourceData(obj[SOURCE], obj[AMOUNT_PAID]))\r\n    }\r\n    responseData.push(\r\n      sourceData(\"Total\", sumArray(newData, AMOUNT_PAID).toFixed(2))\r\n    )\r\n    return responseData\r\n  }\r\n  // static sourceSummaryFilteredByDate(data, sourceSummary) {\r\n  //   console.log(\"datadaw\", data)\r\n  //   console.log(\"sourceSuumarry\", sourceSummary)\r\n  //   const dates = []\r\n  //   for (const obj of data) {\r\n  //     const startTime = formatDateFromDatabase(obj[DATE_START])\r\n  //     dates.push(formatDateDash(startTime))\r\n  //   }\r\n\r\n  //   const _groupData = {}\r\n  //   for (const obj of dates) {\r\n  //     if (typeof _groupData[obj] === \"undefined\") {\r\n  //       _groupData[obj] = []\r\n  //     }\r\n  //   }\r\n\r\n  //   // this is for source summary\r\n  //   for (const orderVia in sourceSummary) {\r\n  //     const summaryInfo = [...sourceSummary[orderVia].data]\r\n  //     if (summaryInfo) {\r\n  //       for (const dateValue in _groupData) {\r\n  //         const findSummaryByDate = summaryInfo.filter(\r\n  //           (data) => data[DATE_START] === dateValue\r\n  //         )\r\n\r\n  //         const amount_total = sumArray(findSummaryByDate, AMOUNT_PAID)\r\n  //         for (const obj of findSummaryByDate) {\r\n  //           _groupData[dateValue].push([\r\n  //             ...sourceData(obj[SOURCE], obj[AMOUNT_PAID]),\r\n  //           ])\r\n  //         }\r\n  //         _groupData[dateValue].push([\r\n  //           ...sourceData(\"Total\", amount_total.toFixed(2) || \"0.00\"),\r\n  //         ])\r\n  //         _groupData[dateValue].push([])\r\n  //         // _groupData[dateValue].push([\"Note: Order number details ongoing\"])\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return _groupData\r\n  // }\r\n\r\n  static dataSummary(data) {\r\n    const dataByDate = {}\r\n    // produce group by date in the variable dataByDate\r\n    for (const obj of data) {\r\n      const startTime = formatDateFromDatabase(obj[DATE_START])\r\n      const dateFormatted = formatDateDash(startTime)\r\n      let totalAmountPaid = 0\r\n\r\n      if (typeof dataByDate[dateFormatted] === \"undefined\") {\r\n        if (typeof obj[AMOUNT_PAID] === \"undefined\") {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(0, obj?.others)\r\n          // }\r\n          dataByDate[dateFormatted] = [[dateFormatted, totalAmountPaid]]\r\n        } else {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(\r\n          //     parseInt(obj[AMOUNT_PAID]),\r\n          //     obj?.others\r\n          //   )\r\n          // }\r\n          totalAmountPaid =\r\n            typeof obj[AMOUNT_PAID] === \"undefined\" ||\r\n            typeof obj[SOURCE] === \"undefined\" ||\r\n            obj[SOURCE] === \"\"\r\n              ? 0\r\n              : Number(obj[AMOUNT_PAID])\r\n          dataByDate[dateFormatted] = [[dateFormatted, totalAmountPaid]]\r\n        }\r\n      } else {\r\n        if (typeof obj[AMOUNT_PAID] === \"undefined\") {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(0, obj?.others)\r\n          // }\r\n          totalAmountPaid =\r\n            typeof obj[AMOUNT_PAID] === \"undefined\" ||\r\n            typeof obj[SOURCE] === \"undefined\" ||\r\n            obj[SOURCE] === \"\"\r\n              ? 0\r\n              : Number(obj[AMOUNT_PAID])\r\n          dataByDate[dateFormatted].push([dateFormatted, totalAmountPaid])\r\n        } else {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(\r\n          //     parseInt(obj[AMOUNT_PAID]),\r\n          //     obj?.others\r\n          //   )\r\n          // }\r\n          totalAmountPaid =\r\n            typeof obj[AMOUNT_PAID] === \"undefined\" ||\r\n            typeof obj[SOURCE] === \"undefined\" ||\r\n            obj[SOURCE] === \"\"\r\n              ? 0\r\n              : Number(obj[AMOUNT_PAID])\r\n          dataByDate[dateFormatted].push([dateFormatted, totalAmountPaid])\r\n        }\r\n      }\r\n    }\r\n\r\n    const dateFrom = Object.keys(dataByDate)[0]\r\n    const dateTo = Object.keys(dataByDate)[Object.keys(dataByDate).length - 1]\r\n    const excelFormatDataByDateWithTotal = {\r\n      dSummary: [\r\n        [\"VITO'S BBQ RONAC\"],\r\n        [\"DAILY ORDER MASTERLIST\"],\r\n        [\r\n          `PERIOD COVERED: ${formatDateLong(dateFrom)} - ${formatDateLong(\r\n            dateTo\r\n          )}`,\r\n        ],\r\n        [],\r\n        [\"DATE SERVED\", \"AMOUNT PAID\"],\r\n      ],\r\n      temporaryData: [],\r\n    }\r\n    for (const key in dataByDate) {\r\n      console.log(\"dateWithTotal\", dataByDate[key])\r\n      const dataWithTotal = sumArrayDatas(dataByDate[key], 1)\r\n      excelFormatDataByDateWithTotal.dSummary.push([\r\n        key,\r\n        dataWithTotal.toFixed(2),\r\n      ])\r\n      excelFormatDataByDateWithTotal.temporaryData.push([\r\n        key,\r\n        dataWithTotal.toFixed(2),\r\n      ])\r\n    }\r\n\r\n    const dataWithSubTotal = sumArrayDatas(\r\n      excelFormatDataByDateWithTotal.temporaryData,\r\n      1\r\n    )\r\n\r\n    excelFormatDataByDateWithTotal.dSummary.push([\r\n      \"Total\",\r\n      dataWithSubTotal.toFixed(2),\r\n    ])\r\n\r\n    excelFormatDataByDateWithTotal.dSummary.push([])\r\n    delete excelFormatDataByDateWithTotal.temporaryData\r\n    return excelFormatDataByDateWithTotal\r\n  }\r\n\r\n  static orderViaSummary(data, dropdowns, dateFromTo) {\r\n    const dateFrom = formatDateDash(dateFromTo[0])\r\n    const dateTo = formatDateDash(dateFromTo[1])\r\n    const dataByOrderSummary = {}\r\n    const temporary = {}\r\n    for (const value of dropdowns) {\r\n      dataByOrderSummary[value] = [\r\n        [\"VITO'S BBQ RONAC\"],\r\n        [value],\r\n        [`PERIOD COVERED: ${dateFrom} => ${dateTo}`],\r\n        [],\r\n        [\"SUMMARY OF COLLECTIBLES\"],\r\n        [\"DATE SERVED\", \"AMOUNT PAID\"],\r\n      ]\r\n      temporary[value] = []\r\n    }\r\n    // produce group by date in the variable dataByDate\r\n    for (const obj of data) {\r\n      const startTime = formatDateFromDatabase(obj[DATE_START])\r\n      const dateFormatted = formatDateDash(startTime)\r\n\r\n      if (typeof obj[SOURCE] !== \"undefined\" && obj[SOURCE]) {\r\n        let totalAmountPaid = 0\r\n        if (typeof obj[AMOUNT_PAID] === \"undefined\") {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(0, obj?.others)\r\n          // }\r\n          totalAmountPaid = Number(obj[AMOUNT_PAID])\r\n          temporary[obj[SOURCE]].push([dateFormatted, totalAmountPaid])\r\n          dataByOrderSummary[obj[SOURCE]].push([\r\n            dateFormatted,\r\n            totalAmountPaid.toFixed(2),\r\n          ])\r\n        } else {\r\n          // if (obj?.others) {\r\n          //   totalAmountPaid = calculateTotalAmountPaid(\r\n          //     parseInt(obj[AMOUNT_PAID]),\r\n          //     obj?.others\r\n          //   )\r\n          //\r\n          totalAmountPaid = Number(obj[AMOUNT_PAID])\r\n          temporary[obj[SOURCE]].push([dateFormatted, totalAmountPaid])\r\n          dataByOrderSummary[obj[SOURCE]].push([\r\n            dateFormatted,\r\n            totalAmountPaid.toFixed(2),\r\n          ])\r\n        }\r\n        // dataByOrderSummary[obj[SOURCE]].splice(\r\n        //   dataByOrderSummary[obj[SOURCE]].length,\r\n        //   1,\r\n        //   [\"Total\", sumArrayDatas(temporary[obj[SOURCE]], 1).toFixed(2)]\r\n        // )\r\n      }\r\n    }\r\n\r\n    for (const key in temporary) {\r\n      if (temporary[key].length > 0) {\r\n        const sumArray = sumArrayDatas(temporary[key], 1).toFixed(2)\r\n        dataByOrderSummary[key].push([\"Total\", sumArray])\r\n      }\r\n    }\r\n    console.log(\"temporaryValue\", temporary)\r\n    console.log(\"dataOrderViaSummary\", dataByOrderSummary)\r\n    return dataByOrderSummary\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\arrayFuntions.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Reports\\Controllers\\ExcelFormatter\\ExcelConstantDataRow.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\7.directAndThirdParty\\index.js",["1287","1288","1289","1290","1291","1292"],"import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport {\r\n  DIRECT_AND_THIRD_PARTY,\r\n  MASTER_DATA,\r\n  PAYMENT_TRANSACTION,\r\n  REPORTS,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { Products } from \"components/products\"\r\nimport { Reports } from \"Restructured/Components/Features\"\r\nimport DirectAndThirdParty from \"Restructured/Components/Features/DirectAndThirdParty\"\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([REPORTS, DIRECT_AND_THIRD_PARTY]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <DirectAndThirdParty />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\index.js",["1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305"],"import { Button, Space, Table, Tag } from \"antd\"\r\nimport { Paper } from \"components/PaymentDetails/styles\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { RangePicker, Select } from \"Restructured/Components/Commons\"\r\nimport { CODE, QUANTITY } from \"Restructured/Constants/products\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  LABELS,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { Flex, Grid, Item } from \"Restructured/Styles\"\r\nimport useDirectAndThirdParty from \"./Controllers/useDirectAndThirdParty\"\r\n\r\nfunction DirectAndThirdParty() {\r\n  const [\r\n    tableColumns,\r\n    dropdowns,\r\n    reports,\r\n    sourceSummary,\r\n    branch,\r\n    setBranch,\r\n    dateFromTo,\r\n    setDateFromTo,\r\n    handleExport,\r\n  ] = useDirectAndThirdParty()\r\n\r\n  return (\r\n    <Grid alignItems=\"center\">\r\n      <Flex justifyContent=\"flex-end\">\r\n        <Item width=\"calc(100% - 750px)\">\r\n          <Button type=\"primary\" danger onClick={handleExport}>\r\n            Export as Excel\r\n          </Button>\r\n        </Item>\r\n        <Item>\r\n          <Select\r\n            label=\"Branch\"\r\n            dataSource={[...dropdowns]}\r\n            value={branch}\r\n            onChange={(value) => {\r\n              setBranch(value)\r\n            }}\r\n          />\r\n        </Item>\r\n        <Item>\r\n          <RangePicker\r\n            showTime={false}\r\n            format=\"MM/DD/YYYY\"\r\n            label=\"Date\"\r\n            value={dateFromTo}\r\n            onChange={(value) => {\r\n              setDateFromTo(value)\r\n            }}\r\n          />\r\n        </Item>\r\n        <Item width=\"100%\">\r\n          {reports.map((data) => {\r\n            const date = Object.keys(data)[0]\r\n            const dateData = { ...data[date] }\r\n            return (\r\n              <div key={data.header} style={{ padding: \"1rem\" }}>\r\n                <h3>{date}</h3>\r\n                {Object.keys(dateData).map((orderVia) => {\r\n                  const dataSource = [...dateData[orderVia]]\r\n                  return (\r\n                    <Paper>\r\n                      <h3>{orderVia}</h3>\r\n                      <Table columns={tableColumns} dataSource={dataSource} />\r\n                    </Paper>\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n        </Item>\r\n      </Flex>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default DirectAndThirdParty\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\useDirectAndThirdParty.js",["1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322"],"import { Tag } from \"antd\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  REF_NO,\r\n} from \"components/PaymentDetails/types\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { CODE, DESCRIPTION, QUANTITY } from \"Restructured/Constants/products\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_NO,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport Services from \"../../Reports/Services\"\r\nimport ExcelFormatter from \"../ExcelFormatter/ExcelFormatter\"\r\nimport produceDataOfEachDate from \"./produceDataOfEachDate\"\r\nimport produceListOfDates from \"./produceListOfDates\"\r\nimport produceProductList from \"./produceProductList\"\r\nimport produceReports from \"./produceReports\"\r\nimport produceTotalSumofItems from \"./produceTotalSumofItems\"\r\nimport ItemizedExportService from \"../../ExcelExporter/ItemizedExportService\"\r\n\r\nfunction useReports() {\r\n  const dateNow = new Date()\r\n  const dateFrom = new Date(dateNow.setDate(dateNow.getDate() - 10))\r\n  const from = moment(dateFrom, \"MM/DD/YYYY\")\r\n  const to = moment(new Date(), \"MM/DD/YYYY\")\r\n  const defaultRange = [from, to]\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const [branch, setBranch] = useState(\"\")\r\n  const [dateFromTo, setDateFromTo] = useState(defaultRange)\r\n  const [dropdowns, setDropdowns] = useState([])\r\n  const [reports, setReports] = useState([])\r\n  const [sourceSummary, setSourceSummary] = useState({})\r\n\r\n  useEffect(() => {\r\n    setDropdowns(userComponentSlice.branches)\r\n    if (userComponentSlice.branches.length > 0) {\r\n      setBranch(userComponentSlice.branches[0])\r\n    }\r\n  }, [userComponentSlice.branches])\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"CODE\",\r\n      dataIndex: CODE,\r\n      key: CODE,\r\n    },\r\n    {\r\n      title: \"DESCRIPTION\",\r\n      dataIndex: DESCRIPTION,\r\n      key: CODE,\r\n    },\r\n    {\r\n      title: \"QUANTITY\",\r\n      dataIndex: QUANTITY,\r\n      key: QUANTITY,\r\n    },\r\n    {\r\n      title: \"PRICE\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      align: \"right\",\r\n    },\r\n    {\r\n      title: \"TOTAL AMOUNT\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      align: \"right\",\r\n    },\r\n  ]\r\n\r\n  const handleExport = async () => {\r\n    const schedules = await Services.getSchedules(branch, dateFromTo)\r\n    const { productList, productPrice, productDescripton } =\r\n      await produceProductList()\r\n    const listOfDateFiltered = produceListOfDates(schedules)\r\n    const dataOfEachDate = produceDataOfEachDate(\r\n      listOfDateFiltered,\r\n      schedules,\r\n      productList\r\n    )\r\n    const totalSumofItems = produceTotalSumofItems(\r\n      dataOfEachDate,\r\n      productPrice,\r\n      productDescripton\r\n    )\r\n    const reports = produceReports(totalSumofItems)\r\n    const sheets = ExcelFormatter.produceObjectsToArray(reports)\r\n    ItemizedExportService.exportExcelReports(sheets)\r\n\r\n    setReports(reports)\r\n  }\r\n\r\n  return [\r\n    tableColumns,\r\n    dropdowns,\r\n    reports,\r\n    sourceSummary,\r\n    branch,\r\n    setBranch,\r\n    dateFromTo,\r\n    setDateFromTo,\r\n    handleExport,\r\n  ]\r\n}\r\n\r\nexport default useReports\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceListOfDates.js",["1323"],"import { DATE_START } from \"Restructured/Constants/schedules\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\n\r\nexport default function (schedules) {\r\n  const listOfDates = {}\r\n  for (const obj of schedules) {\r\n    const utcDate = formatDateFromDatabase(obj[DATE_START])\r\n    const formattedDate = formatDateDash(utcDate)\r\n    listOfDates[formattedDate] = { DIRECT: [] }\r\n  }\r\n  return listOfDates\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceDataOfEachDate.js",["1324"],"import {\r\n  DATE_START,\r\n  ORDER_VIA,\r\n  ORDER_VIA_PARTNER,\r\n} from \"Restructured/Constants/schedules\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\n\r\nexport default function (listOfDateFiltered, schedules, products) {\r\n  const dataOfEachDate = { ...listOfDateFiltered }\r\n  for (const obj of schedules) {\r\n    const utcDate = formatDateFromDatabase(obj[DATE_START])\r\n    const formattedDate = formatDateDash(utcDate)\r\n    const dateProperty = dataOfEachDate[formattedDate]\r\n\r\n    // include custom prices if it exists\r\n    const objProducts = {}\r\n    for (const code of products) {\r\n      if (typeof obj[code] !== \"undefined\" && parseInt(obj[code]) > 0) {\r\n        objProducts[code] = obj[code]\r\n      }\r\n      if (\r\n        typeof obj[`customPrice${code}`] !== \"undefined\" &&\r\n        parseInt(obj[`customPrice${code}`]) > 0\r\n      ) {\r\n        objProducts[`customPrice${code}`] = obj[`customPrice${code}`]\r\n      }\r\n    }\r\n    // DIRECT data\r\n    if (typeof obj[ORDER_VIA] !== \"undefined\") {\r\n      if (obj[ORDER_VIA]) {\r\n        dateProperty[\"DIRECT\"].push(objProducts)\r\n      }\r\n    }\r\n\r\n    // PARTNER MERCHANT data\r\n    if (typeof obj[ORDER_VIA_PARTNER] !== \"undefined\") {\r\n      if (obj[ORDER_VIA_PARTNER]) {\r\n        const orderViaPartnerProperty = obj[ORDER_VIA_PARTNER]\r\n        if (typeof dateProperty[orderViaPartnerProperty] !== \"undefined\") {\r\n          dateProperty[orderViaPartnerProperty].push(objProducts)\r\n        } else {\r\n          dateProperty[orderViaPartnerProperty] = [objProducts]\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dataOfEachDate\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceProductList.js",["1325"],"import ProductServices from \"Restructured/Services/ProductServices\"\r\n\r\nexport default async function () {\r\n  const productList = []\r\n  const productPrice = {}\r\n  const productDescripton = {}\r\n  const products = await ProductServices.getProducts()\r\n  for (const obj of products) {\r\n    for (const obj2 of obj?.productList) {\r\n      productList.push(obj2?.code)\r\n      productPrice[obj2?.code] = obj2?.price\r\n      productDescripton[obj2?.code] = obj2?.description\r\n    }\r\n  }\r\n  return { productList, productPrice, productDescripton }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceTotalSumofItems.js",["1326"],"import lodash from \"lodash\"\r\nexport default function (dataOfEachDate, productPrice, productDescription) {\r\n  console.log(\"productDescription\", productDescription)\r\n  const renewedData = {}\r\n\r\n  for (const date of Object.keys(dataOfEachDate)) {\r\n    renewedData[date] = {}\r\n    const dateData = { ...dataOfEachDate[date] }\r\n    for (const orderVia of Object.keys(dateData)) {\r\n      renewedData[date][orderVia] = []\r\n      for (const productObj of dateData[orderVia]) {\r\n        let qtyList = {}\r\n        for (const productProperty of Object.keys(productObj)) {\r\n          const qty = parseInt(productObj[productProperty])\r\n          // if (parseInt(productPrice[productProperty]) > 0) {\r\n          if (typeof qtyList[productProperty] !== \"undefined\") {\r\n            qtyList[productProperty].push(qty)\r\n          } else {\r\n            qtyList[productProperty] = [qty]\r\n          }\r\n          // }\r\n        }\r\n\r\n        for (const item of Object.keys(qtyList)) {\r\n          // renewedData[date][orderVia][item] = lodash.sum(qtyList[item])\r\n          const itemTotalQty = lodash.sum(qtyList[item])\r\n          if (!item.includes(\"customPrice\")) {\r\n            const customPrice =\r\n              typeof qtyList[`customPrice${item}`]?.length > 0\r\n                ? qtyList[`customPrice${item}`][0]\r\n                : 0\r\n            const _productPrice = productPrice[item] || customPrice\r\n\r\n            renewedData[date][orderVia].push({\r\n              code: item,\r\n              description: productDescription[item],\r\n              price: _productPrice,\r\n              qty: itemTotalQty,\r\n              total: _productPrice * itemTotalQty,\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  console.log(\"renewed\", renewedData)\r\n  return renewedData\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\Controllers\\produceReports.js",["1327"],"export default function (totalSumofItems) {\r\n  const data = []\r\n  for (const date of Object.keys(totalSumofItems)) {\r\n    const dateData = { ...totalSumofItems[date] }\r\n    const renewedObj = {}\r\n    for (const orderVia of Object.keys(dateData)) {\r\n      if (dateData[orderVia].length > 0) {\r\n        renewedObj[orderVia] = [...dateData[orderVia]]\r\n      }\r\n    }\r\n    console.log(\"r\", renewedObj)\r\n    if (Object.keys(renewedObj).length > 0) {\r\n      data.push({ [date]: renewedObj })\r\n    }\r\n  }\r\n\r\n  return data\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\ExcelFormatter\\ExcelFormatter.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DirectAndThirdParty\\ExcelFormatter\\ExcelConstantDataRow.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\ExcelExporter\\ItemizedExportService.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\index.js",["1328"],"import React, { useState } from \"react\"\r\nimport { Tabs, Button } from \"antd\"\r\nimport { AppleOutlined, AndroidOutlined } from \"@ant-design/icons\"\r\nimport ProductCards from \"./ProductCards\"\r\nimport ReceivingModal from \"./ProductCards/modal\"\r\nimport ProductTable from \"./ProductTable\"\r\nimport ProductTableView from \"./ProductTableView\"\r\nconst { TabPane } = Tabs\r\n\r\nfunction Inventory() {\r\n  const [modalState, setModalState] = useState(false)\r\n  const operations = <ReceivingModal setModalState={setModalState} />\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      <Tabs defaultActiveKey=\"1\" tabBarExtraContent={operations}>\r\n        <TabPane\r\n          tab={\r\n            <span>\r\n              <AppleOutlined />\r\n              Products Table View\r\n            </span>\r\n          }\r\n          key=\"1\"\r\n        >\r\n          <ProductTableView />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <span>\r\n              <AppleOutlined />\r\n              Products Tile View\r\n            </span>\r\n          }\r\n          key=\"2\"\r\n        >\r\n          <ProductCards />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <span>\r\n              <AndroidOutlined />\r\n              Receiving Report\r\n            </span>\r\n          }\r\n          key=\"3\"\r\n        >\r\n          {modalState === false ? (\r\n            <ProductTable modalState={modalState} />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inventory\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\index.js",["1329","1330","1331","1332","1333","1334"],"import { Col, Divider, Row, Card, Button } from \"antd\"\r\nimport React, { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport useProductServices from \"./useProductServices\"\r\nimport ViewProduct from \"./viewProduct\"\r\n\r\nfunction ProductCards() {\r\n  const { productList } = useProductServices()\r\n  const Header = ({ code, description }) => {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <b>{code}</b>\r\n          <br />\r\n          <small>{description}</small>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div style={{ padding: \"1rem\", backgroundColor: \"#eee\" }}>\r\n      {productList.map((product) => (\r\n        <Grid>\r\n          <Divider orientation=\"left\">{product.groupHeader}</Divider>\r\n          <Grid columns={3}>\r\n            {product.productList.map((list) => {\r\n              return (\r\n                <Flex>\r\n                  <div\r\n                    className=\"site-card-border-less-wrapper\"\r\n                    style={{ marginBottom: \"1rem\" }}\r\n                  >\r\n                    <Card\r\n                      title={\r\n                        <Header\r\n                          code={list?.code}\r\n                          description={list?.description}\r\n                        />\r\n                      }\r\n                      bordered={false}\r\n                      style={{ width: 300 }}\r\n                    >\r\n                      <ViewProduct code={list?.code} />\r\n                    </Card>\r\n                  </div>\r\n                </Flex>\r\n              )\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCards\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\useProductServices.js",["1335"],"import { useEffect, useState } from \"react\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport SchedulerServices from \"Restructured/Services/SchedulerServices\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport produceTotalPurchases, {\r\n  produceTotalImports,\r\n} from \"./produceTotalPurchases\"\r\n\r\nexport default function () {\r\n  const [productList, setProductList] = useState([])\r\n  const [totalStorage, setTotalStorage] = useState(0)\r\n  useEffect(() => {\r\n    loadProducts()\r\n  }, [])\r\n  const loadProducts = async () => {\r\n    const _data = await ProductServices.getProducts()\r\n    setProductList(_data)\r\n  }\r\n\r\n  const getPurchasedProducts = async (code) => {\r\n    const _data = await SchedulerServices.getSchedulesByCode(code)\r\n    const _dataImports = await ReceivingReportServices.getRRByCode(code)\r\n    const purchases = produceTotalPurchases(_data, code)\r\n    const imports = produceTotalImports(_dataImports, code)\r\n    const _totalStorage = parseInt(imports - purchases)\r\n    setTotalStorage(_totalStorage)\r\n  }\r\n  return { productList, getPurchasedProducts, totalStorage }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\viewProduct.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\SchedulerServices.js",["1336"],"import db from \"services/firebase\"\r\n\r\nexport default class ScheduleServices {\r\n  constructor() {}\r\n  static async getSchedules() {\r\n    return new Promise((res, rej) => {\r\n      db.collection(\"schedules\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            _dataFetched.push({\r\n              ..._data,\r\n            })\r\n          })\r\n          res(_dataFetched)\r\n        })\r\n        .catch((error) => {\r\n          rej(error)\r\n          console.log(\"Error getting documents: \", error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async getSchedulesByIncidents() {\r\n    return new Promise((res, rej) => {\r\n      db.collection(\"schedules\")\r\n        .where(\"others.Incidents\", \"!=\", \"\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            _dataFetched.push({\r\n              ..._data,\r\n            })\r\n          })\r\n          res(_dataFetched)\r\n        })\r\n        .catch((error) => {\r\n          rej(error)\r\n          console.log(\"Error getting documents: \", error)\r\n        })\r\n    })\r\n  }\r\n\r\n  static async getSchedulesByCode(code) {\r\n    // if (!code) return []\r\n    return new Promise((res, rej) => {\r\n      db.collection(\"schedules\")\r\n        .where(code, \"!=\", \"0\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            console.log(\"As\", doc)\r\n            _dataFetched.push({\r\n              ..._data,\r\n            })\r\n          })\r\n          console.log(\"Datafetched\", _dataFetched)\r\n          res(_dataFetched)\r\n        })\r\n        .catch((error) => {\r\n          rej(error)\r\n          console.log(\"Error getting documents: \", error)\r\n        })\r\n    })\r\n  }\r\n\r\n  async getSchedulesByDate(dates, field = \"StartTime\") {\r\n    return new Promise((resolve, reject) => {\r\n      const startTime = new Date(dates[0].setHours(0, 0, 0, 0))\r\n      const endTime = new Date(dates[1].setHours(23, 59, 59, 59))\r\n      db.collection(\"schedules\")\r\n        .where(field, \">=\", startTime)\r\n        .where(field, \"<=\", endTime)\r\n        .orderBy(field, \"desc\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            _dataFetched.push({ ..._data, _id: doc.id })\r\n          })\r\n          resolve(_dataFetched)\r\n        })\r\n        .catch((error) => {\r\n          reject(error)\r\n          console.log(\"Error getting documents: \", error)\r\n        })\r\n    }).catch((error) => {\r\n      console.log(\"code error\", error)\r\n    })\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\produceTotalPurchases.js",["1337"],"export default function (data, code) {\r\n  let purchases = 0\r\n\r\n  for (const obj of data) {\r\n    purchases = purchases + parseInt(obj[code])\r\n  }\r\n\r\n  return purchases\r\n}\r\n\r\nexport const produceTotalImports = (data, code) => {\r\n  let purchases = 0\r\n\r\n  for (const obj of data) {\r\n    purchases = purchases + parseInt(obj[code])\r\n  }\r\n\r\n  return purchases\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductCards\\modal.js",["1338","1339"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button, Input, Divider, Select } from \"antd\"\r\nimport useProductServices from \"./useProductServices\"\r\nimport { addData } from \"services\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { Option } from \"antd/lib/mentions\"\r\nimport { formatDateDash } from \"Restructured/Utilities/dateFormat\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport generatedNoString from \"Restructured/Utilities/generatedNoString\"\r\n\r\nconst produceStateProperty = (productList) => {\r\n  const list = { invoiceNo: \"\", deliveryNo: \"\", purchaseOrderNo: \"\" }\r\n  for (const obj of productList) {\r\n    for (const obj2 of obj.productList) {\r\n      list[obj2?.code] = \"0\"\r\n    }\r\n  }\r\n  return list\r\n}\r\nconst ReceivingModal = (props) => {\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const { productList } = useProductServices()\r\n  const [importObj, setImportObj] = useState({})\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"imp\", importObj)\r\n    const date = formatDateDash(new Date())\r\n    const dateString = date.split(\"-\").join(\"\")\r\n    const verifyGeneratedObj =\r\n      await ReceivingReportServices.getRRByGeneratedNoObj(importObj.branch)\r\n    const _generatedNoString = generatedNoString(verifyGeneratedObj.length)\r\n    const dataToBeSend = {\r\n      ...importObj,\r\n      rrNo: `${importObj.branch.toUpperCase()}-${_generatedNoString}-${dateString}`,\r\n      receivedBy: {\r\n        displayName: userComponentSlice?.displayName,\r\n        email: userComponentSlice?.email,\r\n        roles: userComponentSlice?.roles,\r\n      },\r\n      date: new Date(),\r\n    }\r\n    const result = addData({\r\n      data: dataToBeSend,\r\n      collection: \"receivingReports\",\r\n      id: null,\r\n    })\r\n    setVisible(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const date = formatDateDash(new Date())\r\n    const dateString = date.split(\"-\").join(\"\")\r\n    if (visible === false) {\r\n      setImportObj({\r\n        ...produceStateProperty(productList),\r\n        branch: \"Libis\",\r\n        dateString: dateString,\r\n      })\r\n    }\r\n    if (visible) {\r\n      props.setModalState(true)\r\n    }\r\n  }, [visible, productList])\r\n  return (\r\n    <>\r\n      <Button type=\"danger\" onClick={() => setVisible(true)}>\r\n        Create Receiving Report\r\n      </Button>\r\n      <Modal\r\n        title=\"Create Receiving Report\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => {\r\n          handleSubmit()\r\n          props.setModalState(false)\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false)\r\n          props.setModalState(false)\r\n        }}\r\n        width={1000}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"flex-start\",\r\n            flexFlow: \"row wrap\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              maxWidth: \"15rem\",\r\n            }}\r\n          >\r\n            <label>Branch</label>\r\n            <Select\r\n              style={{ width: \"13rem\" }}\r\n              value={importObj.branch}\r\n              onChange={(value) => {\r\n                console.log(\"e\", value)\r\n                setImportObj({\r\n                  ...importObj,\r\n                  branch: value,\r\n                })\r\n              }}\r\n            >\r\n              <Option value=\"Libis\">Libis</Option>\r\n              <Option value=\"Ronac\">Ronac</Option>\r\n            </Select>\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Invoice No</label>\r\n            <Input\r\n              name=\"invoiceNo\"\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, invoiceNo: e.target.value })\r\n              }\r\n              value={importObj[\"invoiceNo\"]}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Delivery No</label>\r\n            <Input\r\n              name=\"deliveryNo\"\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, deliveryNo: e.target.value })\r\n              }\r\n              value={importObj[\"deliveryNo\"]}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Purchase Order No</label>\r\n            <Input\r\n              name=\"purchaseOrderNo\"\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, purchaseOrderNo: e.target.value })\r\n              }\r\n              value={importObj[\"purchaseOrderNo\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {productList.map((product) => {\r\n            return (\r\n              <div>\r\n                <h3>{product?.groupHeader}</h3>\r\n                <Divider />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexFlow: \"row wrap\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"flex-end\",\r\n                  }}\r\n                >\r\n                  {product?.productList.map((data) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          padding: \"1rem\",\r\n                          marginBottom: \"1rem\",\r\n                          maxWidth: \"15rem\",\r\n                        }}\r\n                      >\r\n                        <label>{`${data?.description} (${data?.code})`}</label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"purchaseOrderNo\"\r\n                          onChange={(e) => {\r\n                            setImportObj({\r\n                              ...importObj,\r\n                              [data?.code]: e.target.value,\r\n                            })\r\n                          }}\r\n                          value={importObj[data?.code]}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReceivingModal\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Services\\ReceivingReportServices.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\8.inventory\\index.js",["1340","1341","1342","1343","1344","1345","1346","1347","1348"],"import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport {\r\n  DIRECT_AND_THIRD_PARTY,\r\n  MASTER_DATA,\r\n  PAYMENT_TRANSACTION,\r\n  REPORTS,\r\n  INVENTORY,\r\n  DASHBOARD,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { Products } from \"components/products\"\r\nimport { Reports } from \"Restructured/Components/Features\"\r\nimport DirectAndThirdParty from \"Restructured/Components/Features/DirectAndThirdParty\"\r\nimport Inventory from \"Restructured/Components/Features/Inventory\"\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD, INVENTORY]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Inventory />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\index.js",["1349","1350","1351","1352","1353"],"import { Table, Tag, Space, Button } from \"antd\"\r\nimport useReceivedReport from \"./useReceivedReport\"\r\nimport Print from \"../../Print\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nimport ReceivingProductReport from \"../../Print/Documents/receivingProductReport\"\r\nimport ReceivingModalView from \"./modal\"\r\nimport EditModal from \"./editModal\"\r\n\r\nexport default function (props) {\r\n  const [reportList] = useReceivedReport({ modalState: props.modalState })\r\n\r\n  const findRowData = (id) => {\r\n    return reportList.find((data) => data.id === id)\r\n  }\r\n  const findRowDataByRRNo = (rrNo) => {\r\n    return reportList.find((data) => data.rrNo === rrNo)\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"RR No\",\r\n      dataIndex: \"rrNo\",\r\n      key: \"rrNo\",\r\n      render: (data) => {\r\n        return <a>{data}</a>\r\n      },\r\n    },\r\n    {\r\n      title: \"Items Purchased\",\r\n      key: \"items\",\r\n      dataIndex: \"items\",\r\n      render: (tags) => (\r\n        <>\r\n          {tags?.map(({ code }) => {\r\n            console.log(\"Tag\", code)\r\n            return (\r\n              <Tag color=\"blue\" key={code}>\r\n                {code}\r\n              </Tag>\r\n            )\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Received By\",\r\n      dataIndex: \"receivedBy\",\r\n      key: \"receivedBy\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"Total Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      render: (id) => {\r\n        return (\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Print\r\n              button={<AiFillPrinter fontSize=\"1.5rem\" />}\r\n              component={\r\n                <ReceivingProductReport reportData={findRowData(id)} />\r\n              }\r\n            />\r\n            <ReceivingModalView reportData={findRowData(id)} />\r\n            <EditModal id={id} />\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n  return <Table columns={columns} dataSource={reportList} />\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\table.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\useReceivedReport.js",["1354","1355","1356","1357","1358"],"import { useEffect, useState } from \"react\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\nimport db from \"services/firebase\"\r\n\r\nexport default function (props) {\r\n  const [reportList, setReportList] = useState([])\r\n  const [originalReportList, setOriginalReportList] = useState([])\r\n  useEffect(() => {\r\n    // const unsubscribe = db\r\n    //   .collection(\"receivingReports\")\r\n    //   .onSnapshot(function (snapshot) {\r\n    //     const _reportList = [...originalReportList]\r\n    //     for (const obj of snapshot.docChanges()) {\r\n    //       if (obj.type === \"modified\") {\r\n    //         const data = obj.doc.data()\r\n    //         setOriginalReportList(data)\r\n    //         console.log(\"eventRealMod\", data)\r\n    //         // setReportList(data)\r\n    //       } else if (obj.type === \"added\") {\r\n    //         const data = obj.doc.data()\r\n    //         console.log(\"eventReal\", data)\r\n    //         // setReportList(data)\r\n    //       } else {\r\n    //         console.log(\"nothing\")\r\n    //       }\r\n    //     }\r\n    //   })\r\n    // return () => {\r\n    //   unsubscribe()\r\n    // }\r\n    loadReports()\r\n  }, [])\r\n  const loadProducts = async () => {\r\n    const _productList = []\r\n    const products = await ProductServices.getProducts()\r\n\r\n    for (const obj of products) {\r\n      for (const product of obj?.productList) {\r\n        _productList.push({\r\n          ...product,\r\n          groupHeader: obj?.groupHeader,\r\n          price: product?.price,\r\n        })\r\n      }\r\n    }\r\n    return _productList\r\n  }\r\n\r\n  const loadReports = async (/*report*/) => {\r\n    const _reportList = []\r\n    const report = await ReceivingReportServices.getRR()\r\n    const _productList = await loadProducts()\r\n    for (const obj of report) {\r\n      const user = { ...obj.receivedBy }\r\n      const date = formatDateFromDatabase(obj?.date)\r\n      const formattedDate = formatDateDash(date)\r\n      const items = []\r\n      for (const product of _productList) {\r\n        if (parseInt(obj[product?.code]) > 0) {\r\n          items.push({\r\n            code: product?.code,\r\n            value: parseInt(obj[product?.code]),\r\n            description: product?.description,\r\n            category: product?.groupHeader,\r\n            price: product?.price,\r\n            amount: parseInt(product?.price) * parseInt(obj[product?.code]),\r\n          })\r\n        }\r\n      }\r\n      const totalAmount = sumArray(items, \"amount\")\r\n      _reportList.push({\r\n        invoiceNo: obj?.invoiceNo,\r\n        deliveryNo: obj?.deliveryNo,\r\n        purchaseOrderNo: obj?.purchaseOrderNo,\r\n        receivedBy: user?.displayName,\r\n        items,\r\n        id: obj?._id,\r\n        date: formattedDate,\r\n        amount: totalAmount,\r\n        rrNo: obj?.rrNo,\r\n      })\r\n    }\r\n    setReportList(_reportList)\r\n    return _reportList\r\n  }\r\n\r\n  return [reportList, loadReports]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\receivingProductReport.js",["1359","1360","1361","1362","1363","1364","1365","1366"],"import React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { CODE, DESCRIPTION, QUANTITY } from \"Restructured/Constants/products\"\r\nimport { DATE_END, DATE_START } from \"Restructured/Constants/schedules\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\nimport FilteringPanelMethods from \"../../FilteringPanel/Controllers/FilteringPanelMethods\"\r\nimport PrintMethods from \"../Controllers/PrintMethods\"\r\n\r\nfunction ReceivingProductReport({ reportData }) {\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n  useEffect(() => {\r\n    const _totalAmount = sumArray(reportData?.items, \"amount\")\r\n    setTotalAmount(_totalAmount)\r\n  }, [])\r\n\r\n  return (\r\n    <Grid padding=\"3rem\">\r\n      <Grid>\r\n        <h3>VITOS BBQ</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <h3>RECEIVING ITEMS FORM</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <div>\r\n          <b>Invoice No: </b> {reportData?.invoiceNo}{\" \"}\r\n        </div>\r\n        <div>\r\n          <b>Delivery No: </b> {reportData?.deliveryNo}{\" \"}\r\n        </div>\r\n        <div>\r\n          <b>Purchased Order No: </b> {reportData?.purchaseOrderNo}{\" \"}\r\n        </div>\r\n        <div>\r\n          <b>Date:</b> {reportData?.date}{\" \"}\r\n        </div>\r\n      </Grid>\r\n      <Grid>\r\n        <br />\r\n        <div>\r\n          <h3>ITEMS</h3>\r\n        </div>\r\n        <table>\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Code</th>\r\n            <th>Description</th>\r\n            <th>Qty</th>\r\n            <th style={{ textAlign: \"right\" }}>Price</th>\r\n            <th style={{ textAlign: \"right\" }}>Amount</th>\r\n          </tr>\r\n          {reportData.items.map((data) => {\r\n            return (\r\n              <tr>\r\n                <th>{data?.category}</th>\r\n                <td>{data?.code}</td>\r\n                <td>{data?.description}</td>\r\n                <td>{data?.value}</td>\r\n                <td style={{ textAlign: \"right\" }}>{data?.price.toFixed(2)}</td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  {data?.amount.toFixed(2)}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </table>\r\n      </Grid>\r\n      <Grid>\r\n        <table>\r\n          <tr>\r\n            <th>Total</th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th></th>\r\n            <th style={{ textAlign: \"right\" }}>{totalAmount.toFixed(2)}</th>\r\n          </tr>\r\n        </table>\r\n      </Grid>\r\n      <Grid>\r\n        <br />\r\n        <br />\r\n        <p>\r\n          <b>Received By:</b>\r\n          <br />\r\n          {\" \\n\"}\r\n          {reportData?.receivedBy}\r\n        </p>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ReceivingProductReport\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\generatedNoString.js",["1367"],"export default function (no) {\r\n  const newNo = no + 1\r\n  if (newNo < 10) {\r\n    return `0000${newNo}`\r\n  } else if (newNo > 9 && newNo < 100) {\r\n    return `000${newNo}`\r\n  } else if (newNo > 99 && newNo < 1000) {\r\n    return `00${newNo}`\r\n  } else if (newNo > 1000 && newNo < 10000) {\r\n    return `0${newNo}`\r\n  } else {\r\n    return newNo\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\modal.js",["1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button, Input, Divider, Select, Table } from \"antd\"\r\nimport { addData } from \"services\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { Option } from \"antd/lib/mentions\"\r\nimport { formatDateDash } from \"Restructured/Utilities/dateFormat\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport generatedNoString from \"Restructured/Utilities/generatedNoString\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\n\r\nconst ReceivingModalView = ({ reportData }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n  useEffect(() => {\r\n    const _totalAmount = sumArray(reportData?.items, \"amount\")\r\n    setTotalAmount(_totalAmount)\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Category\",\r\n      dataIndex: \"category\",\r\n      key: \"category\",\r\n      render: (data) => {\r\n        return <a>{data}</a>\r\n      },\r\n    },\r\n    {\r\n      title: \"Code\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Qty\",\r\n      dataIndex: \"value\",\r\n      key: \"value\",\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"price\",\r\n      key: \"price\",\r\n      align: \"right\",\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      align: \"right\",\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"danger\" onClick={() => setVisible(true)}>\r\n        View\r\n      </Button>\r\n      <Modal\r\n        title=\"RECEIVING REPORT\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => {\r\n          setVisible(true)\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false)\r\n        }}\r\n        width={1000}\r\n      >\r\n        <Grid padding=\"3rem\">\r\n          <Grid>\r\n            <div>\r\n              <b>Invoice No: </b> {reportData?.invoiceNo}{\" \"}\r\n            </div>\r\n            <div>\r\n              <b>Delivery No: </b> {reportData?.deliveryNo}{\" \"}\r\n            </div>\r\n            <div>\r\n              <b>Purchased Order No: </b> {reportData?.purchaseOrderNo}{\" \"}\r\n            </div>\r\n            <div>\r\n              <b>Date:</b> {reportData?.date}{\" \"}\r\n            </div>\r\n          </Grid>\r\n          <Grid>\r\n            <br />\r\n            <div>\r\n              <h3>ITEMS RECEIVED</h3>\r\n            </div>\r\n            <Table columns={columns} dataSource={reportData.items} />\r\n          </Grid>\r\n          <Grid>\r\n            <table>\r\n              <tr>\r\n                <th>Total</th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th style={{ textAlign: \"right\" }}>{totalAmount.toFixed(2)}</th>\r\n              </tr>\r\n            </table>\r\n          </Grid>\r\n          <Grid>\r\n            <br />\r\n            <br />\r\n            <p>\r\n              <b>Received By:</b>\r\n              <br />\r\n              {\" \\n\"}\r\n              {reportData?.receivedBy}\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReceivingModalView\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTable\\editModal.js",["1380","1381","1382","1383","1384","1385","1386","1387"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button, Input, Divider, Select } from \"antd\"\r\nimport useProductServices from \"../ProductCards/useProductServices\"\r\nimport { updateData } from \"services\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { Option } from \"antd/lib/mentions\"\r\nimport { formatDateDash } from \"Restructured/Utilities/dateFormat\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport generatedNoString from \"Restructured/Utilities/generatedNoString\"\r\n\r\nconst produceStateProperty = (productList) => {\r\n  const list = { invoiceNo: \"\", deliveryNo: \"\", purchaseOrderNo: \"\" }\r\n  for (const obj of productList) {\r\n    for (const obj2 of obj.productList) {\r\n      list[obj2?.code] = \"0\"\r\n    }\r\n  }\r\n  return list\r\n}\r\nconst ReceivingModal = (props) => {\r\n  const userComponentSlice = useSelector(selectUserSlice)\r\n  const { productList } = useProductServices()\r\n  const [importObj, setImportObj] = useState({})\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const handleSubmit = async () => {\r\n    updateData({\r\n      data: importObj,\r\n      collection: \"receivingReports\",\r\n      id: props.id,\r\n    })\r\n    setVisible(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      loadProductList()\r\n    }\r\n  }, [visible])\r\n\r\n  const loadProductList = async () => {\r\n    const productList = await ReceivingReportServices.getRRById(props.id)\r\n    setImportObj({ ...productList })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={() => setVisible(true)}>Edit</Button>\r\n      <Modal\r\n        title=\"Edit Receiving Report\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => {\r\n          handleSubmit()\r\n        }}\r\n        onCancel={() => {\r\n          setVisible(false)\r\n        }}\r\n        width={1000}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"flex-start\",\r\n            flexFlow: \"row wrap\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              padding: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              maxWidth: \"15rem\",\r\n            }}\r\n          >\r\n            <label>Branch</label>\r\n            <Select style={{ width: \"13rem\" }} value={importObj.branch}>\r\n              <Option value=\"Libis\">Libis</Option>\r\n              <Option value=\"Ronac\">Ronac</Option>\r\n            </Select>\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Invoice No</label>\r\n            <Input\r\n              name=\"invoiceNo\"\r\n              value={importObj.invoiceNo}\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, invoiceNo: e.target.value })\r\n              }\r\n              value={importObj[\"invoiceNo\"]}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Delivery No</label>\r\n            <Input\r\n              name=\"deliveryNo\"\r\n              value={importObj.deliveryNo}\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, deliveryNo: e.target.value })\r\n              }\r\n              value={importObj[\"deliveryNo\"]}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ padding: \"1rem\", marginBottom: \"1rem\", maxWidth: \"15rem\" }}\r\n          >\r\n            <label>Purchase Order No</label>\r\n            <Input\r\n              name=\"purchaseOrderNo\"\r\n              value={importObj.purchaseOrderNo}\r\n              onChange={(e) =>\r\n                setImportObj({ ...importObj, purchaseOrderNo: e.target.value })\r\n              }\r\n              value={importObj[\"purchaseOrderNo\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          {productList.map((product) => {\r\n            return (\r\n              <div>\r\n                <h3>{product?.groupHeader}</h3>\r\n                <Divider />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexFlow: \"row wrap\",\r\n                    justifyContent: \"flex-end\",\r\n                    alignItems: \"flex-end\",\r\n                  }}\r\n                >\r\n                  {product?.productList.map((data) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          padding: \"1rem\",\r\n                          marginBottom: \"1rem\",\r\n                          maxWidth: \"15rem\",\r\n                        }}\r\n                      >\r\n                        <label>{`${data?.description} (${data?.code})`}</label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          name=\"purchaseOrderNo\"\r\n                          onChange={(e) => {\r\n                            setImportObj({\r\n                              ...importObj,\r\n                              [data?.code]: e.target.value,\r\n                            })\r\n                          }}\r\n                          value={importObj[data?.code]}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReceivingModal\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\DiscountAndOthersDialog.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\index.js",["1388"],"import { Table } from \"antd\"\r\nimport React, { useState } from \"react\"\r\nimport useProductServices from \"../ProductCards/useProductServices\"\r\nimport LedgerView from \"./ledgerView\"\r\nimport useProductTableView from \"./useProductTableView\"\r\n\r\nfunction ProductTableView() {\r\n  const { productList } = useProductServices()\r\n  const [productTableList, ledger] = useProductTableView(productList)\r\n  const [codeSelected, setCodeSelected] = useState(null)\r\n  const columns = [\r\n    {\r\n      title: \"Product Code\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n      render: (data) => {\r\n        return <a onClick={() => setCodeSelected(data)}>{data}</a>\r\n      },\r\n    },\r\n    {\r\n      title: \"Product Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Balance\",\r\n      dataIndex: \"balance\",\r\n      key: \"balance\",\r\n    },\r\n  ]\r\n  return codeSelected === null ? (\r\n    <Table dataSource={productTableList} columns={columns} />\r\n  ) : (\r\n    <LedgerView\r\n      back={() => setCodeSelected(null)}\r\n      code={codeSelected}\r\n      ledger={ledger}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProductTableView\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\useProductTableView.js",["1389"],"import { useEffect, useState } from \"react\"\r\nimport SchedulerServices from \"Restructured/Services/SchedulerServices\"\r\nimport ReceivingReportServices from \"Restructured/Services/ReceivingReportServices\"\r\nimport { sumNumbers } from \"Restructured/Utilities/sumArray\"\r\n\r\nexport default function useProductTableView(productList) {\r\n  const [productTableList, setProductTableList] = useState([])\r\n  const [ledger, setLedger] = useState({})\r\n\r\n  useEffect(() => {\r\n    loadServices()\r\n  }, [productList])\r\n\r\n  const loadServices = async () => {\r\n    const _schedules = await SchedulerServices.getSchedules()\r\n    const _receivingReports = await ReceivingReportServices.getRR()\r\n    loadProducts(_schedules, _receivingReports)\r\n  }\r\n\r\n  console.log(\"ledger\", ledger)\r\n  const loadProducts = (schedules, receivingReports) => {\r\n    const _productTableList = []\r\n    const _ledger = { ...ledger }\r\n    for (const obj of productList) {\r\n      const _productList = [...obj.productList]\r\n      for (const prod of _productList) {\r\n        _productTableList.push({\r\n          code: prod.code,\r\n          description: prod.description,\r\n          balance: loadBalance(prod?.code, schedules, receivingReports),\r\n        })\r\n        _ledger[prod?.code] = {\r\n          ...loadLedgers(prod?.code, schedules, receivingReports),\r\n        }\r\n      }\r\n    }\r\n    setLedger(_ledger)\r\n    setProductTableList(_productTableList)\r\n  }\r\n\r\n  const loadBalance = (code, schedules, receivingReports) => {\r\n    const codeOut = []\r\n    const codeIn = []\r\n    for (const obj of schedules) {\r\n      if (obj[code] !== \"0\") {\r\n        codeOut.push(obj[code])\r\n      }\r\n    }\r\n\r\n    for (const obj of receivingReports) {\r\n      if (obj[code] !== \"0\") {\r\n        codeIn.push(obj[code])\r\n      }\r\n    }\r\n    const totalCodeOut = sumNumbers(codeOut)\r\n    const totalCodeIn = sumNumbers(codeIn)\r\n    return totalCodeIn - totalCodeOut\r\n  }\r\n\r\n  const loadLedgers = (code, schedules, receivingReports) => {\r\n    const codeOut = []\r\n    const codeIn = []\r\n    for (const obj of schedules) {\r\n      if (obj[code] !== \"0\") {\r\n        codeOut.push(obj)\r\n      }\r\n    }\r\n\r\n    for (const obj of receivingReports) {\r\n      if (obj[code] !== \"0\") {\r\n        codeIn.push(obj)\r\n      }\r\n    }\r\n    return { codeOut, codeIn }\r\n  }\r\n\r\n  return [productTableList, ledger]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Inventory\\ProductTableView\\ledgerView.js",["1390","1391"],"import { Button, Table } from \"antd\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\n\r\nfunction LedgerView(props) {\r\n  const [codeOut, setCodeOut] = useState([])\r\n  const [codeIn, setCodeIn] = useState([])\r\n  const columns = [\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"Order Number\",\r\n      dataIndex: \"orderNo\",\r\n      key: \"orderNo\",\r\n    },\r\n    {\r\n      title: \"Quantity\",\r\n      dataIndex: \"qty\",\r\n      key: \"qty\",\r\n    },\r\n    {\r\n      title: \"User\",\r\n      dataIndex: \"user\",\r\n      key: \"user\",\r\n    },\r\n  ]\r\n\r\n  const columns2 = [\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"date\",\r\n      key: \"date\",\r\n    },\r\n    {\r\n      title: \"RR Number\",\r\n      dataIndex: \"rrNo\",\r\n      key: \"rrNo\",\r\n    },\r\n    {\r\n      title: \"Quantity\",\r\n      dataIndex: \"qty\",\r\n      key: \"qty\",\r\n    },\r\n    {\r\n      title: \"User\",\r\n      dataIndex: \"user\",\r\n      key: \"user\",\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    loadLedgers()\r\n  }, [props])\r\n\r\n  const loadLedgers = () => {\r\n    const ledger = { ...props?.ledger }\r\n    const codeOut = []\r\n    const codeIn = []\r\n    for (const data of ledger[props?.code]?.codeOut) {\r\n      const date = formatDateFromDatabase(data.StartTime)\r\n      codeOut.push({\r\n        date: formatDateDash(date),\r\n        orderNo: data?.orderNo,\r\n        qty: data[props?.code],\r\n      })\r\n    }\r\n    for (const data of ledger[props?.code]?.codeIn) {\r\n      const date = formatDateFromDatabase(data.date)\r\n      codeIn.push({\r\n        date: formatDateDash(date),\r\n        rrNo: data?.rrNo,\r\n        qty: data[props?.code],\r\n      })\r\n    }\r\n    setCodeOut(codeOut)\r\n    setCodeIn(codeIn)\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex>\r\n        <div>\r\n          <button\r\n            onClick={props.back}\r\n            style={{\r\n              border: \"none\",\r\n              backgroundColor: \"transparent\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <BiArrowBack size={20} />\r\n          </button>\r\n        </div>\r\n        <div>{`Ledger In and Out ( ${props?.code} )`}</div>\r\n      </Flex>\r\n      <h3 style={{ padding: \"1rem\", color: \"#0275d8\" }}>\r\n        Credit (Grilled Fullfilled)\r\n      </h3>\r\n      <Table dataSource={codeOut} columns={columns} />\r\n      <h3 style={{ padding: \"1rem\", color: \"#0275d8\" }}>Debit (RR)</h3>\r\n      <Table dataSource={codeIn} columns={columns2} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LedgerView\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\9.incidentReports\\index.js",["1392","1393","1394","1395","1396","1397","1398","1399"],"import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport {\r\n  DIRECT_AND_THIRD_PARTY,\r\n  INCIDENT_REPORTS,\r\n  MASTER_DATA,\r\n  PAYMENT_TRANSACTION,\r\n  REPORTS,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { Products } from \"components/products\"\r\nimport { Reports } from \"Restructured/Components/Features\"\r\nimport DirectAndThirdParty from \"Restructured/Components/Features/DirectAndThirdParty\"\r\nimport IncidentReports from \"Restructured/Components/Features/IncidentReports\"\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([REPORTS, INCIDENT_REPORTS]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <IncidentReports />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\IncidentReports\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\Dashboard\\index.js",["1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418"],"import React, { useEffect, useState } from \"react\"\r\nimport ScheduleComponent from \"components/SchedulerComponent\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport {\r\n  GRILL_RESERVATION,\r\n  DASHBOARD,\r\n} from \"components/sideNav/2.menu/menuData\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport Backdrop from \"components/backdrop\"\r\nimport {\r\n  ToggleBody,\r\n  ToggleButton,\r\n  ToggleContainer,\r\n} from \"Restructured/Styles/toggleableContainer\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport { FilteringPanel } from \"Restructured/Components/Features\"\r\nimport { Button } from \"antd\"\r\nimport ScheduleServices from \"Restructured/Services/SchedulerServices\"\r\nimport ProductServices from \"Restructured/Services/ProductServices\"\r\nimport DropdownServices from \"Restructured/Services/DropdownServices\"\r\nimport datas from \"./datas\"\r\nimport { Progress } from \"@ant-design/charts\"\r\nimport { addData } from \"services\"\r\nimport {\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { DATE_PAYMENT } from \"components/PaymentDetails/types\"\r\nimport { formatDateFromDatabase } from \"Restructured/Utilities/dateFormat\"\r\nconst dataProduced = datas()\r\nfunction Dashboard() {\r\n  const dispatch = useDispatch()\r\n  const [isToggled, setIsToggled] = useState(true)\r\n  const [toggle, setToggle] = useState(true)\r\n  const [loading, setLoading] = useState(false)\r\n  const [percent, setPercent] = useState(100)\r\n  const [success, setSuccess] = useState(0)\r\n  const [errorList, setErrorList] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([DASHBOARD]))\r\n  }, [])\r\n\r\n  const handleScheduler = async () => {\r\n    const data = await DropdownServices.getDropdownList()\r\n    console.log(\"data\", JSON.stringify(data))\r\n  }\r\n\r\n  const handleImport = async () => {\r\n    const renewedData = []\r\n    let count = 1\r\n    let error = []\r\n    for (const obj of dataProduced.schedules) {\r\n      const startD = formatDateFromDatabase(obj[DATE_START])\r\n      const endD = formatDateFromDatabase(obj[DATE_END])\r\n      const ordD = formatDateFromDatabase(obj[DATE_ORDER_PLACED])\r\n      const datePaid =\r\n        typeof obj[DATE_PAYMENT] === \"undefined\"\r\n          ? null\r\n          : formatDateFromDatabase(obj[DATE_ORDER_PLACED])\r\n      // renewedData.push({\r\n      //   ...obj,\r\n      //   [DATE_END]: startD,\r\n      //   [DATE_START]: endD,\r\n      //   [DATE_ORDER_PLACED]: ordD,\r\n      //   [DATE_PAYMENT]: datePaid,\r\n      // })\r\n\r\n      const renewedObj = {\r\n        ...obj,\r\n        [DATE_END]: startD,\r\n        [DATE_START]: endD,\r\n        [DATE_ORDER_PLACED]: ordD,\r\n        [DATE_PAYMENT]: datePaid,\r\n      }\r\n      if (!renewedObj[DATE_PAYMENT]) {\r\n        delete renewedObj[DATE_PAYMENT]\r\n      }\r\n      const result = await addData({\r\n        data: { ...renewedObj },\r\n        collection: \"schedules\",\r\n      })\r\n\r\n      if (result) {\r\n        setSuccess(count)\r\n        calculatePercent(count)\r\n        count = count + 1\r\n      } else {\r\n        count = count + 1\r\n        error.push({ ...obj })\r\n      }\r\n    }\r\n    setErrorList(error)\r\n    console.log(\"error List\", error)\r\n  }\r\n\r\n  const calculatePercent = (count) => {\r\n    const data = (count / 267) * 100\r\n    setPercent(data.toFixed(0))\r\n  }\r\n\r\n  // console.log(\"success\", success)\r\n  // console.log(\"errors\", errorList)\r\n  // console.log(\"percent\", percent)\r\n  return (\r\n    <Wrapper>\r\n      {loading && <Backdrop />}\r\n      <Container>\r\n        <Sidenav\r\n          isToggled={toggle}\r\n          navigateTo={[DASHBOARD, GRILL_RESERVATION]}\r\n        />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <Grid height=\"90vh\" alignItems=\"center\">\r\n              <Flex justifyContent=\"center\">\r\n                {/* <Button onClick={handleScheduler}>Exclude</Button>\r\n                <Button onClick={handleImport}>Import</Button> */}\r\n                <p style={{ fontSize: \"2rem\" }}>Welcome to Vitos BBQ</p>\r\n              </Flex>\r\n              {/* <div>\r\n                <span>{dataProduced.schedules.length}</span>{\" \"}\r\n                <div style={{ height: \"10px\", width: \"500px\" }}>\r\n                  <Progress percent={percent} />\r\n                </div>\r\n                <br />\r\n                <span>{dataProduced.dropdowns.length}</span>\r\n                <br />\r\n                <span>{dataProduced.products.length}</span>\r\n                <br />\r\n              </div> */}\r\n            </Grid>\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\Print\\Documents\\incidentReportDocs.js",["1419","1420","1421","1422","1423","1424","1425","1426","1427"],"import React, { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { CODE, DESCRIPTION, QUANTITY } from \"Restructured/Constants/products\"\r\nimport { DATE_END, DATE_START } from \"Restructured/Constants/schedules\"\r\nimport { Grid } from \"Restructured/Styles\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\nimport FilteringPanelMethods from \"../../FilteringPanel/Controllers/FilteringPanelMethods\"\r\nimport PrintMethods from \"../Controllers/PrintMethods\"\r\n\r\nfunction IncidentReportDocs({ incidents }) {\r\n  useEffect(() => {}, [])\r\n\r\n  return (\r\n    <Grid padding=\"3rem\">\r\n      <Grid>\r\n        <h3>VITOS BBQ</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <h3>Incident Reports</h3>\r\n      </Grid>\r\n      <Grid>\r\n        <br />\r\n        <table>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Order #</th>\r\n            <th>Client name</th>\r\n            <th>Contact no</th>\r\n            <th>On duty</th>\r\n          </tr>\r\n          {incidents.map((data) => {\r\n            return (\r\n              <tr>\r\n                <th>{data?.date}</th>\r\n                <td>{data?.orderNo}</td>\r\n                <td>{data?.clientName}</td>\r\n                <td>{data?.contactNo}</td>\r\n                <td>{data?.onDuty}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </table>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default IncidentReportDocs\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\index.js",["1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438"],"import * as React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectTableSlice } from \"components/Table/tableSlice\"\r\nimport { addData, deleteData, updateData } from \"services\"\r\nimport { BRANCHES } from \"services/collectionNames\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport { CheckboxGroup, StyledTable, VerticalAutoScroll } from \"./styles\"\r\nimport { Select, Table, Tag } from \"antd\"\r\nimport { Input } from \"antd\"\r\nimport PartnerMerchantModal from \"./partnerMerchantModal\"\r\nimport { Option } from \"antd/lib/mentions\"\r\nimport {\r\n  BRANCH,\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_NO,\r\n  PARTNER_MERCHANT_ORDER_NO,\r\n} from \"Restructured/Constants/schedules\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  OTHERS_DEDUCTION,\r\n  SOURCE,\r\n} from \"components/PaymentDetails/types\"\r\nimport { QUANTITY } from \"Restructured/Constants/products\"\r\nimport PaymentTransactionPrint from \"./PaymentTransactionPrint\"\r\nimport GroupPayments from \"components/features/GroupPayments\"\r\nconst { Search } = Input\r\n\r\nconst plainOptions = [\r\n  \"NO STATUS\",\r\n  \"CONFIRMED\",\r\n  \"PENDING PAYMENT\",\r\n  \"PAID\",\r\n  \"REVISED / RESCHEDULED\",\r\n  \"CANCELLED\",\r\n  \"FULFILLED\",\r\n  \"INCIDENTS\",\r\n]\r\n\r\nconst columnRender = (value, record, checkValues, obj) => {\r\n  let _value = value\r\n  const { status } = record\r\n  const others = record?.others\r\n  let style = { color: \"#555\" }\r\n  if (status === \"PAID\" && checkValues.includes(status)) {\r\n    style.backgroundColor = \"transparent\"\r\n    style.color = \"black\"\r\n  } else if (status === \"PENDING PAYMENT\" && checkValues.includes(status)) {\r\n    style.backgroundColor = \"yellow\"\r\n    style.color = \"black\"\r\n  } else if (status === \"CONFIRMED\" && checkValues.includes(status)) {\r\n    style.backgroundColor = \"lightblue\"\r\n    style.color = \"black\"\r\n  } else if (status === \"CANCELLED\" && checkValues.includes(status)) {\r\n    style.backgroundColor = \"orange\"\r\n    style.color = \"black\"\r\n  } else if (status === \"FULFILLED\" && checkValues.includes(status)) {\r\n    style.backgroundColor = \"transparent\"\r\n    style.color = \"black\"\r\n  } else {\r\n    style.backgroundColor = \"transparent\"\r\n    style.color = \"black\"\r\n  }\r\n\r\n  if (obj?.field === \"totalAmountPaid\" || obj?.field === \"othersDeduction\") {\r\n    _value = Number(value).toFixed(2)\r\n  }\r\n  if (typeof others !== \"undefined\") {\r\n    if (others?.Incidents && checkValues.includes(\"INCIDENTS\")) {\r\n      style.backgroundColor = \"#444\"\r\n      style.color = \"white\"\r\n    }\r\n  }\r\n  return <Tag style={style}>{_value}</Tag>\r\n}\r\nconst PaymentTransactionTable = (props) => {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const [checkboxValues, setCheckboxValues] = React.useState([...plainOptions])\r\n  const [dataSource, setDataSource] = React.useState([])\r\n  const [dataList, setDataList] = React.useState([]) // this is for payment transaction filter\r\n  const [isFilteredClicked, setIsFilteredClicked] = React.useState(false)\r\n  const [columns, setColumns] = React.useState([])\r\n  const [searchDropdown, setSearchDropdown] = React.useState(\r\n    \"partnerMerchantOrderNo\"\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    loadData(checkboxValues)\r\n  }, [tableSlice])\r\n\r\n  const onChange = (checkedValues) => {\r\n    loadData(checkedValues)\r\n    setCheckboxValues(checkedValues)\r\n  }\r\n\r\n  const productColumnWidths = (key, headerText = \"\") => {\r\n    console.log(\"S\", key)\r\n    if (key === DATE_START) {\r\n      return [\r\n        \"10rem\",\r\n        <>\r\n          <span>ORDER</span>\r\n          <br />\r\n          <span>DATE/TIME:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === DATE_ORDER_PLACED) {\r\n      return [\r\n        \"10rem\",\r\n        <>\r\n          <span>DATE/TIME</span>\r\n          <br />\r\n          <span>PLACED:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === ORDER_NO) {\r\n      return [\r\n        \"10rem\",\r\n        <>\r\n          <span>ORDER</span>\r\n          <br />\r\n          <span>#:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === CUSTOMER) {\r\n      return [\"10rem\", \"CUSTOMER:\"]\r\n    }\r\n    if (key === CONTACT_NUMBER) {\r\n      return [\r\n        \"5rem\",\r\n        <>\r\n          <span>CONTACT</span>\r\n          <br />\r\n          <span>#:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === \"totalQty\") {\r\n      return [\"5rem\", \"QTY:\"]\r\n    }\r\n    if (key === \"totalDue\") {\r\n      return [\"6rem\", \"AMT:\"]\r\n    }\r\n    if (key === DATE_PAYMENT) {\r\n      return [\r\n        \"6rem\",\r\n        <>\r\n          <span>DATE</span>\r\n          <br />\r\n          <span>PAID:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === MODE_PAYMENT) {\r\n      return [\"5rem\", \"MOP:\"]\r\n    }\r\n    if (key === SOURCE) {\r\n      return [\"5rem\", headerText.toUpperCase() + \":\"]\r\n    }\r\n    if (key === ACCOUNT_NUMBER) {\r\n      return [\r\n        \"7rem\",\r\n        <>\r\n          <span>RECEIVING</span>\r\n          <br />\r\n          <span>ACCT:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === \"totalAmountPaid\") {\r\n      return [\r\n        \"6rem\",\r\n        <>\r\n          <span>PAID</span>\r\n          <br />\r\n          <span>AMT:</span>\r\n        </>,\r\n      ]\r\n    }\r\n    if (key === OTHERS_DEDUCTION) {\r\n      return [\"6rem\", \"OTHERS/ DEDUCTIONS:\"]\r\n    }\r\n    return [\"8rem\", headerText.toUpperCase() + \":\"]\r\n  }\r\n\r\n  const loadData = (checkValues, searchValue) => {\r\n    const _columns = []\r\n\r\n    if (searchValue) {\r\n      _columns.push({\r\n        title: \"Partner Merchant\".toUpperCase(),\r\n        key: \"orderViaPartner\",\r\n        dataIndex: \"orderViaPartner\",\r\n        width: \"15rem\",\r\n        fixed: \"left\",\r\n        render: (value, record) => {\r\n          return columnRender(value, record, checkValues, {\r\n            field: \"orderViaPartner\",\r\n          })\r\n        },\r\n      })\r\n      _columns.push({\r\n        title: \"Partner Merchant Order #\".toUpperCase(),\r\n        key: \"partnerMerchantOrderNo\",\r\n        dataIndex: \"partnerMerchantOrderNo\",\r\n        width: \"15rem\",\r\n        fixed: \"left\",\r\n        render: (value, record) => {\r\n          return columnRender(value, record, checkValues, {\r\n            field: \"partnerMerchantOrderNo\",\r\n          })\r\n        },\r\n      })\r\n    }\r\n\r\n    for (const obj of tableSlice?.headers) {\r\n      _columns.push({\r\n        title: productColumnWidths(obj?.field, obj?.headerText)[1],\r\n        key: obj?.field,\r\n        dataIndex: obj?.field,\r\n        align: \"center\",\r\n        width: productColumnWidths(obj?.field)[0],\r\n        // fixed: obj?.field === \"StartTime\" ? \"left\" : \"none\",\r\n        render: (value, record) => {\r\n          return columnRender(value, record, checkValues, obj)\r\n        },\r\n      })\r\n    }\r\n\r\n    // filtered dataList or all data\r\n    const _dataList = []\r\n    for (const obj of tableSlice?.dataList) {\r\n      if (obj?.partnerMerchantOrderNo.includes(searchValue)) {\r\n        _dataList.push(obj)\r\n      }\r\n    }\r\n    if (searchValue) {\r\n      setColumns(_columns)\r\n      setDataSource(_dataList)\r\n    } else {\r\n      setColumns(_columns)\r\n      setDataSource(tableSlice?.dataList)\r\n    }\r\n  }\r\n\r\n  const onSearch = (value) => {\r\n    loadData(checkboxValues, value.toUpperCase())\r\n  }\r\n\r\n  const search = (value) => {\r\n    const _dataList = []\r\n    if (searchDropdown === BRANCH) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (obj[BRANCH].includes(value)) {\r\n          _dataList.push(obj)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (searchDropdown === ORDER_NO) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (obj[ORDER_NO].includes(value)) {\r\n          _dataList.push(obj)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (searchDropdown === CUSTOMER) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (obj[CUSTOMER].includes(value)) {\r\n          _dataList.push(obj)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (searchDropdown === MODE_PAYMENT) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (typeof obj[MODE_PAYMENT] !== \"undefined\") {\r\n          if (obj[MODE_PAYMENT].includes(value)) {\r\n            _dataList.push(obj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (searchDropdown === SOURCE) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (typeof obj[SOURCE] !== \"undefined\") {\r\n          if (obj[SOURCE].includes(value)) {\r\n            _dataList.push(obj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (searchDropdown === ACCOUNT_NUMBER) {\r\n      for (const obj of tableSlice?.dataList) {\r\n        if (typeof obj[ACCOUNT_NUMBER] !== \"undefined\") {\r\n          if (obj[ACCOUNT_NUMBER].includes(value)) {\r\n            _dataList.push(obj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setDataSource(_dataList)\r\n  }\r\n\r\n  console.log(\"pikoy\", dataList)\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid padding=\"1rem\">\r\n          <Flex>\r\n            <div style={{ flex: 1 }}>\r\n              <PaymentTransactionPrint\r\n                dataList={dataList}\r\n                setDataList={setDataList}\r\n                setIsFilteredClicked={setIsFilteredClicked}\r\n                isFilteredClicked={isFilteredClicked}\r\n              />\r\n              {/* <CheckboxGroup\r\n                options={plainOptions}\r\n                value={checkboxValues}\r\n                onChange={onChange}\r\n                styles={{ color: \"red\" }}\r\n              /> */}\r\n            </div>\r\n            <div style={{ backgroundColor: \"red\" }}>\r\n              <Select\r\n                value={searchDropdown}\r\n                style={{ minWidth: \"17rem\", width: \"1rem\" }}\r\n                onChange={(value) => {\r\n                  setSearchDropdown(value)\r\n                  loadData(checkboxValues)\r\n                }}\r\n              >\r\n                {[\r\n                  {\r\n                    title: \"PARTNER MERCHANT ORDER #\",\r\n                    key: PARTNER_MERCHANT_ORDER_NO,\r\n                  },\r\n                  { title: \"ORDER #\", key: ORDER_NO },\r\n                  { title: \"CUSTOMER NAME\", key: CUSTOMER },\r\n                  { title: \"MODE PAYMENT\", key: MODE_PAYMENT },\r\n                  { title: \"SOURCE\", key: SOURCE },\r\n                  { title: \"ACCOUNT NUMBER\", key: ACCOUNT_NUMBER },\r\n                ].map((row) => {\r\n                  return <Option value={row.key}>{row.title}</Option>\r\n                })}\r\n              </Select>\r\n            </div>\r\n            <div>\r\n              <Search\r\n                placeholder=\"Partner Merch Order #\"\r\n                onChange={(e) => {\r\n                  if (e.target.value === \"\") {\r\n                    loadData(checkboxValues)\r\n                  }\r\n                }}\r\n                onSearch={(value) => {\r\n                  if (searchDropdown === PARTNER_MERCHANT_ORDER_NO) {\r\n                    onSearch(value)\r\n                  } else {\r\n                    search(value)\r\n                  }\r\n                }}\r\n                style={{ width: 200 }}\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* <PartnerMerchantModal columns={columns} /> */}\r\n              <GroupPayments />\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n        <Grid padding=\"1rem\">\r\n          <VerticalAutoScroll>\r\n            <StyledTable\r\n              pagination={{\r\n                size: \"small\",\r\n                defaultPageSize: 20,\r\n              }}\r\n              onRow={(record) => {\r\n                return {\r\n                  onDoubleClick: (event) => {\r\n                    props.rowSelected(record)\r\n                  },\r\n                }\r\n              }}\r\n              size=\"small\"\r\n              dataSource={isFilteredClicked ? dataList : dataSource}\r\n              columns={columns}\r\n              scroll={{ y: 690 }}\r\n            />\r\n          </VerticalAutoScroll>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\nexport default PaymentTransactionTable\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\partnerMerchantModal.js",["1439","1440","1441","1442","1443","1444","1445","1446","1447","1448"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button, Select, Input, DatePicker, Table } from \"antd\"\r\nimport { Flex, Grid } from \"Restructured/Styles\"\r\nimport { RangePicker } from \"Restructured/Components/Commons\"\r\nimport db from \"services/firebase\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateFromDatabase,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"containers/0.login/loginSlice\"\r\nimport { StyledTable, VerticalAutoScroll } from \"./styles\"\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\"\r\nimport { selectTableSlice } from \"components/Table/tableSlice\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\nimport { update, updateData } from \"services\"\r\nimport Print from \"../Print\"\r\nimport { AiFillPrinter } from \"react-icons/ai\"\r\nconst { Search } = Input\r\n\r\nconst PartnerMerchantModal = ({ columns }) => {\r\n  const tableSlice = useSelector(selectTableSlice)\r\n  const userSlice = useSelector(selectUserSlice)\r\n  const [visible, setVisible] = useState(false)\r\n  const [dates, setDates] = useState([])\r\n  const [branch, setBranch] = useState(\"Ronac\")\r\n  const [dataFetched, setDataFetched] = useState([])\r\n  const [dataFiltered, setDataFiltered] = useState([])\r\n  const [branchDatasource, setBranchDatasource] = useState([])\r\n  const [checkedIds, setCheckedIds] = useState([])\r\n  const [refNo, setRefNo] = useState(\"\")\r\n  const [datePaid, setDatePaid] = useState(new Date())\r\n  const [newColumns, setNewColumns] = useState([])\r\n\r\n  const checkedChange = (e, id, record) => {\r\n    // this is to retain the data saved from database once unchecked\r\n    const _totalAmountSaved = dataFiltered.find((data) => data._id == id)\r\n      ?.datePayment\r\n      ? record.totalAmountPaid\r\n      : 0\r\n\r\n    if (record?.totalDue) {\r\n      const withPercent = Number(record?.totalDue) * 0.05\r\n\r\n      const totalAmountPaid = Number(record?.totalDue) - (withPercent + 10)\r\n\r\n      const updatedData = {\r\n        modePayment: \"Zap\",\r\n        source: \"Zap\",\r\n        accountNumber: \"BDO / 609\",\r\n        totalAmountPaid: totalAmountPaid,\r\n      }\r\n      const _dataIndex = dataFiltered.findIndex((dataRow) => dataRow._id === id)\r\n      const _dataRow = { ...dataFiltered[_dataIndex], ...updatedData }\r\n      const _dataFiltered = [...dataFiltered]\r\n      if (e.target.checked) {\r\n        const _checkedIds = [...checkedIds]\r\n        _checkedIds.push(id)\r\n        setCheckedIds(_checkedIds)\r\n        _dataFiltered[_dataIndex] = _dataRow\r\n      } else {\r\n        const _checkedIds = [...checkedIds]\r\n        const checkedIdsIndex = _checkedIds.indexOf(id)\r\n        _checkedIds.splice(checkedIdsIndex, 1)\r\n\r\n        setCheckedIds(_checkedIds)\r\n        _dataFiltered[_dataIndex] = {\r\n          ..._dataRow,\r\n          datePayment: \"\",\r\n          refNo: \"\",\r\n          modePayment: \"\",\r\n          source: \"\",\r\n          accountNumber: \"\",\r\n          totalAmountPaid: _totalAmountSaved,\r\n        }\r\n      }\r\n      console.log(refNo, datePaid)\r\n      setDataFiltered(_dataFiltered)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const _newColumns = [\r\n      {\r\n        title: \"\",\r\n        key: \"_id\",\r\n        dataIndex: \"_id\",\r\n        width: \"3rem\",\r\n        fixed: \"left\",\r\n        render: (id, record) => {\r\n          return (\r\n            <div style={{ backgroundColor: \"pink\" }}>\r\n              <Checkbox\r\n                checked={record.datePayment || checkedIds.includes(id)}\r\n                onChange={(e) => {\r\n                  if (!record?.datePayment || checkedIds.includes(id)) {\r\n                    checkedChange(e, id, record)\r\n                  }\r\n                }}\r\n              ></Checkbox>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    ]\r\n\r\n    if (_newColumns.length === 1) {\r\n      for (const obj of columns) {\r\n        console.log(\"key\", obj.key)\r\n        if (\r\n          obj.key === \"StartTime\" ||\r\n          obj.key === \"branch\" ||\r\n          obj.key === \"orderNo\" ||\r\n          obj.key === \"customer\" ||\r\n          obj.key === \"contactNo\" ||\r\n          obj.key === \"totalDue\" ||\r\n          obj.key === \"totalAmountPaid\" ||\r\n          obj.key === \"totalQty\"\r\n        ) {\r\n          if (obj.key === \"StartTime\") {\r\n            _newColumns.push({\r\n              title: \"Partner Merch Order #\".toUpperCase(),\r\n              key: \"partnerMerchantOrderNo\",\r\n              dataIndex: \"partnerMerchantOrderNo\",\r\n              width: \"10rem\",\r\n              fixed: \"left\",\r\n            })\r\n          }\r\n          console.log(\"newColumns\", _newColumns)\r\n          _newColumns.push({\r\n            ...obj,\r\n            render:\r\n              obj.key === \"totalAmountPaid\"\r\n                ? (data, record) => {\r\n                    console.log(\"triggered\", data)\r\n                    return data === \"0\" || data === \"0.00\" || data === 0 ? (\r\n                      <div\r\n                        style={{\r\n                          color: \"red\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\",\r\n                        }}\r\n                      >\r\n                        <p>{data.toFixed(2)}</p>\r\n                      </div>\r\n                    ) : (\r\n                      <Input\r\n                        type=\"number\"\r\n                        value={data}\r\n                        onChange={(e) => {\r\n                          // find index of dataFiltered\r\n                          const _dataIndex = dataFiltered.findIndex(\r\n                            (row) => row._id === record._id\r\n                          )\r\n                          // copy of dataFiltered\r\n                          const _dataFiltered = [...dataFiltered]\r\n                          // set new object to datafiltered index\r\n                          _dataFiltered[_dataIndex] = {\r\n                            ...record,\r\n                            totalAmountPaid: e.target.value,\r\n                          }\r\n                          // set new dataFiltered\r\n                          setDataFiltered(_dataFiltered)\r\n                          // push this id check to list of checkedIds to be included to submission update\r\n                          const _checkIds = [...checkedIds]\r\n                          !_checkIds.includes(record._id) &&\r\n                            _checkIds.push(record._id)\r\n                          setCheckedIds(_checkIds)\r\n                        }}\r\n                      />\r\n                    )\r\n                  }\r\n                : obj.render,\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    setNewColumns(_newColumns)\r\n  }, [columns, dataFiltered, visible])\r\n\r\n  useEffect(() => {\r\n    if (!visible) {\r\n      setDataFiltered([])\r\n      setDataFetched([])\r\n      setDates([])\r\n      setRefNo(\"\")\r\n      setDatePaid(\"\")\r\n      setNewColumns([])\r\n      setCheckedIds([])\r\n    }\r\n  }, [visible])\r\n\r\n  const getDataByDate = ({ dates, orderViaPartner }) => {\r\n    if (!dates) return\r\n    if (dates.length > 0) {\r\n      const MS_PER_MINUTE = 60000\r\n      const startTime = new Date(dates[0]?._d)\r\n      const endTime = new Date(dates[1]?._d)\r\n      const _dateFrom = new Date(startTime - 30 * MS_PER_MINUTE)\r\n      const _dateTo = new Date(endTime - 30 * MS_PER_MINUTE)\r\n      db.collection(\"schedules\")\r\n        .where(\"StartTime\", \">=\", _dateFrom)\r\n        .where(\"StartTime\", \"<=\", _dateTo)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const _dataFetched = []\r\n          querySnapshot.forEach((doc) => {\r\n            const _data = doc.data()\r\n            const _startTime = formatDateFromDatabase(_data.StartTime)\r\n            const _endTime = formatDateFromDatabase(_data.EndTime)\r\n            const _dateOrderedPlaced = formatDateFromDatabase(\r\n              _data.dateOrderPlaced\r\n            )\r\n            const _getAmountPaidQtyAndTotal = tableSlice?.dataList.find(\r\n              (rowData) => rowData._id === doc.id\r\n            )\r\n            _dataFetched.push({\r\n              ..._data,\r\n              _id: doc.id,\r\n              StartTime: formatDateDash(_startTime),\r\n              EndTime: formatDateDash(_endTime),\r\n              dateOrderPlaced: formatDateDash(_dateOrderedPlaced),\r\n              totalDue: _getAmountPaidQtyAndTotal?.totalAmount,\r\n              totalQty: _getAmountPaidQtyAndTotal?.totalQty,\r\n              totalAmountPaid: _getAmountPaidQtyAndTotal?.totalAmountPaid,\r\n            })\r\n          })\r\n          setDataFetched(_dataFetched)\r\n\r\n          const args = {\r\n            branch,\r\n            dataFetched: [..._dataFetched],\r\n          }\r\n          const _orders = args?.dataFetched.filter(\r\n            (data) =>\r\n              data.orderViaPartner &&\r\n              data.orderViaPartner.includes(orderViaPartner.toUpperCase())\r\n          )\r\n          console.log(\"_orders\", orderViaPartner)\r\n          console.log(\"_orders\", _orders)\r\n          setDataFiltered(_orders)\r\n        })\r\n    }\r\n  }\r\n\r\n  // const getDataByBranch = (value) => {\r\n  //   setBranch(value)\r\n  //   if (dataFetched.length > 0) {\r\n  //     const args = {\r\n  //       branch: value,\r\n  //       dataFetched: [...dataFetched],\r\n  //     }\r\n  //     const _orders = args?.dataFetched.filter(\r\n  //       (data) => data.branch === args.value\r\n  //     )\r\n  //     setDataFiltered(_orders)\r\n  //   }\r\n  // }\r\n\r\n  const handleSubmit = () => {\r\n    for (const obj of dataFiltered) {\r\n      const dataToBeSend = {\r\n        datePayment: datePaid,\r\n        modePayment: obj.modePayment,\r\n        source: obj.source,\r\n        accountNumber: obj.accountNumber,\r\n        amountPaid: obj.totalAmountPaid,\r\n        datePayment: datePaid,\r\n        refNo: refNo,\r\n      }\r\n      if (checkedIds.includes(obj._id)) {\r\n        updateData({ data: dataToBeSend, collection: \"schedules\", id: obj._id })\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={() => setVisible(true)} danger>\r\n        Add Group Payment\r\n      </Button>\r\n      <Modal\r\n        title=\"Add Group Payment\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => {\r\n          if (checkedIds.length > 0) {\r\n            if (datePaid && refNo) {\r\n              handleSubmit()\r\n              setVisible(false)\r\n            } else {\r\n              alert(\"Please provide a Ref number and Payment date\")\r\n            }\r\n          }\r\n        }}\r\n        onCancel={() => setVisible(false)}\r\n        width={2000}\r\n      >\r\n        <Grid>\r\n          {/* <Select\r\n            label=\"Branch\"\r\n            dataSource={branchDatasource}\r\n            value={branch}\r\n            onChange={(value) => getDataByBranch(value)}\r\n          /> */}\r\n\r\n          <Flex>\r\n            <RangePicker\r\n              showTime={false}\r\n              label=\"Date\"\r\n              value={dates}\r\n              format=\"MM/DD/YYYY\"\r\n              onChange={(value) => {\r\n                setDates(value)\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n            >\r\n              <label>Partner Merchant</label>\r\n              <Search\r\n                placeholder=\"Partner Merch Order #\"\r\n                onSearch={(value) => {\r\n                  getDataByDate({ dates: dates, orderViaPartner: value })\r\n                }}\r\n                style={{ width: 200 }}\r\n              />\r\n            </div>\r\n          </Flex>\r\n          <br />\r\n          <Flex>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <label>Ref No:</label>\r\n              <Input\r\n                value={refNo}\r\n                onChange={(e) => {\r\n                  setRefNo(e.target.value)\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n            >\r\n              <label>Date Payment:</label>\r\n              <DatePicker\r\n                onChange={(e, dateString) => {\r\n                  setDatePaid(new Date(dateString))\r\n                }}\r\n              />\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n        <Grid padding=\"1rem\">\r\n          <VerticalAutoScroll>\r\n            <StyledTable\r\n              size=\"medium\"\r\n              dataSource={dataFiltered}\r\n              columns={newColumns}\r\n              scroll={{ x: 1500, y: 1500 }}\r\n            />\r\n          </VerticalAutoScroll>\r\n        </Grid>\r\n        <Grid>\r\n          <Flex padding=\"1rem\">\r\n            <div style={{ flex: 1 }}>{`Records: ${dataFiltered.length}`}</div>\r\n            <div>{`Grand Total: ${sumArray(\r\n              dataFiltered,\r\n              \"totalAmountPaid\"\r\n            ).toFixed(2)}`}</div>\r\n          </Flex>\r\n        </Grid>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Print\r\n            component={\r\n              <div>\r\n                <Grid padding=\"1rem 2rem\">\r\n                  <h3>ZAP</h3>\r\n                  <div style={{ marginLeft: \"-2rem\" }}>\r\n                    <Table\r\n                      size=\"small\"\r\n                      pagination={false}\r\n                      dataSource={dataFiltered}\r\n                      columns={newColumns.map((data) => {\r\n                        if (data.key === \"_id\") {\r\n                          return {}\r\n                        } else {\r\n                          return data\r\n                        }\r\n                      })}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n            }\r\n            button={<AiFillPrinter fontSize=\"2.5rem\" />}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PartnerMerchantModal\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\10.dailyReports\\index.js",["1449","1450"],"import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"components/appBar\"\r\nimport { Wrapper, Container, RightContent } from \"../styles\"\r\nimport Sidenav from \"components/sideNav\"\r\nimport Animate, { FadeIn } from \"animate-css-styled-components\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { navigateTo } from \"components/sideNav/sideNavSlice\"\r\nimport { DAILY_REPORTS, REPORTS } from \"components/sideNav/2.menu/menuData\"\r\nimport DailyReports from \"Restructured/Components/Features/DailyReport\"\r\n\r\nexport default function (props) {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  useEffect(() => {\r\n    dispatch(navigateTo([REPORTS, DAILY_REPORTS]))\r\n  }, [])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Sidenav isToggled={toggle} />\r\n        <RightContent isToggled={toggle}>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.2s\"]}>\r\n            <AppBar isToggled={toggle} toggle={() => setToggle(!toggle)} />\r\n            <DailyReports />\r\n          </Animate>\r\n        </RightContent>\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\dailyReportType.js",["1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466"],"import { Button, DatePicker, Input, Switch, Table, Tag } from \"antd\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  TOTAL_DUE,\r\n} from \"components/PaymentDetails/types\"\r\nimport moment from \"moment\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport {\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport DropdownServices from \"Restructured/Services/DropdownServices\"\r\nimport { Flex, Grid, Item } from \"Restructured/Styles\"\r\nimport {\r\n  formatDateFromDatabase,\r\n  formatDateLong,\r\n  formatDateSlash,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport {\r\n  AiFillCaretLeft,\r\n  AiFillCaretRight,\r\n  AiFillPrinter,\r\n  AiOutlineArrowLeft,\r\n} from \"react-icons/ai\"\r\nimport addMinusDay from \"Restructured/Utilities/addMinusDay\"\r\nimport thousandsSeparators from \"Restructured/Utilities/formatNumber\"\r\nimport {\r\n  ORDER_NO,\r\n  ORDER_VIA_PARTNER,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport LiquidChart from \"../LiquidChart\"\r\nimport sumArray, {\r\n  sumArrayDatas,\r\n  sumArrayOfObjectsGrouping,\r\n} from \"Restructured/Utilities/sumArray\"\r\nimport checkDate from \"Restructured/Utilities/checkDate\"\r\nimport Print from \"Restructured/Components/Features/Print\"\r\nconst { RangePicker } = DatePicker\r\n\r\nconst dateFormat = (date) => {\r\n  return moment(date, \"MM/DD/YYYY\")\r\n}\r\nfunction DailyReportType({ Services, filterBasis, title, back }) {\r\n  const [date, setDate] = useState(dateFormat(new Date()))\r\n  const [dateTo, setDateTo] = useState(dateFormat(new Date()))\r\n  const [dropdowns, setDropdowns] = useState([])\r\n  const [dataList, setDataList] = useState([])\r\n  const [subTotalOfDataList, setSubTotalOfDataList] = useState([])\r\n  const [subTotalOfOrderVia, setSubTotalOfOrderVia] = useState([])\r\n  const [subTotalOfSources, setSubTotalOfSources] = useState([])\r\n  const [grandTotalDue, setGrandTotalDue] = useState(0)\r\n  const [grandAmountPaid, setGrandAmountPaid] = useState(0)\r\n  const [targetAmount, setTargetAmount] = useState(0)\r\n  const [isSwitch, setIsSwitch] = useState(true)\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [Services, date, dateTo])\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [Services])\r\n\r\n  const loadDropdowns = async () => {\r\n    if (typeof filterBasis === \"object\") {\r\n      setIsSwitch(false)\r\n      let dropdowns = []\r\n      for (const value of filterBasis) {\r\n        const _dropdowns = await DropdownServices.getDropdowns(value)\r\n        if (_dropdowns?.list) {\r\n          dropdowns = [...dropdowns, ..._dropdowns?.list]\r\n        }\r\n      }\r\n      setDropdowns(dropdowns)\r\n    } else {\r\n      const dropdowns = await DropdownServices.getDropdowns(filterBasis)\r\n      if (dropdowns?.list) {\r\n        setDropdowns(dropdowns?.list)\r\n      }\r\n    }\r\n  }\r\n\r\n  const loadData = async () => {\r\n    if (dropdowns.length > 0) {\r\n      const Service = new Services()\r\n      const data = await Service.getSchedulesByDate(\r\n        [date._d, dateTo._d],\r\n        DATE_PAYMENT\r\n      )\r\n      let newData = data.filter((row) => dropdowns.includes(row[filterBasis]))\r\n      const formattedDataList = []\r\n      for (const obj of newData) {\r\n        const datePaid =\r\n          typeof obj[DATE_PAYMENT] === \"undefined\"\r\n            ? null\r\n            : formatDateFromDatabase(obj[DATE_PAYMENT])\r\n        const dateOrderPlaced = formatDateFromDatabase(obj[DATE_ORDER_PLACED])\r\n        if (datePaid) {\r\n          formattedDataList.push({\r\n            [ORDER_VIA]: obj[ORDER_VIA],\r\n            [SOURCE]: obj[SOURCE],\r\n            [ACCOUNT_NUMBER]: obj[ACCOUNT_NUMBER],\r\n            [TOTAL_DUE]: obj[TOTAL_DUE],\r\n            [CUSTOMER]: obj[CUSTOMER],\r\n            [ORDER_NO]: obj[ORDER_NO],\r\n            [DATE_PAYMENT]: formatDateSlash(datePaid),\r\n            [DATE_ORDER_PLACED]: formatDateSlash(dateOrderPlaced),\r\n            [AMOUNT_PAID]: obj[AMOUNT_PAID],\r\n          })\r\n        }\r\n      }\r\n      setDataList(formattedDataList)\r\n\r\n      // dataList sub total\r\n      const subtotalDue = sumArray(formattedDataList, TOTAL_DUE)\r\n      const subAmountPaid = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfDataList([\r\n        {\r\n          [DATE_PAYMENT]: \"\",\r\n          [DATE_ORDER_PLACED]: \"\",\r\n          [ORDER_NO]: \"\",\r\n          [CUSTOMER]: \"Sub Total\",\r\n          [TOTAL_DUE]: subtotalDue,\r\n          [AMOUNT_PAID]: subAmountPaid.toFixed(2),\r\n        },\r\n      ])\r\n\r\n      // orderVia sub total\r\n      const subAmountPaidOrderVia = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfOrderVia([\r\n        {\r\n          [ORDER_VIA]: \"Sub Total\",\r\n          [AMOUNT_PAID]: subAmountPaidOrderVia.toFixed(2),\r\n        },\r\n      ])\r\n\r\n      // sources sub total\r\n      const subAmountPaidSources = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfSources([\r\n        {\r\n          [ACCOUNT_NUMBER]: \"Sub Total\",\r\n          [AMOUNT_PAID]: subAmountPaidSources.toFixed(2),\r\n        },\r\n      ])\r\n\r\n      /// set the dataSources of SUMMARY OF SALES\r\n      const totalDue = sumArray([...newData], TOTAL_DUE)\r\n      const totalAmountPaid = sumArray([...newData], AMOUNT_PAID)\r\n      setGrandTotalDue(totalDue.toFixed(2))\r\n      setGrandAmountPaid(totalAmountPaid.toFixed(2))\r\n      setTargetAmount(totalDue.toFixed(2))\r\n    }\r\n  }\r\n\r\n  const calculatePercent = () => {\r\n    if (isSwitch) {\r\n      return grandAmountPaid / grandTotalDue\r\n    } else {\r\n      if (targetAmount) {\r\n        return grandAmountPaid / targetAmount\r\n      } else {\r\n        return grandAmountPaid / 0\r\n      }\r\n    }\r\n  }\r\n\r\n  const columnsOfOrders = [\r\n    {\r\n      title: \"DATE PAID\",\r\n      key: DATE_PAYMENT,\r\n      dataIndex: DATE_PAYMENT,\r\n    },\r\n    {\r\n      title: \"ORDER DATE\",\r\n      key: DATE_ORDER_PLACED,\r\n      dataIndex: DATE_ORDER_PLACED,\r\n    },\r\n    {\r\n      title: \"ORDER #\",\r\n      key: ORDER_NO,\r\n      dataIndex: ORDER_NO,\r\n    },\r\n    {\r\n      title: \"CUSTOMER\",\r\n      key: CUSTOMER,\r\n      dataIndex: CUSTOMER,\r\n    },\r\n    {\r\n      title: \"TOTAL DUE\",\r\n      key: TOTAL_DUE,\r\n      dataIndex: TOTAL_DUE,\r\n      align: \"right\",\r\n      render: (value) => {\r\n        return <a>{thousandsSeparators(value)}</a>\r\n      },\r\n    },\r\n    {\r\n      title: \"AMOUNT PAID\",\r\n      key: AMOUNT_PAID,\r\n      dataIndex: AMOUNT_PAID,\r\n      align: \"right\",\r\n      render: (value) => {\r\n        return <a>{thousandsSeparators(value)}</a>\r\n      },\r\n    },\r\n  ]\r\n\r\n  console.log(\"dataList\", dataList)\r\n  return (\r\n    <>\r\n      <div>\r\n        <Grid padding=\"1rem\">\r\n          <Flex justifyContent=\"center\">\r\n            <div style={{ padding: \"1rem\", flex: 1 }}>\r\n              <Button\r\n                icon={<AiOutlineArrowLeft />}\r\n                size=\"large\"\r\n                shape=\"circle\"\r\n                type=\"primary\"\r\n                danger\r\n                onClick={back}\r\n              />\r\n            </div>\r\n            <RangePicker\r\n              showTime={false}\r\n              value={[date, dateTo]}\r\n              format=\"MM/DD/YYYY\"\r\n              onChange={(date) => {\r\n                if (date) {\r\n                  setDate(date[0])\r\n                  setDateTo(date[1])\r\n                }\r\n              }}\r\n            />\r\n            <div style={{ padding: \"1rem\" }}>{formatDateLong(date._d)}</div>\r\n            <div style={{ padding: \"1rem\" }}>\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<AiFillCaretLeft />}\r\n                size=\"medium\"\r\n                onClick={() => {\r\n                  const _date = addMinusDay({\r\n                    action: \"minus\",\r\n                    date: date._d,\r\n                    days: 1,\r\n                  })\r\n                  setDate(dateFormat(_date))\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ padding: \"1rem\" }}>\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<AiFillCaretRight />}\r\n                size=\"medium\"\r\n                onClick={() => {\r\n                  const _date = addMinusDay({\r\n                    action: \"add\",\r\n                    date: date._d,\r\n                    days: 1,\r\n                  })\r\n                  setDate(dateFormat(_date))\r\n                }}\r\n              />\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n        <Grid padding=\" 1rem 4rem\">\r\n          <h1>{title}</h1>\r\n          <Table\r\n            dataSource={[...dataList, ...subTotalOfDataList]}\r\n            columns={columnsOfOrders}\r\n            pagination={false}\r\n          />\r\n        </Grid>\r\n        <Grid padding=\"1rem 4rem\">\r\n          <h1>SUMMARY OF SALES</h1>\r\n          <Flex alignItems=\"flex-start\">\r\n            <Item>\r\n              <Table\r\n                showHeader={false}\r\n                pagination={false}\r\n                dataSource={[\r\n                  ...sumArrayOfObjectsGrouping(\r\n                    dataList,\r\n                    ORDER_VIA,\r\n                    AMOUNT_PAID\r\n                  ),\r\n                  ...subTotalOfOrderVia,\r\n                ]}\r\n                columns={[\r\n                  {\r\n                    title: \"ORDER VIA\",\r\n                    key: \"orderVia\",\r\n                    dataIndex: \"orderVia\",\r\n                  },\r\n                  {\r\n                    title: \"AMOUNT PAID\",\r\n                    key: \"amountPaid\",\r\n                    dataIndex: \"amountPaid\",\r\n                    align: \"right\",\r\n                    render: (value) => {\r\n                      return <a>{thousandsSeparators(value)}</a>\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Item>\r\n            <Item>\r\n              <Table\r\n                showHeader={false}\r\n                pagination={false}\r\n                dataSource={[\r\n                  ...sumArrayOfObjectsGrouping(\r\n                    dataList,\r\n                    ACCOUNT_NUMBER,\r\n                    AMOUNT_PAID\r\n                  ),\r\n                  ...subTotalOfSources,\r\n                ]}\r\n                columns={[\r\n                  {\r\n                    title: \"SOURCES\",\r\n                    key: ACCOUNT_NUMBER,\r\n                    dataIndex: ACCOUNT_NUMBER,\r\n                  },\r\n                  {\r\n                    title: \"AMOUNT PAID\",\r\n                    key: \"amountPaid\",\r\n                    dataIndex: \"amountPaid\",\r\n                    align: \"right\",\r\n                    render: (value) => {\r\n                      return <a>{thousandsSeparators(value)}</a>\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Item>\r\n          </Flex>\r\n        </Grid>\r\n      </div>\r\n      {/* this is print */}\r\n      <div style={{ position: \"fixed\", right: 0, bottom: 0, padding: \"1rem\" }}>\r\n        <Print\r\n          component={\r\n            <div>\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead style={{ fontSize: \"10\", fontWeight: \"bolder\" }}>\r\n                  DIRECT ORDERS\r\n                </thead>\r\n                <tbody style={{ fontSize: \"8px\", width: \"100%\" }}>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontSize: \"8px\",\r\n                    }}\r\n                    border=\"1\"\r\n                  >\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      {columnsOfOrders.map((field) => {\r\n                        return <th>{field?.title}</th>\r\n                      })}\r\n                    </tr>\r\n                    {[...dataList].reverse().map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (index + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          {columnsOfOrders.map((field) => {\r\n                            return (\r\n                              <td\r\n                                align={\r\n                                  field.key === AMOUNT_PAID ||\r\n                                  field.key === TOTAL_DUE\r\n                                    ? \"right\"\r\n                                    : \"left\"\r\n                                }\r\n                              >\r\n                                {data[field.key]}\r\n                              </td>\r\n                            )\r\n                          })}\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                    {subTotalOfDataList.map((data) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (dataList.length + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          {columnsOfOrders.map((field) => {\r\n                            return (\r\n                              <td\r\n                                align={\r\n                                  field.key === AMOUNT_PAID ||\r\n                                  field.key === TOTAL_DUE\r\n                                    ? \"right\"\r\n                                    : \"left\"\r\n                                }\r\n                              >\r\n                                {data[field.key]}\r\n                              </td>\r\n                            )\r\n                          })}\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                </tbody>\r\n              </table>\r\n              <br />\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead style={{ fontSize: \"10\", fontWeight: \"bolder\" }}>\r\n                  SUMMARY OF SALES\r\n                </thead>\r\n                <tbody\r\n                  style={{ fontSize: \"8px\", display: \"flex\", width: \"100%\" }}\r\n                >\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontSize: \"8px\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                    border=\"1\"\r\n                  >\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      <th>ORDER VIA</th>\r\n                      <th>AMOUNT PAID</th>\r\n                    </tr>\r\n                    {[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ORDER_VIA,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfOrderVia,\r\n                    ].map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (index + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          <td>{data[ORDER_VIA]}</td>\r\n                          <td align=\"right\">{data[AMOUNT_PAID]}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                  <table style={{ width: \"100%\", fontSize: \"8px\" }} border=\"1\">\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      <th>RECEIVING ACCT</th>\r\n                      <th>AMOUNT PAID</th>\r\n                    </tr>\r\n                    {[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ACCOUNT_NUMBER,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfSources,\r\n                    ].map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (index + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          <td>{data[ACCOUNT_NUMBER]}</td>\r\n                          <td align=\"right\">{data[AMOUNT_PAID]}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          }\r\n          button={<AiFillPrinter fontSize=\"2.5rem\" />}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DailyReportType\r\n\r\n// <Grid padding=\" 1rem 4rem\">\r\n//   <div>\r\n//     <h6>VITOS BBQ DAILY REPORT</h6>\r\n//   </div>\r\n//   <br />\r\n//   <br />\r\n//   <br />\r\n//   <Grid>\r\n//     <h2>DIRECT ORDER</h2>\r\n//     <Table\r\n//       size=\"small\"\r\n//       dataSource={[...dataList, ...subTotalOfDataList]}\r\n//       columns={columnsOfOrders}\r\n//       pagination={false}\r\n//     />\r\n//   </Grid>\r\n//   <br />\r\n//   <br />\r\n//   <br />\r\n//   <Grid>\r\n//     <h2>SUMMARY OF SALES</h2>\r\n//     <Flex alignItems=\"flex-start\">\r\n//       <Table\r\n//         size=\"small\"\r\n//         showHeader={false}\r\n//         pagination={false}\r\n//         dataSource={[\r\n//           ...sumArrayOfObjectsGrouping(\r\n//             dataList,\r\n//             ORDER_VIA,\r\n//             AMOUNT_PAID\r\n//           ),\r\n//           ...subTotalOfOrderVia,\r\n//         ]}\r\n//         columns={[\r\n//           {\r\n//             title: \"ORDER VIA\",\r\n//             key: \"orderVia\",\r\n//             dataIndex: \"orderVia\",\r\n//           },\r\n//           {\r\n//             title: \"AMOUNT PAID\",\r\n//             key: \"amountPaid\",\r\n//             dataIndex: \"amountPaid\",\r\n//             align: \"right\",\r\n//             render: (value) => {\r\n//               return <a>{thousandsSeparators(value)}</a>\r\n//             },\r\n//           },\r\n//         ]}\r\n//       />\r\n//       <Table\r\n//         showHeader={false}\r\n//         pagination={false}\r\n//         size=\"small\"\r\n//         dataSource={[\r\n//           ...sumArrayOfObjectsGrouping(\r\n//             dataList,\r\n//             ORDER_VIA,\r\n//             AMOUNT_PAID\r\n//           ),\r\n//           ...subTotalOfSources,\r\n//         ]}\r\n//         columns={[\r\n//           {\r\n//             title: \"SOURCES\",\r\n//             key: \"source\",\r\n//             dataIndex: \"source\",\r\n//           },\r\n//           {\r\n//             title: \"AMOUNT PAID\",\r\n//             key: \"amountPaid\",\r\n//             dataIndex: \"amountPaid\",\r\n//             align: \"right\",\r\n//             render: (value) => {\r\n//               return <a>{thousandsSeparators(value)}</a>\r\n//             },\r\n//           },\r\n//         ]}\r\n//       />\r\n//     </Flex>\r\n//   </Grid>\r\n// </Grid>\r\n\r\n{\r\n  /* <Flex>\r\n                  <div style={{ flex: 1 }}>\r\n                    <h1>TOTAL AMOUNT PAID</h1>\r\n                  </div>\r\n                  {isSwitch ? (\r\n                    <span style={{ marginRight: \".5rem\" }}>Total Due</span>\r\n                  ) : (\r\n                    <span style={{ marginRight: \".5rem\" }}>Target Amount</span>\r\n                  )}\r\n                  <Switch\r\n                    checked={isSwitch}\r\n                    onChange={() => {\r\n                      setIsSwitch(!isSwitch)\r\n                    }}\r\n                  />\r\n                </Flex> */\r\n}\r\n{\r\n  /* <Flex>\r\n                  <LiquidChart percent={calculatePercent} />\r\n                  <div>\r\n                    <Tag color={isSwitch ? \"#2db7f5\" : \"\"}>\r\n                      {isSwitch ? \"Total Due\" : \"Target Amount\"}\r\n                    </Tag>\r\n                    {isSwitch ? (\r\n                      <div style={{ marginLeft: \".7rem\" }}>\r\n                        {thousandsSeparators(grandTotalDue)}\r\n                      </div>\r\n                    ) : (\r\n                      <div style={{ width: \"10rem\" }}>\r\n                        <Input\r\n                          value={targetAmount}\r\n                          bordered={false}\r\n                          onChange={(e) => setTargetAmount(e.target.value)}\r\n                          onBlur={(e) => {\r\n                            if (\r\n                              Number(e.target.value) < Number(grandAmountPaid)\r\n                            ) {\r\n                              setTargetAmount(grandAmountPaid)\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <br />\r\n                    <Tag color=\"#ff4d4f\">Amount Paid</Tag>\r\n                    <div style={{ marginLeft: \".7rem\" }}>\r\n                      {thousandsSeparators(grandAmountPaid)}\r\n                    </div>\r\n                  </div>\r\n                </Flex> */\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\index.js",["1467","1468","1469"],"import React, { useEffect, useState } from \"react\"\r\nimport DailyReportType from \"./dailyReportType\"\r\nimport { ORDER_VIA, ORDER_VIA_PARTNER } from \"Restructured/Constants/schedules\"\r\nimport ScheduleServices from \"Restructured/Services/SchedulerServices\"\r\nimport { Flex, Grid, Item } from \"Restructured/Styles\"\r\nimport { Card } from \"antd\"\r\nimport SalesImage from \"images/sales.jpg\"\r\nimport ServedReportType from \"./servedReportType\"\r\n\r\nconst { Meta } = Card\r\n\r\nfunction DailyReports() {\r\n  const [clickedReport, setClickedReport] = useState(null)\r\n  return (\r\n    <div>\r\n      {clickedReport === null && (\r\n        <>\r\n          <Grid padding=\"1rem\">\r\n            <h1>DAILY SALES REPORT</h1>\r\n          </Grid>\r\n          <Grid padding=\"1rem\" height=\"70vh\" alignItems=\"center\">\r\n            <Flex justifyContent=\"center\">\r\n              <Item>\r\n                <Card\r\n                  hoverable\r\n                  style={{ width: 240 }}\r\n                  cover={\r\n                    <img\r\n                      alt=\"sales-image\"\r\n                      src={SalesImage}\r\n                      onClick={() => {\r\n                        setClickedReport(\"DIRECT\")\r\n                      }}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta title=\"DIRECT ORDER\" description=\"Sales Report\" />\r\n                </Card>\r\n              </Item>\r\n              <Item>\r\n                <Card\r\n                  hoverable\r\n                  style={{ width: 240 }}\r\n                  cover={<img alt=\"sales-image\" src={SalesImage} />}\r\n                  onClick={() => {\r\n                    setClickedReport(\"SERVED\")\r\n                  }}\r\n                >\r\n                  <Meta title=\"SERVED ORDER\" description=\"Sales Report\" />\r\n                </Card>\r\n              </Item>\r\n            </Flex>\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      {clickedReport === \"DIRECT\" && (\r\n        <DailyReportType\r\n          Services={ScheduleServices}\r\n          filterBasis={ORDER_VIA}\r\n          title=\"DAILY SALES DIRECT ORDERS\"\r\n          back={() => setClickedReport(null)}\r\n        />\r\n      )}\r\n      {clickedReport === \"SERVED\" && (\r\n        <ServedReportType\r\n          Services={ScheduleServices}\r\n          filterBasis={[ORDER_VIA, ORDER_VIA_PARTNER]}\r\n          title=\"DAILY SALES SERVED ORDERS\"\r\n          back={() => setClickedReport(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DailyReports\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\addMinusDay.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\LiquidChart\\index.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\checkDate.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\DailyReport\\servedReportType.js",["1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488"],"import { Button, DatePicker, Input, Switch, Table, Tag } from \"antd\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  TOTAL_DUE,\r\n} from \"components/PaymentDetails/types\"\r\nimport moment from \"moment\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport {\r\n  CUSTOMER,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_VIA,\r\n  SOURCE,\r\n} from \"Restructured/Constants/schedules\"\r\nimport DropdownServices from \"Restructured/Services/DropdownServices\"\r\nimport { Flex, Grid, Item } from \"Restructured/Styles\"\r\nimport {\r\n  formatDateFromDatabase,\r\n  formatDateLong,\r\n  formatDateSlash,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport {\r\n  AiFillCaretLeft,\r\n  AiFillCaretRight,\r\n  AiFillPrinter,\r\n  AiOutlineArrowLeft,\r\n} from \"react-icons/ai\"\r\nimport addMinusDay from \"Restructured/Utilities/addMinusDay\"\r\nimport thousandsSeparators from \"Restructured/Utilities/formatNumber\"\r\nimport {\r\n  ORDER_NO,\r\n  ORDER_VIA_PARTNER,\r\n} from \"components/SchedulerComponent/orderSlip/types\"\r\nimport LiquidChart from \"../LiquidChart\"\r\nimport sumArray, {\r\n  sumArrayDatas,\r\n  sumArrayOfObjectsGrouping,\r\n} from \"Restructured/Utilities/sumArray\"\r\nimport checkDate from \"Restructured/Utilities/checkDate\"\r\nimport Print from \"Restructured/Components/Features/Print\"\r\nconst { RangePicker } = DatePicker\r\nconst dateFormat = (date) => {\r\n  return moment(date, \"MM/DD/YYYY\")\r\n}\r\nfunction ServedReportType({ Services, filterBasis, title, back }) {\r\n  const [date, setDate] = useState(dateFormat(new Date()))\r\n  const [dateTo, setDateTo] = useState(dateFormat(new Date()))\r\n  const [dropdowns, setDropdowns] = useState([])\r\n  const [dataList, setDataList] = useState([])\r\n  const [subTotalOfDataList, setSubTotalOfDataList] = useState([])\r\n  const [subTotalOfOrderVia, setSubTotalOfOrderVia] = useState([])\r\n  const [subTotalOfSources, setSubTotalOfSources] = useState([])\r\n  const [grandTotalDue, setGrandTotalDue] = useState(0)\r\n  const [grandAmountPaid, setGrandAmountPaid] = useState(0)\r\n  const [targetAmount, setTargetAmount] = useState(0)\r\n  const [isSwitch, setIsSwitch] = useState(true)\r\n  const [targets, setTargets] = useState([35000, 5000, 15000])\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [Services, date, dateTo])\r\n\r\n  useEffect(() => {\r\n    loadDropdowns()\r\n  }, [Services])\r\n\r\n  const loadDropdowns = async () => {\r\n    if (typeof filterBasis === \"object\") {\r\n      setIsSwitch(false)\r\n      let dropdowns = []\r\n      for (const value of filterBasis) {\r\n        const _dropdowns = await DropdownServices.getDropdowns(value)\r\n        if (_dropdowns?.list) {\r\n          dropdowns = [...dropdowns, ..._dropdowns?.list]\r\n        }\r\n      }\r\n      setDropdowns(dropdowns)\r\n    } else {\r\n      const dropdowns = await DropdownServices.getDropdowns(filterBasis)\r\n      if (dropdowns?.list) {\r\n        setDropdowns(dropdowns?.list)\r\n      }\r\n    }\r\n  }\r\n\r\n  const loadData = async () => {\r\n    if (dropdowns.length > 0) {\r\n      const Service = new Services()\r\n      const data = await Service.getSchedulesByDate([date._d, dateTo._d])\r\n      let newData = []\r\n      if (typeof filterBasis === \"object\") {\r\n        for (const value of filterBasis) {\r\n          const _data = data.filter((row) => dropdowns.includes(row[value]))\r\n          for (const obj of _data) {\r\n            if (typeof obj?.partials === \"object\") delete obj.partials\r\n            newData.push({\r\n              ...obj,\r\n              [ORDER_VIA]: obj[ORDER_VIA_PARTNER]\r\n                ? obj[ORDER_VIA_PARTNER]\r\n                : obj[ORDER_VIA],\r\n            })\r\n          }\r\n        }\r\n        console.log(\"newDDD\", newData)\r\n      } else {\r\n        newData = data.filter((row) => dropdowns.includes(row[filterBasis]))\r\n      }\r\n\r\n      /// set the dataSources of SALES DIRECT ORDERS TABLE\r\n      const formattedDataList = []\r\n      for (const obj of newData) {\r\n        const datePaid =\r\n          typeof obj[DATE_PAYMENT] === \"undefined\"\r\n            ? null\r\n            : formatDateFromDatabase(obj[DATE_PAYMENT])\r\n        const dateOrderPlaced = formatDateFromDatabase(obj[DATE_ORDER_PLACED])\r\n        const dateStart = formatDateFromDatabase(obj[DATE_START])\r\n        formattedDataList.push({\r\n          [ORDER_VIA]: obj[ORDER_VIA],\r\n          [SOURCE]: obj[SOURCE],\r\n          [TOTAL_DUE]: obj[TOTAL_DUE],\r\n          [ACCOUNT_NUMBER]: obj[ACCOUNT_NUMBER],\r\n          [CUSTOMER]: obj[CUSTOMER],\r\n          [ORDER_NO]: obj[ORDER_NO],\r\n          [DATE_PAYMENT]: datePaid ? formatDateSlash(datePaid) : 0,\r\n          [DATE_START]: formatDateSlash(dateStart),\r\n          [DATE_ORDER_PLACED]: formatDateSlash(dateOrderPlaced),\r\n          [AMOUNT_PAID]: datePaid ? obj[AMOUNT_PAID] : 0,\r\n        })\r\n      }\r\n      setDataList(formattedDataList)\r\n\r\n      // dataList sub total\r\n      const subtotalDue = sumArray(formattedDataList, TOTAL_DUE)\r\n      const subAmountPaid = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfDataList([\r\n        {\r\n          [DATE_PAYMENT]: \"\",\r\n          [DATE_ORDER_PLACED]: \"\",\r\n          [ORDER_NO]: \"\",\r\n          [CUSTOMER]: \"Sub Total\",\r\n          [TOTAL_DUE]: subtotalDue.toFixed(2),\r\n          [AMOUNT_PAID]: subAmountPaid.toFixed(2),\r\n        },\r\n      ])\r\n\r\n      // orderVia sub total\r\n      const subAmountPaidOrderVia = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfOrderVia([\r\n        {\r\n          [ORDER_VIA]: \"Sub Total\",\r\n          [AMOUNT_PAID]: subAmountPaidOrderVia.toFixed(2),\r\n        },\r\n      ])\r\n\r\n      // sources sub total\r\n      const subAmountPaidSources = sumArray(formattedDataList, AMOUNT_PAID)\r\n      setSubTotalOfSources([\r\n        {\r\n          [ACCOUNT_NUMBER]: \"Sub Total\",\r\n          [AMOUNT_PAID]: subAmountPaidSources,\r\n        },\r\n      ])\r\n\r\n      /// set the dataSources of SUMMARY OF SALES\r\n      const totalDue = sumArray([...newData], TOTAL_DUE)\r\n      const totalAmountPaid = sumArray([...newData], AMOUNT_PAID)\r\n      setGrandTotalDue(totalDue.toFixed(2))\r\n      setGrandAmountPaid(totalAmountPaid.toFixed(2))\r\n      setTargetAmount(totalDue.toFixed(2))\r\n    }\r\n  }\r\n\r\n  const calculatePercent = (paidValue, totalValue) => {\r\n    // if (isSwitch) {\r\n    return paidValue / totalValue\r\n    // } else {\r\n    //   if (targetAmount) {\r\n    //     return grandAmountPaid / targetAmount\r\n    //   } else {\r\n    //     return grandAmountPaid / 0\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  const columnsOfOrders = [\r\n    {\r\n      title: \"DATE SERVED\",\r\n      key: DATE_START,\r\n      dataIndex: DATE_START,\r\n    },\r\n    {\r\n      title: \"ORDER DATE\",\r\n      key: DATE_ORDER_PLACED,\r\n      dataIndex: DATE_ORDER_PLACED,\r\n    },\r\n    {\r\n      title: \"ORDER #\",\r\n      key: ORDER_NO,\r\n      dataIndex: ORDER_NO,\r\n    },\r\n    {\r\n      title: \"CUSTOMER\",\r\n      key: CUSTOMER,\r\n      dataIndex: CUSTOMER,\r\n    },\r\n    {\r\n      title: \"ORDER VIA\",\r\n      key: ORDER_VIA,\r\n      dataIndex: ORDER_VIA,\r\n    },\r\n    {\r\n      title: \"TOTAL DUE\",\r\n      key: TOTAL_DUE,\r\n      dataIndex: TOTAL_DUE,\r\n      align: \"right\",\r\n      render: (value) => {\r\n        return <a>{thousandsSeparators(value)}</a>\r\n      },\r\n    },\r\n    {\r\n      title: \"AMOUNT PAID\",\r\n      key: AMOUNT_PAID,\r\n      dataIndex: AMOUNT_PAID,\r\n      align: \"right\",\r\n      render: (value) => {\r\n        return <a>{thousandsSeparators(value)}</a>\r\n      },\r\n    },\r\n  ]\r\n\r\n  const getPageMargins = () => {\r\n    return `@page { margin: 1rem 1rem 1rem 1rem !important; }`\r\n  }\r\n  console.log(\"dataes\", dataList)\r\n  return (\r\n    <>\r\n      <div>\r\n        <Grid padding=\"1rem\">\r\n          <Flex justifyContent=\"center\">\r\n            <div style={{ padding: \"1rem\", flex: 1 }}>\r\n              <Button\r\n                icon={<AiOutlineArrowLeft />}\r\n                size=\"large\"\r\n                shape=\"circle\"\r\n                type=\"primary\"\r\n                danger\r\n                onClick={back}\r\n              />\r\n            </div>\r\n            <RangePicker\r\n              showTime={false}\r\n              value={[date, dateTo]}\r\n              format=\"MM/DD/YYYY\"\r\n              onChange={(date) => {\r\n                if (date) {\r\n                  setDate(date[0])\r\n                  setDateTo(date[1])\r\n                }\r\n              }}\r\n            />\r\n            <div style={{ padding: \"1rem\" }}>{formatDateLong(date._d)}</div>\r\n            <div style={{ padding: \"1rem\" }}>\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<AiFillCaretLeft />}\r\n                size=\"medium\"\r\n                onClick={() => {\r\n                  const _date = addMinusDay({\r\n                    action: \"minus\",\r\n                    date: date._d,\r\n                    days: 1,\r\n                  })\r\n                  setDate(dateFormat(_date))\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ padding: \"1rem\" }}>\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<AiFillCaretRight />}\r\n                size=\"medium\"\r\n                onClick={() => {\r\n                  const _date = addMinusDay({\r\n                    action: \"add\",\r\n                    date: date._d,\r\n                    days: 1,\r\n                  })\r\n                  setDate(dateFormat(_date))\r\n                }}\r\n              />\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n        <Grid padding=\" 1rem 4rem\">\r\n          <h1>{title}</h1>\r\n          <Table\r\n            dataSource={[...dataList, ...subTotalOfDataList]}\r\n            columns={columnsOfOrders}\r\n            pagination={false}\r\n          />\r\n        </Grid>\r\n        <Grid padding=\"1rem 4rem\">\r\n          <h1>SUMMARY OF SALES</h1>\r\n          <Flex\r\n            alignItems=\"flex-start\"\r\n            justifyContent=\"flex-end\"\r\n            flexFlow=\"row\"\r\n          >\r\n            <Item>\r\n              <Table\r\n                showHeader={false}\r\n                pagination={false}\r\n                dataSource={[\r\n                  ...sumArrayOfObjectsGrouping(\r\n                    dataList,\r\n                    ORDER_VIA,\r\n                    AMOUNT_PAID\r\n                  ),\r\n                  ...subTotalOfOrderVia,\r\n                ]}\r\n                columns={[\r\n                  {\r\n                    title: \"ORDER VIA\",\r\n                    key: \"orderVia\",\r\n                    dataIndex: \"orderVia\",\r\n                  },\r\n                  {\r\n                    title: \"AMOUNT PAID\",\r\n                    key: \"amountPaid\",\r\n                    dataIndex: \"amountPaid\",\r\n                    align: \"right\",\r\n                    render: (value) => {\r\n                      return <a>{thousandsSeparators(value)}</a>\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Item>\r\n            <Item>\r\n              <Table\r\n                showHeader={false}\r\n                pagination={false}\r\n                dataSource={[\r\n                  ...sumArrayOfObjectsGrouping(\r\n                    dataList,\r\n                    ACCOUNT_NUMBER,\r\n                    AMOUNT_PAID\r\n                  ).filter((obj) => {\r\n                    if (parseInt(obj[AMOUNT_PAID]) > 0) {\r\n                      return obj\r\n                    }\r\n                  }),\r\n                  ...subTotalOfSources,\r\n                ]}\r\n                columns={[\r\n                  {\r\n                    title: \"SOURCES\",\r\n                    key: ACCOUNT_NUMBER,\r\n                    dataIndex: ACCOUNT_NUMBER,\r\n                  },\r\n                  {\r\n                    title: \"AMOUNT PAID\",\r\n                    key: \"amountPaid\",\r\n                    dataIndex: \"amountPaid\",\r\n                    align: \"right\",\r\n                    render: (value) => {\r\n                      return <a>{thousandsSeparators(value)}</a>\r\n                    },\r\n                  },\r\n                ]}\r\n              />\r\n            </Item>\r\n\r\n            {/* this is the percentage portion */}\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                marginTop: \"-5rem\",\r\n              }}\r\n            >\r\n              <Flex justifyContent=\"flex-end\">\r\n                <div style={{ width: \"15rem\" }}>\r\n                  <LiquidChart\r\n                    percent={() =>\r\n                      calculatePercent(grandAmountPaid, grandTotalDue)\r\n                    }\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Flex flexFlow=\"column\" alignItems=\"flex-start\">\r\n                    <Tag color=\"green\">Target</Tag>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <span style={{ marginLeft: \".2rem\" }}>\r\n                        {thousandsSeparators(targets[0])}\r\n                      </span>\r\n                      <span style={{ marginLeft: \"6rem\" }}>{`${(\r\n                        calculatePercent(grandAmountPaid, targets[0]) * 100\r\n                      ).toFixed(0)}%`}</span>\r\n                    </div>\r\n                  </Flex>\r\n                  <Flex flexFlow=\"column\" alignItems=\"flex-start\">\r\n                    <Tag color=\"red\">Below</Tag>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <span style={{ marginLeft: \".2rem\" }}>\r\n                        {thousandsSeparators(targets[1])}\r\n                      </span>\r\n                      <span style={{ marginLeft: \"6rem\" }}>{`${(\r\n                        calculatePercent(grandAmountPaid, targets[1]) * 100\r\n                      ).toFixed(0)}%`}</span>\r\n                    </div>\r\n                  </Flex>\r\n                  <Flex flexFlow=\"column\" alignItems=\"flex-start\">\r\n                    <Tag color=\"orange\">Above</Tag>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <span style={{ marginLeft: \".2rem\" }}>\r\n                        {thousandsSeparators(targets[2])}\r\n                      </span>\r\n                      <span style={{ float: \"left\" }}>{`${(\r\n                        calculatePercent(grandAmountPaid, targets[2]) * 100\r\n                      ).toFixed(0)}%`}</span>\r\n                    </div>\r\n                  </Flex>\r\n                </div>\r\n              </Flex>\r\n            </div>\r\n          </Flex>\r\n        </Grid>\r\n      </div>\r\n      {/* this is print */}\r\n      <div style={{ position: \"fixed\", right: 0, bottom: 0, padding: \"1rem\" }}>\r\n        <Print\r\n          component={\r\n            <div>\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead style={{ fontSize: \"10\", fontWeight: \"bolder\" }}>\r\n                  SERVED ORDERS\r\n                </thead>\r\n                <tbody style={{ fontSize: \"8px\", width: \"100%\" }}>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontSize: \"8px\",\r\n                    }}\r\n                    border=\"1\"\r\n                  >\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      {columnsOfOrders.map((field) => {\r\n                        return <th>{field?.title}</th>\r\n                      })}\r\n                    </tr>\r\n                    {[...dataList].reverse().map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (index + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          {columnsOfOrders.map((field) => {\r\n                            return (\r\n                              <td\r\n                                align={\r\n                                  field.key === AMOUNT_PAID ||\r\n                                  field.key === TOTAL_DUE\r\n                                    ? \"right\"\r\n                                    : \"left\"\r\n                                }\r\n                              >\r\n                                {data[field.key]}\r\n                              </td>\r\n                            )\r\n                          })}\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                    {subTotalOfDataList.map((data) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (dataList.length + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          {columnsOfOrders.map((field) => {\r\n                            return (\r\n                              <td\r\n                                align={\r\n                                  field.key === AMOUNT_PAID ||\r\n                                  field.key === TOTAL_DUE\r\n                                    ? \"right\"\r\n                                    : \"left\"\r\n                                }\r\n                              >\r\n                                {data[field.key]}\r\n                              </td>\r\n                            )\r\n                          })}\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                </tbody>\r\n              </table>\r\n              <br />\r\n              <table style={{ width: \"100%\" }}>\r\n                <thead style={{ fontSize: \"10\", fontWeight: \"bolder\" }}>\r\n                  SUMMARY OF SALES\r\n                </thead>\r\n                <tbody\r\n                  style={{ fontSize: \"8px\", display: \"flex\", width: \"100%\" }}\r\n                >\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontSize: \"8px\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                    border=\"1\"\r\n                  >\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      <th>ORDER VIA</th>\r\n                      <th>AMOUNT PAID</th>\r\n                    </tr>\r\n                    {[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ORDER_VIA,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfOrderVia,\r\n                    ].map((data, index) => {\r\n                      return (\r\n                        <tr\r\n                          style={\r\n                            (index + 1) % 2 === 0\r\n                              ? { backgroundColor: \"white\" }\r\n                              : { backgroundColor: \"#999\" }\r\n                          }\r\n                        >\r\n                          <td>{data[ORDER_VIA]}</td>\r\n                          <td align=\"right\">{data[AMOUNT_PAID]}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                  <table style={{ width: \"100%\", fontSize: \"8px\" }} border=\"1\">\r\n                    <tr style={{ width: \"100%\" }}>\r\n                      <th>RECEIVING ACCT</th>\r\n                      <th>AMOUNT PAID</th>\r\n                    </tr>\r\n                    {[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ACCOUNT_NUMBER,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfSources,\r\n                    ]\r\n                      .filter((obj) => {\r\n                        if (parseInt(obj[AMOUNT_PAID]) > 0) {\r\n                          return obj\r\n                        }\r\n                      })\r\n                      .map((data, index) => {\r\n                        return (\r\n                          <tr\r\n                            style={\r\n                              (index + 1) % 2 === 0\r\n                                ? { backgroundColor: \"white\" }\r\n                                : { backgroundColor: \"#999\" }\r\n                            }\r\n                          >\r\n                            <td>{data[ACCOUNT_NUMBER]}</td>\r\n                            <td align=\"right\">{data[AMOUNT_PAID]}</td>\r\n                          </tr>\r\n                        )\r\n                      })}\r\n                  </table>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          }\r\n          button={<AiFillPrinter fontSize=\"2.5rem\" />}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServedReportType\r\n\r\n{\r\n  /* <Grid>\r\n              <div>\r\n                <h4>VITOS BBQ DAILY REPORT</h4>\r\n              </div>\r\n              <Grid>\r\n                <h5>SERVED ORDER</h5>\r\n                <table>\r\n                  <thead>\r\n                    {columnsOfOrders.map((data) => (\r\n                      <th>{data.title}</th>\r\n                    ))}\r\n                  </thead>\r\n                  <tbody>\r\n                    {[...dataList, ...subTotalOfDataList].map((data) => {\r\n                      return (\r\n                        <tr>\r\n                          {Object.keys(data).map((field) => (\r\n                            <td>{data[field]}</td>\r\n                          ))}\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                    <tr>\r\n                      <td>data 1</td>\r\n                      <td>data 2</td>\r\n                      <td>data 3</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <Table\r\n                  size=\"small\"\r\n                  dataSource={[...dataList, ...subTotalOfDataList]}\r\n                  columns={columnsOfOrders}\r\n                  pagination={false}\r\n                />\r\n              </Grid>\r\n              <Grid>\r\n                <h5>SUMMARY OF SALES</h5>\r\n                <Flex alignItems=\"flex-start\">\r\n                  <Table\r\n                    size=\"small\"\r\n                    showHeader={false}\r\n                    pagination={false}\r\n                    dataSource={[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ORDER_VIA,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfOrderVia,\r\n                    ]}\r\n                    columns={[\r\n                      {\r\n                        title: \"ORDER VIA\",\r\n                        key: \"orderVia\",\r\n                        dataIndex: \"orderVia\",\r\n                      },\r\n                      {\r\n                        title: \"AMOUNT PAID\",\r\n                        key: \"amountPaid\",\r\n                        dataIndex: \"amountPaid\",\r\n                        align: \"right\",\r\n                        render: (value) => {\r\n                          return <a>{thousandsSeparators(value)}</a>\r\n                        },\r\n                      },\r\n                    ]}\r\n                  />\r\n                  <Table\r\n                    showHeader={false}\r\n                    pagination={false}\r\n                    size=\"small\"\r\n                    dataSource={[\r\n                      ...sumArrayOfObjectsGrouping(\r\n                        dataList,\r\n                        ORDER_VIA,\r\n                        AMOUNT_PAID\r\n                      ),\r\n                      ...subTotalOfSources,\r\n                    ]}\r\n                    columns={[\r\n                      {\r\n                        title: \"SOURCES\",\r\n                        key: \"source\",\r\n                        dataIndex: \"source\",\r\n                      },\r\n                      {\r\n                        title: \"AMOUNT PAID\",\r\n                        key: \"amountPaid\",\r\n                        dataIndex: \"amountPaid\",\r\n                        align: \"right\",\r\n                        render: (value) => {\r\n                          return <a>{thousandsSeparators(value)}</a>\r\n                        },\r\n                      },\r\n                    ]}\r\n                  />\r\n                </Flex>\r\n              </Grid>\r\n            </Grid> */\r\n}\r\n\r\n{\r\n  /* <Flex>\r\n                  <div style={{ flex: 1 }}>\r\n                    <h1>TOTAL AMOUNT PAID</h1>\r\n                  </div>\r\n                  {isSwitch ? (\r\n                    <span style={{ marginRight: \".5rem\" }}>Total Due</span>\r\n                  ) : (\r\n                    <span style={{ marginRight: \".5rem\" }}>Target Amount</span>\r\n                  )}\r\n                  <Switch\r\n                    checked={isSwitch}\r\n                    onChange={() => {\r\n                      setIsSwitch(!isSwitch)\r\n                    }}\r\n                  />\r\n                </Flex> */\r\n}\r\n{\r\n  /* <Flex>\r\n                  <LiquidChart percent={calculatePercent} />\r\n                  <div>\r\n                    <Tag color={isSwitch ? \"#2db7f5\" : \"\"}>\r\n                      {isSwitch ? \"Total Due\" : \"Target Amount\"}\r\n                    </Tag>\r\n                    {isSwitch ? (\r\n                      <div style={{ marginLeft: \".7rem\" }}>\r\n                        {thousandsSeparators(grandTotalDue)}\r\n                      </div>\r\n                    ) : (\r\n                      <div style={{ width: \"10rem\" }}>\r\n                        <Input\r\n                          value={targetAmount}\r\n                          bordered={false}\r\n                          onChange={(e) => setTargetAmount(e.target.value)}\r\n                          onBlur={(e) => {\r\n                            if (\r\n                              Number(e.target.value) < Number(grandAmountPaid)\r\n                            ) {\r\n                              setTargetAmount(grandAmountPaid)\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    <br />\r\n                    <Tag color=\"#ff4d4f\">Amount Paid</Tag>\r\n                    <div style={{ marginLeft: \".7rem\" }}>\r\n                      {thousandsSeparators(grandAmountPaid)}\r\n                    </div>\r\n                  </div>\r\n                </Flex> */\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\Dashboard\\datas.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\SchedulerComponent\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\PaymentDetails\\partialModal.js",["1489","1490","1491","1492","1493","1494","1495","1496","1497","1498"],"import React, { useEffect, useState } from \"react\"\r\nimport { Modal, Button, Table } from \"antd\"\r\nimport { Radio, Input, Space, Slider, DatePicker, Select } from \"antd\"\r\nimport { PlusCircleFilled, MinusCircleFilled } from \"@ant-design/icons\"\r\nimport moment from \"moment\"\r\nimport {\r\n  formatDateDash,\r\n  formatDateSlash,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport sumArray from \"Restructured/Utilities/sumArray\"\r\nimport { ACCOUNT_NUMBER, DATE_PAYMENT, MODE_PAYMENT, REF_NO } from \"./types\"\r\nimport DateTimePicker from \"components/fields/dateTimePicker\"\r\nimport { SOURCE } from \"Restructured/Constants/schedules\"\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nconst defaultDateValue = moment(new Date(), \"MM/DD/YYYY\")\r\nconst dataFields = {\r\n  date: defaultDateValue,\r\n  [MODE_PAYMENT]: \"\",\r\n  [SOURCE]: \"\",\r\n  [ACCOUNT_NUMBER]: \"\",\r\n  [REF_NO]: \"\",\r\n  amount: 0,\r\n}\r\nfunction PartialPayments(props) {\r\n  const [visible, setVisible] = useState(false)\r\n  const [dataList, setDataList] = useState([])\r\n  const [dropdowns, setDropdowns] = useState([])\r\n\r\n  useEffect(() => {\r\n    setDropdowns(props.dropdowns)\r\n    const { formFields } = props\r\n    if (formFields?.partials) {\r\n      const _partials = []\r\n      for (const obj of formFields?.partials) {\r\n        _partials.push({ ...dataFields, ...obj })\r\n      }\r\n      setDataList(_partials)\r\n    } else {\r\n      setDataList([])\r\n    }\r\n  }, [props.formFields, visible])\r\n\r\n  return (\r\n    <>\r\n      <Button danger onClick={() => setVisible(true)}>\r\n        Partial Payments\r\n      </Button>\r\n      <Modal\r\n        title=\"Partial Payments\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => {\r\n          setVisible(false)\r\n          const _amountPaid = sumArray(dataList, \"amount\")\r\n          const _formFields = { ...props.formFields }\r\n          _formFields.partials = [\r\n            ...dataList.map((data) => {\r\n              return {\r\n                ...data,\r\n                amount: Number(data.amount),\r\n              }\r\n            }),\r\n          ]\r\n          _formFields.amountPaid = Number(_amountPaid)\r\n          props.setFormFields(_formFields)\r\n        }}\r\n        onCancel={() => setVisible(false)}\r\n        width={1000}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            width: \"100%\",\r\n            padding: \"1rem\",\r\n          }}\r\n        >\r\n          <div style={{ width: \"9rem\" }}>Date</div>\r\n          <div style={{ width: \"10rem\" }}>Mode Payment</div>\r\n          <div style={{ width: \"9rem\" }}>Source</div>\r\n          <div style={{ width: \"9rem\" }}>Account Number</div>\r\n          <div style={{ width: \"10rem\" }}>Ref No</div>\r\n          <div style={{ width: \"10rem\" }}>Amount</div>\r\n        </div>\r\n        {dataList.map((data, index) => {\r\n          return (\r\n            <div style={{ display: \"flex\" }}>\r\n              <DatePicker\r\n                style={{ width: \"10rem\", minWidth: \"10rem\" }}\r\n                value={moment(data?.date, \"MM/DD/YYYY\")}\r\n                onChange={(e) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    date: e._d,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n                format=\"MM/DD/YYYY\"\r\n              />\r\n              <Select\r\n                size=\"large\"\r\n                value={data?.modePayment}\r\n                style={{ width: \"10rem\", minWidth: \"10rem\" }}\r\n                onChange={(value) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    [MODE_PAYMENT]: value,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n              >\r\n                {dropdowns\r\n                  .find((field) => field.name === MODE_PAYMENT)\r\n                  ?.dataSource.map((value) => (\r\n                    <Option value={value}>{value}</Option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                value={data?.source}\r\n                size=\"large\"\r\n                style={{ width: \"9rem\", minWidth: \"9rem\" }}\r\n                onChange={(value) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    [SOURCE]: value,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n              >\r\n                {dropdowns\r\n                  .find((field) => field.name === SOURCE)\r\n                  ?.dataSource.map((value) => (\r\n                    <Option value={value}>{value}</Option>\r\n                  ))}\r\n              </Select>\r\n              <Select\r\n                value={data?.accountNumber}\r\n                size=\"large\"\r\n                style={{ width: \"9rem\", minWidth: \"9rem\" }}\r\n                onChange={(value) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    [ACCOUNT_NUMBER]: value,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n              >\r\n                {dropdowns\r\n                  .find((field) => field.name === ACCOUNT_NUMBER)\r\n                  ?.dataSource.map((value) => (\r\n                    <Option value={value}>{value}</Option>\r\n                  ))}\r\n              </Select>\r\n              <Input\r\n                value={data?.refNo}\r\n                onChange={(e) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    [REF_NO]: e.target.value,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n                placeholder=\"Ref no\"\r\n              />\r\n              <Input\r\n                value={data?.amount}\r\n                onChange={(e) => {\r\n                  const _data = [...dataList]\r\n                  _data[index] = {\r\n                    ...dataList[index],\r\n                    amount: e.target.value,\r\n                  }\r\n                  setDataList(_data)\r\n                }}\r\n                placeholder=\"amount\"\r\n                type=\"number\"\r\n              />\r\n              <Button\r\n                shape=\"circle\"\r\n                size=\"large\"\r\n                icon={<MinusCircleFilled />}\r\n                onClick={() => {\r\n                  const _data = [...dataList]\r\n                  _data.splice(index, 1)\r\n                  setDataList(_data)\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            icon={<PlusCircleFilled />}\r\n            size=\"large\"\r\n            onClick={() => {\r\n              const _data = [...dataList]\r\n              _data.push({\r\n                date: defaultDateValue._d,\r\n                amount: \"0.00\",\r\n              })\r\n              setDataList(_data)\r\n            }}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PartialPayments\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Components\\Features\\PaymentTransactionTable\\PaymentTransactionPrint.js",["1499","1500","1501","1502","1503","1504","1505","1506","1507"],"import { Button, DatePicker, Input } from \"antd\"\r\nimport moment from \"moment\"\r\nimport React, { useState } from \"react\"\r\nimport Services from \"Restructured/Services/SchedulerServices\"\r\nimport {\r\n  AiFillCloseCircle,\r\n  AiFillFilter,\r\n  AiFillPrinter,\r\n  AiOutlineClose,\r\n} from \"react-icons/ai\"\r\nimport Print from \"../Print\"\r\nimport {\r\n  CONTACT_NUMBER,\r\n  CUSTOMER,\r\n  DATE_END,\r\n  DATE_ORDER_PLACED,\r\n  DATE_START,\r\n  ORDER_NO,\r\n} from \"Restructured/Constants/schedules\"\r\nimport { RangePicker } from \"Restructured/Components/Commons\"\r\nimport {\r\n  formatDateFromDatabase,\r\n  formatDateSlash,\r\n  formatTime,\r\n} from \"Restructured/Utilities/dateFormat\"\r\nimport {\r\n  ACCOUNT_NUMBER,\r\n  AMOUNT_PAID,\r\n  DATE_PAYMENT,\r\n  MODE_PAYMENT,\r\n  OTHERS_DEDUCTION,\r\n  SOURCE,\r\n} from \"components/PaymentDetails/types\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectTableSlice } from \"components/Table/tableSlice\"\r\nimport { QUANTITY } from \"Restructured/Constants/products\"\r\nimport sumArray, { sumArrayDatas } from \"Restructured/Utilities/sumArray\"\r\n\r\nconst defaultDate = moment(new Date(), \"MM/DD/YYYY\")\r\nfunction PaymentTransactionPrint({\r\n  dataList,\r\n  setDataList,\r\n  setIsFilteredClicked,\r\n  isFilteredClicked,\r\n}) {\r\n  const tableComponentSlice = useSelector(selectTableSlice)\r\n  const [dates, setDates] = useState([defaultDate, defaultDate])\r\n\r\n  const loadData = async () => {\r\n    if (dates) {\r\n      const Service = new Services()\r\n      const data = await Service.getSchedulesByDate(\r\n        [dates[0]._d, dates[1]._d],\r\n        DATE_ORDER_PLACED\r\n      )\r\n      let newData = []\r\n      for (const obj of data) {\r\n        const foundObj = tableComponentSlice.dataList.find(\r\n          (field) => field._id === obj._id\r\n        )\r\n        const dateOrderPlaced = formatDateFromDatabase(obj[DATE_ORDER_PLACED])\r\n        const dateStart = formatDateFromDatabase(obj[DATE_START])\r\n        delete obj[DATE_END]\r\n        delete obj[DATE_PAYMENT]\r\n        if (foundObj) {\r\n          newData.push({\r\n            ...foundObj,\r\n            // [DATE_ORDER_PLACED]: formatDateSlash(dateOrderPlaced),\r\n            // [DATE_START]: `${formatDateSlash(dateStart)} ${formatTime(\r\n            //   dateStart\r\n            // )}`,\r\n          })\r\n        }\r\n      }\r\n      console.log(\"pikon\", newData)\r\n      setDataList(newData)\r\n      setIsFilteredClicked(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", paddingLeft: \"3rem\" }}>\r\n      <RangePicker\r\n        format=\"MM/DD/YYYY\"\r\n        showTime={false}\r\n        value={dates}\r\n        onChange={(date) => setDates(date)}\r\n      />\r\n      {dataList.length > 0 ? (\r\n        <Print\r\n          component={\r\n            <div>\r\n              <table style={{ width: \"100%\", fontSize: \"8px\" }} border=\"1\">\r\n                <tr style={{ width: \"100%\" }}>\r\n                  <th>DATE/TIME PLACED</th>\r\n                  <th>ORDER DATE/TIME</th>\r\n                  <th>ORDER #</th>\r\n                  <th>CUSTOMER</th>\r\n                  <th>CONTACT #</th>\r\n                  <th>QTY</th>\r\n                  <th align=\"right\">AMT</th>\r\n                  <th>DATE PAID</th>\r\n                  <th>MOP</th>\r\n                  <th>SOURCE</th>\r\n                  <th>RECEIVING ACCT</th>\r\n                  <th align=\"right\">PAID AMT</th>\r\n                  <th align=\"right\">OTHERS/DEDUCTIONS</th>\r\n                </tr>\r\n                {dataList.map((data, index) => {\r\n                  return (\r\n                    <tr\r\n                      style={\r\n                        (index + 1) % 2 === 0\r\n                          ? { backgroundColor: \"white\" }\r\n                          : { backgroundColor: \"#999\" }\r\n                      }\r\n                    >\r\n                      <td>{data[DATE_ORDER_PLACED]}</td>\r\n                      <td>{data[DATE_START]}</td>\r\n                      <td>{data[ORDER_NO]}</td>\r\n                      <td>{data[CUSTOMER]}</td>\r\n                      <td>{data[CONTACT_NUMBER]}</td>\r\n                      <td>{data[\"totalQty\"]}</td>\r\n                      <td align=\"right\">{data[\"totalDue\"]}</td>\r\n                      <td>{data[DATE_PAYMENT]}</td>\r\n                      <td>{data[MODE_PAYMENT]}</td>\r\n                      <td>{data[SOURCE]}</td>\r\n                      <td>{data[ACCOUNT_NUMBER]}</td>\r\n                      <td align=\"right\">{data[AMOUNT_PAID]}</td>\r\n                      <td align=\"right\">{data[OTHERS_DEDUCTION]}</td>\r\n                    </tr>\r\n                  )\r\n                })}\r\n                <tr style={{ color: \"red\" }}>\r\n                  <td>Total</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td>{sumArray(dataList, \"totalQty\")}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td align=\"right\">\r\n                    {sumArray(dataList, AMOUNT_PAID).toFixed(2)}\r\n                  </td>\r\n                  <td align=\"right\">\r\n                    {sumArray(dataList, OTHERS_DEDUCTION).toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          }\r\n          button={<AiFillPrinter fontSize=\"1rem\" />}\r\n        />\r\n      ) : (\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<AiFillFilter />}\r\n          size=\"large\"\r\n          onClick={() => loadData()}\r\n        />\r\n      )}\r\n      {isFilteredClicked > 0 && (\r\n        <Button\r\n          shape=\"circle\"\r\n          icon={<AiOutlineClose />}\r\n          size=\"large\"\r\n          onClick={() => {\r\n            setIsFilteredClicked(false)\r\n            setDataList([])\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaymentTransactionPrint\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\index.js",["1508","1509","1510","1511","1512","1513","1514","1515","1516","1517"],"import React, { useEffect, useState } from \"react\"\r\nimport GoogleButton from \"react-google-button\"\r\nimport Animate, {\r\n  RollIn,\r\n  FadeIn,\r\n  FadeInDown,\r\n  ZoomIn,\r\n  FadeInUp,\r\n  RubberBand,\r\n} from \"animate-css-styled-components\"\r\nimport { auth, provider } from \"services/firebase\"\r\nimport {\r\n  Wrapper,\r\n  Background,\r\n  GoogleContainer,\r\n  Card,\r\n  CookedChef,\r\n  Description,\r\n  VitosLogo,\r\n} from \"./styles\"\r\nimport background from \"images/background2.jpg\"\r\nimport cookedChefLogo from \"images/cookedChef.jpg\"\r\nimport vitosLogo from \"images/vitosLogo.jpg\"\r\nimport { getData, updateData } from \"services\"\r\nimport { Button, Divider, Input, Select } from \"antd\"\r\nimport validateEmail from \"Restructured/Utilities/validateEmail\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectUserSlice } from \"./loginSlice\"\r\nimport { setBranchSelected } from \"containers/0.login/loginSlice\"\r\nimport { PuffLoader } from \"react-spinners\"\r\nconst { Option } = Select\r\n\r\nfunction NewLogin() {\r\n  const dispatch = useDispatch()\r\n  const userSlice = useSelector(selectUserSlice)\r\n  const [loading, setLoading] = useState(false)\r\n  const [credentials, setCredentials] = useState({})\r\n  const [errorMessage, setErrorMessage] = useState(\"\")\r\n  const [enableChangePass, setEnableChangePass] = useState(false)\r\n  const [branchList, setBranchList] = useState([])\r\n  const handleLogin = () => {\r\n    // auth\r\n    //   .signInWithPopup(provider)\r\n    //   .then((result) => {\r\n    //     /** @type {firebase.auth.OAuthCredential} */\r\n    //     const credential = result.credential\r\n    //     // This gives you a Google Access Token. You can use it to access the Google API.\r\n    //     var token = credential.accessToken\r\n    //     // The signed-in user info.\r\n    //     var user = result.user\r\n    //     // ...\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     // Handle Errors here.\r\n    //     var errorCode = error.code\r\n    //     var errorMessage = error.message\r\n    //     // The email of the user's account used.\r\n    //     var email = error.email\r\n    //     // The firebase.auth.AuthCredential type that was used.\r\n    //     var credential = error.credential\r\n    //     // ...\r\n    //   })\r\n\r\n    if (\r\n      credentials.password.length >= 6 &&\r\n      validateEmail(credentials.email) &&\r\n      userSlice?.branchSelected\r\n    ) {\r\n      const { email, password } = credentials\r\n      setLoading(true)\r\n      auth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((userCred) => {\r\n          // proceed if user already existed\r\n          console.log(\"userCred\", userCred.user)\r\n          updateData({\r\n            data: { branchSelected: userSlice.branchSelected },\r\n            collection: \"users\",\r\n            id: credentials?.email,\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          if (errorCode === \"auth/user-not-found\") {\r\n            // proceed if user not found\r\n            checkEmailIfListed(email, password)\r\n          } else {\r\n            if (\r\n              errorMessage ===\r\n              \"The password is invalid or the user does not have a password.\"\r\n            ) {\r\n              setErrorMessage(\"Invalid User\")\r\n            } else {\r\n              setErrorMessage(errorMessage)\r\n            }\r\n            console.log(\"errorMessage\", errorMessage)\r\n          }\r\n          setLoading(false)\r\n        })\r\n    } else {\r\n      console.log(\"wala\")\r\n    }\r\n  }\r\n\r\n  const checkEmailIfListed = async (email, password) => {\r\n    const data = await getData(\"users\", email)\r\n    if (data?.isEnabled && password === \"123456\") {\r\n      setEnableChangePass(true)\r\n    } else {\r\n      setEnableChangePass(false)\r\n      setErrorMessage(\"Invalid User\")\r\n    }\r\n  }\r\n\r\n  const setBranchesList = async (email) => {\r\n    if (email) {\r\n      const data = await getData(\"users\", email)\r\n      if (data) {\r\n        setBranchList([...data?.branches])\r\n      } else {\r\n        setBranchList([])\r\n        dispatch(setBranchSelected(\"\"))\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSignUp = () => {\r\n    if (errorMessage) {\r\n      return\r\n    }\r\n    if (credentials?.email && credentials?.newPass) {\r\n      const { email, newPass } = credentials\r\n\r\n      if (!validateEmail(email)) {\r\n        setErrorMessage(\"The email you entered is invalid\")\r\n        return\r\n      }\r\n\r\n      setLoading(true)\r\n      auth\r\n        .createUserWithEmailAndPassword(email, newPass)\r\n        .then((userCredential) => {\r\n          // Signed in\r\n          const user = userCredential.user\r\n          updateData({\r\n            data: { branchSelected: userSlice.branchSelected },\r\n            collection: \"users\",\r\n            id: credentials?.email,\r\n          })\r\n          // ...\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          setLoading(false)\r\n          // ..\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setErrorMessage(\"\")\r\n      setEnableChangePass(false)\r\n      setCredentials({})\r\n      dispatch(setBranchSelected(\"\"))\r\n    }\r\n  }, [])\r\n  return (\r\n    <Wrapper>\r\n      {/* <Background src={background} /> */}\r\n      <Animate Animation={[FadeInDown]} duration={[\"1s\"]} delay={[\"0.1s\"]}>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Card>\r\n            <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.8s\"]}>\r\n              <CookedChef src={cookedChefLogo} />\r\n            </Animate>\r\n            <Animate Animation={[RollIn]} duration={[\"1s\"]} delay={[\"0.5s\"]}>\r\n              <VitosLogo src={vitosLogo} />\r\n            </Animate>\r\n            {/* <Animate Animation={[FadeInUp]} duration={[\".1s\"]} delay={[\"1.2s\"]}>\r\n              <Description>USER LOGIN</Description>\r\n            </Animate> */}\r\n            <Animate\r\n              Animation={[ZoomIn, RubberBand]}\r\n              duration={[\".1s\", \"1s\"]}\r\n              delay={[\"0.8s\", \"1.5s\"]}\r\n            >\r\n              {/* <GoogleContainer>\r\n                <GoogleButton onClick={handleLogin} type=\"light\" />\r\n              </GoogleContainer> */}\r\n            </Animate>\r\n          </Card>\r\n\r\n          <Card>\r\n            <div style={{ padding: \"0rem 3rem\", position: \"relative\" }}>\r\n              <Animate\r\n                Animation={[FadeInUp]}\r\n                duration={[\".1s\"]}\r\n                delay={[\"1.2s\"]}\r\n              >\r\n                <h1 style={{ textAlign: \"center\" }}>USER LOGIN</h1>\r\n              </Animate>\r\n              <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.8s\"]}>\r\n                <Input\r\n                  placeholder=\"Email\"\r\n                  size=\"large\"\r\n                  style={{ marginBottom: \"1rem\" }}\r\n                  onChange={(e) => {\r\n                    setCredentials({\r\n                      ...credentials,\r\n                      email: e.target.value || \"\",\r\n                    })\r\n                    setBranchesList(e.target.value)\r\n                    setErrorMessage(\"\")\r\n                  }}\r\n                />\r\n                <Input\r\n                  placeholder=\"Password\"\r\n                  style={{ marginBottom: \"1rem\" }}\r\n                  type=\"password\"\r\n                  size=\"large\"\r\n                  onChange={(e) => {\r\n                    setCredentials({ ...credentials, password: e.target.value })\r\n                    setErrorMessage(\"\")\r\n                  }}\r\n                />\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  size=\"large\"\r\n                  value={userSlice?.branchSelected}\r\n                  onChange={(value) => {\r\n                    dispatch(setBranchSelected(value))\r\n                  }}\r\n                >\r\n                  {branchList.map((data) => {\r\n                    return <Option value={data}>{data}</Option>\r\n                  })}\r\n                </Select>\r\n                <Divider />\r\n                {/* end boundary of email and password credentials * ----------------------------------------------------------------------------------------------->>>>/}\r\n\r\n                {/* Retype password */}\r\n                {enableChangePass && (\r\n                  <div>\r\n                    <Input\r\n                      placeholder=\"New password\"\r\n                      size=\"large\"\r\n                      style={{ marginBottom: \"1rem\" }}\r\n                      type=\"password\"\r\n                      onChange={(e) => {\r\n                        if (e.target.value.length >= 6) {\r\n                          if (e.target.value !== credentials.reType) {\r\n                            setErrorMessage(\"Password mismatch\")\r\n                          } else {\r\n                            setErrorMessage(\"\")\r\n                          }\r\n                        } else {\r\n                          setErrorMessage(\r\n                            \"Password must be at least 6 characters\"\r\n                          )\r\n                        }\r\n\r\n                        setCredentials({\r\n                          ...credentials,\r\n                          newPass: e.target.value,\r\n                        })\r\n                      }}\r\n                    />\r\n                    <Input\r\n                      placeholder=\"Re-type password\"\r\n                      type=\"password\"\r\n                      size=\"large\"\r\n                      onChange={(e) => {\r\n                        if (e.target.value !== credentials.newPass) {\r\n                          setErrorMessage(\"Password mismatch\")\r\n                        } else {\r\n                          setErrorMessage(\"\")\r\n                        }\r\n\r\n                        if (credentials?.newPass.length < 6) {\r\n                          setErrorMessage(\r\n                            \"Password must be at least 6 characters\"\r\n                          )\r\n                        }\r\n                        setCredentials({\r\n                          ...credentials,\r\n                          reType: e.target.value,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n                <Divider />\r\n                {enableChangePass === false ? (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    danger\r\n                    block\r\n                    size=\"large\"\r\n                    disabled={\r\n                      !(\r\n                        (credentials.password || 0).length >= 6 &&\r\n                        validateEmail(credentials.email) &&\r\n                        userSlice?.branchSelected\r\n                      ) || loading\r\n                    }\r\n                    onClick={handleLogin}\r\n                  >\r\n                    {loading ? <PuffLoader size={30} /> : \"LOGIN\"}\r\n                  </Button>\r\n                ) : (\r\n                  // this is for retype password buttons ------------------------------------------------------------------------------------------>>>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"primary\"\r\n                      danger\r\n                      size=\"large\"\r\n                      style={{ flex: 1 }}\r\n                      onClick={handleSignUp}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? <PuffLoader size={30} /> : \"SAVE\"}\r\n                    </Button>\r\n                    <Button\r\n                      size=\"large\"\r\n                      style={{ flex: 1 }}\r\n                      onClick={() => {\r\n                        setEnableChangePass(false)\r\n                        setErrorMessage(\"\")\r\n                      }}\r\n                    >\r\n                      CANCEL\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n                {/* end of retype password boundary */}\r\n              </Animate>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  textAlign: \"center\",\r\n                  width: \"100%\",\r\n                  left: 0,\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                {errorMessage}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </Animate>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NewLogin\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\validateEmail.js",["1518","1519"],"export default function validateEmail(email) {\r\n  if (!email) return false\r\n  const res =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return res.test(String(email).toLowerCase())\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.NewLogin\\loginSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\loginSlice.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\index.js",["1520","1521","1522","1523","1524","1525","1526","1527"],"import React from \"react\"\r\nimport GoogleButton from \"react-google-button\"\r\nimport Animate, {\r\n  RollIn,\r\n  FadeIn,\r\n  FadeInDown,\r\n  ZoomIn,\r\n  FadeInUp,\r\n  RubberBand,\r\n} from \"animate-css-styled-components\"\r\nimport { auth, provider } from \"services/firebase\"\r\nimport {\r\n  Wrapper,\r\n  Background,\r\n  GoogleContainer,\r\n  Card,\r\n  CookedChef,\r\n  Description,\r\n  VitosLogo,\r\n} from \"./styles\"\r\nimport background from \"images/background2.jpg\"\r\nimport cookedChefLogo from \"images/cookedChef.jpg\"\r\nimport vitosLogo from \"images/vitosLogo.jpg\"\r\n\r\nfunction Login() {\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        const credential = result.credential\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        // ...\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* <Background src={background} /> */}\r\n      <Animate Animation={[FadeInDown]} duration={[\"1s\"]} delay={[\"0.1s\"]}>\r\n        <Card>\r\n          <Animate Animation={[FadeIn]} duration={[\"1s\"]} delay={[\"0.8s\"]}>\r\n            <CookedChef src={cookedChefLogo} />\r\n          </Animate>\r\n          <Animate Animation={[RollIn]} duration={[\"1s\"]} delay={[\"0.5s\"]}>\r\n            <VitosLogo src={vitosLogo} />\r\n          </Animate>\r\n          <Animate Animation={[FadeInUp]} duration={[\".1s\"]} delay={[\"1.2s\"]}>\r\n            <Description>USER LOGIN</Description>\r\n          </Animate>\r\n          <Animate\r\n            Animation={[ZoomIn, RubberBand]}\r\n            duration={[\".1s\", \"1s\"]}\r\n            delay={[\"0.8s\", \"1.5s\"]}\r\n          >\r\n            <GoogleContainer>\r\n              <GoogleButton onClick={handleLogin} type=\"light\" />\r\n            </GoogleContainer>\r\n          </Animate>\r\n        </Card>\r\n      </Animate>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\containers\\0.login\\styles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\Restructured\\Utilities\\getWeekOfDate.js",["1528"],"import { formatDateDash } from \"./dateFormat\"\r\n\r\nexport default function (date) {\r\n  const day = date.getDay()\r\n  const formattedDate = formatDateDash(date)\r\n  const dateFrom = new Date(formattedDate)\r\n  const dateTo = new Date(formattedDate)\r\n\r\n  dateFrom.setDate(dateFrom.getDate() - day)\r\n\r\n  const dateToBeAdd = 6 - day\r\n  dateTo.setDate(dateTo.getDate() + dateToBeAdd)\r\n\r\n  return [dateFrom, dateTo]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\UserInfoCard.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\appBar\\userInfoStyles.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\index.js",["1529"],"D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\rangeHandler.js",["1530","1531","1532"],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\SchedulesServicess.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\base\\index.js",["1533"],"D:\\Projects\\Scheduler App\\scheduler\\src\\services\\firebase\\DropdownServicess.js",["1534"],"import Commands from \"./base\"\r\nimport db from \"services/firebase\"\r\nconst collectionName = \"dropdowns\"\r\nexport default class ScheduleServicess extends Commands {\r\n  constructor(args) {\r\n    super({ ...args, _collectionName: collectionName })\r\n  }\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\findDataHandler.js",["1535"],"import { useEffect, useState } from \"react\"\r\n\r\nexport default function useFindDataHandler(service) {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [data, setData] = useState(null)\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [])\r\n\r\n  const loadData = async () => {\r\n    setIsLoading(true)\r\n    const _data = await service.getDataWithFieldName()\r\n    if (typeof _data === \"object\") {\r\n      if (_data.length === 1) {\r\n        setData({ ..._data[0] })\r\n      } else {\r\n        setData([..._data])\r\n      }\r\n    }\r\n    setIsLoading(false)\r\n  }\r\n  return [{ data, isLoading }]\r\n}\r\n","D:\\Projects\\Scheduler App\\scheduler\\src\\hooks\\selectComponentHandler.js",[],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\hook.js",["1536"],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\handleAutoFill.js",["1537"],"D:\\Projects\\Scheduler App\\scheduler\\src\\components\\features\\GroupPayments\\groupPaymentPrint.js",["1538","1539","1540","1541","1542","1543","1544","1545"],{"ruleId":"1546","replacedBy":"1547"},{"ruleId":"1548","replacedBy":"1549"},{"ruleId":"1550","severity":1,"message":"1551","line":5,"column":8,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1554","line":26,"column":10,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1555","line":28,"column":10,"nodeType":"1552","messageId":"1553","endLine":28,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1556","line":29,"column":10,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1557","line":30,"column":8,"nodeType":"1552","messageId":"1553","endLine":30,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1558","line":51,"column":15,"nodeType":"1552","messageId":"1553","endLine":51,"endColumn":18},{"ruleId":"1559","severity":1,"message":"1560","line":69,"column":6,"nodeType":"1561","endLine":69,"endColumn":8,"suggestions":"1562"},{"ruleId":"1559","severity":1,"message":"1563","line":73,"column":6,"nodeType":"1561","endLine":73,"endColumn":12,"suggestions":"1564"},{"ruleId":"1565","severity":1,"message":"1566","line":122,"column":15,"nodeType":"1567","endLine":122,"endColumn":67},{"ruleId":"1550","severity":1,"message":"1568","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1569","line":1,"column":27,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":36},{"ruleId":"1550","severity":1,"message":"1570","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1571","line":4,"column":10,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":17},{"ruleId":"1559","severity":1,"message":"1572","line":28,"column":6,"nodeType":"1561","endLine":28,"endColumn":13,"suggestions":"1573"},{"ruleId":"1550","severity":1,"message":"1574","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1575","line":3,"column":19,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":35},{"ruleId":"1559","severity":1,"message":"1563","line":30,"column":6,"nodeType":"1561","endLine":30,"endColumn":8,"suggestions":"1576"},{"ruleId":"1550","severity":1,"message":"1577","line":2,"column":8,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1578","line":13,"column":8,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1579","line":13,"column":17,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":31},{"ruleId":"1550","severity":1,"message":"1580","line":13,"column":33,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":45},{"ruleId":"1559","severity":1,"message":"1563","line":46,"column":6,"nodeType":"1561","endLine":46,"endColumn":8,"suggestions":"1581"},{"ruleId":"1559","severity":1,"message":"1563","line":60,"column":6,"nodeType":"1561","endLine":60,"endColumn":8,"suggestions":"1582"},{"ruleId":"1583","severity":1,"message":"1584","line":13,"column":1,"nodeType":"1585","endLine":34,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":19,"column":6,"nodeType":"1561","endLine":19,"endColumn":26,"suggestions":"1586"},{"ruleId":"1550","severity":1,"message":"1577","line":2,"column":8,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1578","line":13,"column":8,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1587","line":25,"column":3,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1588","line":32,"column":8,"nodeType":"1552","messageId":"1553","endLine":32,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1589","line":43,"column":10,"nodeType":"1552","messageId":"1553","endLine":43,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1590","line":53,"column":9,"nodeType":"1552","messageId":"1553","endLine":53,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1591","line":59,"column":10,"nodeType":"1552","messageId":"1553","endLine":59,"endColumn":21},{"ruleId":"1559","severity":1,"message":"1592","line":235,"column":6,"nodeType":"1561","endLine":235,"endColumn":16,"suggestions":"1593"},{"ruleId":"1550","severity":1,"message":"1594","line":244,"column":9,"nodeType":"1552","messageId":"1553","endLine":244,"endColumn":21},{"ruleId":"1583","severity":1,"message":"1584","line":25,"column":1,"nodeType":"1585","endLine":31,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":11,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1595","line":5,"column":9,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":21},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":17,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":2,"column":1,"nodeType":"1585","endLine":39,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":28,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1596","line":7,"column":10,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1597","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1598","line":13,"column":3,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1599","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1600","line":17,"column":22,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1601","line":17,"column":37,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":53},{"ruleId":"1550","severity":1,"message":"1602","line":21,"column":26,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":31},{"ruleId":"1550","severity":1,"message":"1603","line":22,"column":10,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1604","line":24,"column":8,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1605","line":25,"column":8,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":16},{"ruleId":"1559","severity":1,"message":"1606","line":42,"column":6,"nodeType":"1561","endLine":42,"endColumn":25,"suggestions":"1607"},{"ruleId":"1583","severity":1,"message":"1608","line":1,"column":1,"nodeType":"1585","endLine":11,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1609","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1610","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1611","line":30,"column":3,"nodeType":"1552","messageId":"1553","endLine":30,"endColumn":5},{"ruleId":"1550","severity":1,"message":"1612","line":31,"column":3,"nodeType":"1552","messageId":"1553","endLine":31,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1613","line":33,"column":3,"nodeType":"1552","messageId":"1553","endLine":33,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1614","line":35,"column":3,"nodeType":"1552","messageId":"1553","endLine":35,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1615","line":37,"column":3,"nodeType":"1552","messageId":"1553","endLine":37,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1616","line":39,"column":3,"nodeType":"1552","messageId":"1553","endLine":39,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1617","line":42,"column":10,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1618","line":43,"column":8,"nodeType":"1552","messageId":"1553","endLine":43,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1619","line":43,"column":29,"nodeType":"1552","messageId":"1553","endLine":43,"endColumn":46},{"ruleId":"1550","severity":1,"message":"1620","line":44,"column":8,"nodeType":"1552","messageId":"1553","endLine":44,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1621","line":50,"column":10,"nodeType":"1552","messageId":"1553","endLine":50,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1622","line":51,"column":8,"nodeType":"1552","messageId":"1553","endLine":51,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1623","line":58,"column":22,"nodeType":"1552","messageId":"1553","endLine":58,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1624","line":59,"column":10,"nodeType":"1552","messageId":"1553","endLine":59,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1625","line":59,"column":27,"nodeType":"1552","messageId":"1553","endLine":59,"endColumn":45},{"ruleId":"1550","severity":1,"message":"1626","line":64,"column":10,"nodeType":"1552","messageId":"1553","endLine":64,"endColumn":23},{"ruleId":"1559","severity":1,"message":"1627","line":93,"column":6,"nodeType":"1561","endLine":93,"endColumn":38,"suggestions":"1628"},{"ruleId":"1559","severity":1,"message":"1629","line":100,"column":6,"nodeType":"1561","endLine":100,"endColumn":42,"suggestions":"1630"},{"ruleId":"1559","severity":1,"message":"1631","line":142,"column":6,"nodeType":"1561","endLine":142,"endColumn":8,"suggestions":"1632"},{"ruleId":"1559","severity":1,"message":"1563","line":165,"column":6,"nodeType":"1561","endLine":165,"endColumn":8,"suggestions":"1633"},{"ruleId":"1550","severity":1,"message":"1634","line":244,"column":11,"nodeType":"1552","messageId":"1553","endLine":244,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1635","line":289,"column":11,"nodeType":"1552","messageId":"1553","endLine":289,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1636","line":292,"column":11,"nodeType":"1552","messageId":"1553","endLine":292,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1610","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1637","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1638","line":13,"column":3,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1639","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1554","line":21,"column":10,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1640","line":2,"column":3,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1641","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1587","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1589","line":32,"column":10,"nodeType":"1552","messageId":"1553","endLine":32,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1588","line":35,"column":8,"nodeType":"1552","messageId":"1553","endLine":35,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1642","line":37,"column":8,"nodeType":"1552","messageId":"1553","endLine":37,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1643","line":38,"column":10,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":21},{"ruleId":"1559","severity":1,"message":"1644","line":55,"column":6,"nodeType":"1561","endLine":55,"endColumn":27,"suggestions":"1645"},{"ruleId":"1550","severity":1,"message":"1646","line":3,"column":27,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":36},{"ruleId":"1550","severity":1,"message":"1604","line":9,"column":8,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1647","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1648","line":22,"column":10,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1649","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1641","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1650","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1651","line":27,"column":3,"nodeType":"1552","messageId":"1553","endLine":27,"endColumn":9},{"ruleId":"1565","severity":1,"message":"1566","line":127,"column":7,"nodeType":"1567","endLine":131,"endColumn":9},{"ruleId":"1565","severity":1,"message":"1566","line":133,"column":9,"nodeType":"1567","endLine":133,"endColumn":77},{"ruleId":"1583","severity":1,"message":"1608","line":326,"column":1,"nodeType":"1585","endLine":336,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1652","line":327,"column":10,"nodeType":"1552","messageId":"1553","endLine":327,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1653","line":12,"column":26,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":44},{"ruleId":"1559","severity":1,"message":"1654","line":16,"column":6,"nodeType":"1561","endLine":16,"endColumn":22,"suggestions":"1655"},{"ruleId":"1550","severity":1,"message":"1656","line":38,"column":7,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":16},{"ruleId":"1559","severity":1,"message":"1654","line":59,"column":6,"nodeType":"1561","endLine":59,"endColumn":8,"suggestions":"1657"},{"ruleId":"1550","severity":1,"message":"1643","line":4,"column":3,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1658","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1659","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1660","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1611","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":5},{"ruleId":"1550","severity":1,"message":"1661","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1662","line":20,"column":3,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1663","line":21,"column":3,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1664","line":22,"column":3,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1665","line":23,"column":3,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1612","line":24,"column":3,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1666","line":25,"column":3,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1667","line":27,"column":3,"nodeType":"1552","messageId":"1553","endLine":27,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1668","line":28,"column":3,"nodeType":"1552","messageId":"1553","endLine":28,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1669","line":29,"column":3,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1670","line":30,"column":3,"nodeType":"1552","messageId":"1553","endLine":30,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1671","line":31,"column":3,"nodeType":"1552","messageId":"1553","endLine":31,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1672","line":32,"column":3,"nodeType":"1552","messageId":"1553","endLine":32,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1649","line":38,"column":3,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1614","line":39,"column":3,"nodeType":"1552","messageId":"1553","endLine":39,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1673","line":40,"column":3,"nodeType":"1552","messageId":"1553","endLine":40,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1674","line":41,"column":3,"nodeType":"1552","messageId":"1553","endLine":41,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1675","line":42,"column":3,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1676","line":43,"column":3,"nodeType":"1552","messageId":"1553","endLine":43,"endColumn":5},{"ruleId":"1550","severity":1,"message":"1641","line":44,"column":3,"nodeType":"1552","messageId":"1553","endLine":44,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1677","line":45,"column":3,"nodeType":"1552","messageId":"1553","endLine":45,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1678","line":46,"column":3,"nodeType":"1552","messageId":"1553","endLine":46,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1679","line":47,"column":3,"nodeType":"1552","messageId":"1553","endLine":47,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1587","line":49,"column":3,"nodeType":"1552","messageId":"1553","endLine":49,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1680","line":50,"column":3,"nodeType":"1552","messageId":"1553","endLine":50,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1681","line":51,"column":3,"nodeType":"1552","messageId":"1553","endLine":51,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1598","line":55,"column":3,"nodeType":"1552","messageId":"1553","endLine":55,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1682","line":57,"column":3,"nodeType":"1552","messageId":"1553","endLine":57,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1683","line":59,"column":3,"nodeType":"1552","messageId":"1553","endLine":59,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1684","line":60,"column":3,"nodeType":"1552","messageId":"1553","endLine":60,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1685","line":63,"column":3,"nodeType":"1552","messageId":"1553","endLine":63,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1616","line":64,"column":3,"nodeType":"1552","messageId":"1553","endLine":64,"endColumn":9},{"ruleId":"1583","severity":1,"message":"1686","line":97,"column":1,"nodeType":"1585","endLine":214,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":85,"column":6,"nodeType":"1561","endLine":85,"endColumn":13,"suggestions":"1687"},{"ruleId":"1583","severity":1,"message":"1584","line":93,"column":1,"nodeType":"1585","endLine":197,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1688","line":139,"column":6,"nodeType":"1561","endLine":139,"endColumn":8,"suggestions":"1689"},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":25,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1614","line":5,"column":3,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1616","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1611","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":5},{"ruleId":"1550","severity":1,"message":"1612","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1669","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1668","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1664","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1665","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1679","line":13,"column":3,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1678","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1663","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1662","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1661","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1675","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1674","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1673","line":20,"column":3,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1659","line":21,"column":3,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1683","line":22,"column":3,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1667","line":23,"column":3,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1684","line":24,"column":3,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1666","line":25,"column":3,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1658","line":26,"column":3,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1660","line":27,"column":3,"nodeType":"1552","messageId":"1553","endLine":27,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1649","line":28,"column":3,"nodeType":"1552","messageId":"1553","endLine":28,"endColumn":16},{"ruleId":"1583","severity":1,"message":"1584","line":41,"column":1,"nodeType":"1585","endLine":87,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1604","line":3,"column":8,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1690","line":5,"column":3,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1602","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1691","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1692","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1693","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1694","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1695","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1696","line":21,"column":8,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1697","line":25,"column":10,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":20},{"ruleId":"1559","severity":1,"message":"1698","line":82,"column":6,"nodeType":"1561","endLine":82,"endColumn":45,"suggestions":"1699"},{"ruleId":"1559","severity":1,"message":"1700","line":86,"column":6,"nodeType":"1561","endLine":86,"endColumn":39,"suggestions":"1701"},{"ruleId":"1559","severity":1,"message":"1702","line":86,"column":15,"nodeType":"1703","endLine":86,"endColumn":38},{"ruleId":"1550","severity":1,"message":"1704","line":112,"column":9,"nodeType":"1552","messageId":"1553","endLine":112,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1705","line":120,"column":9,"nodeType":"1552","messageId":"1553","endLine":120,"endColumn":21},{"ruleId":"1559","severity":1,"message":"1706","line":20,"column":6,"nodeType":"1561","endLine":20,"endColumn":8,"suggestions":"1707"},{"ruleId":"1550","severity":1,"message":"1658","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1659","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":6},{"ruleId":"1550","severity":1,"message":"1660","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1611","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":5},{"ruleId":"1550","severity":1,"message":"1661","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1662","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1663","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1664","line":13,"column":3,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1665","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1612","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1666","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1667","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1668","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1669","line":20,"column":3,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1708","line":24,"column":3,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1649","line":26,"column":3,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1614","line":27,"column":3,"nodeType":"1552","messageId":"1553","endLine":27,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1673","line":28,"column":3,"nodeType":"1552","messageId":"1553","endLine":28,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1674","line":29,"column":3,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1675","line":30,"column":3,"nodeType":"1552","messageId":"1553","endLine":30,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1678","line":34,"column":3,"nodeType":"1552","messageId":"1553","endLine":34,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1679","line":35,"column":3,"nodeType":"1552","messageId":"1553","endLine":35,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1615","line":37,"column":3,"nodeType":"1552","messageId":"1553","endLine":37,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1709","line":38,"column":3,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1683","line":39,"column":3,"nodeType":"1552","messageId":"1553","endLine":39,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1684","line":40,"column":3,"nodeType":"1552","messageId":"1553","endLine":40,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1650","line":41,"column":3,"nodeType":"1552","messageId":"1553","endLine":41,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1616","line":42,"column":3,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1710","line":54,"column":7,"nodeType":"1552","messageId":"1553","endLine":54,"endColumn":25},{"ruleId":"1583","severity":1,"message":"1584","line":75,"column":1,"nodeType":"1585","endLine":94,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1711","line":2,"column":42,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":48},{"ruleId":"1550","severity":1,"message":"1712","line":5,"column":8,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1571","line":6,"column":10,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1713","line":7,"column":10,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1714","line":7,"column":20,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1715","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1716","line":7,"column":10,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1717","line":8,"column":10,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1718","line":13,"column":11,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1719","line":23,"column":10,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1646","line":24,"column":10,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1570","line":25,"column":10,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1720","line":2,"column":16,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1721","line":2,"column":24,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":32},{"ruleId":"1550","severity":1,"message":"1722","line":2,"column":34,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":40},{"ruleId":"1559","severity":1,"message":"1723","line":25,"column":6,"nodeType":"1561","endLine":25,"endColumn":8,"suggestions":"1724"},{"ruleId":"1550","severity":1,"message":"1661","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1662","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1663","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1664","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1665","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1668","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1669","line":13,"column":3,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1673","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1674","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1675","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1678","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1679","line":20,"column":3,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":7},{"ruleId":"1550","severity":1,"message":"1617","line":25,"column":10,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":24},{"ruleId":"1559","severity":1,"message":"1725","line":114,"column":6,"nodeType":"1561","endLine":114,"endColumn":42,"suggestions":"1726"},{"ruleId":"1546","replacedBy":"1727"},{"ruleId":"1548","replacedBy":"1728"},{"ruleId":"1550","severity":1,"message":"1598","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1729","line":3,"column":8,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1730","line":23,"column":10,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":21},{"ruleId":"1559","severity":1,"message":"1731","line":43,"column":6,"nodeType":"1561","endLine":43,"endColumn":41,"suggestions":"1732"},{"ruleId":"1550","severity":1,"message":"1733","line":57,"column":9,"nodeType":"1552","messageId":"1553","endLine":57,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1734","line":12,"column":10,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1735","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1736","line":24,"column":9,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":18},{"ruleId":"1559","severity":1,"message":"1737","line":46,"column":6,"nodeType":"1561","endLine":46,"endColumn":21,"suggestions":"1738"},{"ruleId":"1550","severity":1,"message":"1646","line":1,"column":17,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1739","line":1,"column":28,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":36},{"ruleId":"1583","severity":1,"message":"1584","line":13,"column":1,"nodeType":"1585","endLine":34,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":19,"column":6,"nodeType":"1561","endLine":19,"endColumn":26,"suggestions":"1740"},{"ruleId":"1550","severity":1,"message":"1741","line":1,"column":26,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":32},{"ruleId":"1550","severity":1,"message":"1646","line":2,"column":17,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1711","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1705","line":9,"column":20,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":32},{"ruleId":"1550","severity":1,"message":"1610","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1637","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1742","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1743","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":8},{"ruleId":"1550","severity":1,"message":"1638","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1639","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1554","line":18,"column":10,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1744","line":18,"column":19,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1596","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1646","line":2,"column":17,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1739","line":2,"column":28,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":36},{"ruleId":"1550","severity":1,"message":"1745","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1746","line":16,"column":11,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":17},{"ruleId":"1583","severity":1,"message":"1608","line":1,"column":1,"nodeType":"1585","endLine":3,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1571","line":2,"column":31,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":38},{"ruleId":"1559","severity":1,"message":"1747","line":24,"column":6,"nodeType":"1561","endLine":24,"endColumn":18,"suggestions":"1748"},{"ruleId":"1550","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1749","line":42,"column":10,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1750","line":42,"column":29,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":47},{"ruleId":"1559","severity":1,"message":"1731","line":66,"column":6,"nodeType":"1561","endLine":66,"endColumn":41,"suggestions":"1751"},{"ruleId":"1550","severity":1,"message":"1615","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1598","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":28},{"ruleId":"1559","severity":1,"message":"1731","line":14,"column":6,"nodeType":"1561","endLine":14,"endColumn":41,"suggestions":"1752"},{"ruleId":"1550","severity":1,"message":"1739","line":1,"column":17,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1753","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1650","line":21,"column":10,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1754","line":3,"column":22,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1755","line":10,"column":10,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":27},{"ruleId":"1559","severity":1,"message":"1756","line":20,"column":6,"nodeType":"1561","endLine":20,"endColumn":45,"suggestions":"1757"},{"ruleId":"1550","severity":1,"message":"1758","line":1,"column":8,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":12},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":11,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1754","line":1,"column":18,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1759","line":1,"column":32,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1691","line":4,"column":3,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1760","line":5,"column":3,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1761","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1692","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1694","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1646","line":10,"column":17,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1739","line":10,"column":28,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":36},{"ruleId":"1550","severity":1,"message":"1762","line":12,"column":10,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1763","line":12,"column":16,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1613","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1764","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1708","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1597","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1615","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1695","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1765","line":22,"column":8,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1766","line":24,"column":8,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1767","line":30,"column":8,"nodeType":"1552","messageId":"1553","endLine":30,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1766","line":31,"column":8,"nodeType":"1552","messageId":"1553","endLine":31,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1768","line":32,"column":8,"nodeType":"1552","messageId":"1553","endLine":32,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1769","line":34,"column":8,"nodeType":"1552","messageId":"1553","endLine":34,"endColumn":32},{"ruleId":"1550","severity":1,"message":"1770","line":36,"column":8,"nodeType":"1552","messageId":"1553","endLine":36,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1771","line":40,"column":53,"nodeType":"1552","messageId":"1553","endLine":40,"endColumn":72},{"ruleId":"1550","severity":1,"message":"1772","line":48,"column":13,"nodeType":"1552","messageId":"1553","endLine":48,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1708","line":1,"column":18,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1773","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":11},{"ruleId":"1774","severity":1,"message":"1775","line":58,"column":25,"nodeType":"1567","endLine":58,"endColumn":28},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":15,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":8,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1776","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1777","line":13,"column":10,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":18},{"ruleId":"1583","severity":1,"message":"1584","line":16,"column":1,"nodeType":"1585","endLine":37,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":22,"column":6,"nodeType":"1561","endLine":22,"endColumn":8,"suggestions":"1778"},{"ruleId":"1550","severity":1,"message":"1779","line":1,"column":8,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"1780","line":15,"column":5},{"ruleId":"1550","severity":1,"message":"1781","line":1,"column":8,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1782","line":1,"column":8,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":27},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":19,"endColumn":2},{"ruleId":"1783","severity":1,"message":"1784","line":50,"column":55,"nodeType":"1785","messageId":"1786","endLine":50,"endColumn":57},{"ruleId":"1550","severity":1,"message":"1773","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1769","line":29,"column":8,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":32},{"ruleId":"1550","severity":1,"message":"1787","line":36,"column":3,"nodeType":"1552","messageId":"1553","endLine":36,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1788","line":82,"column":11,"nodeType":"1552","messageId":"1553","endLine":82,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1789","line":83,"column":13,"nodeType":"1552","messageId":"1553","endLine":83,"endColumn":20},{"ruleId":"1783","severity":1,"message":"1784","line":83,"column":37,"nodeType":"1785","messageId":"1786","endLine":83,"endColumn":39},{"ruleId":"1550","severity":1,"message":"1790","line":234,"column":11,"nodeType":"1552","messageId":"1553","endLine":234,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1790","line":265,"column":9,"nodeType":"1552","messageId":"1553","endLine":265,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1776","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1791","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1777","line":14,"column":10,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1556","line":15,"column":10,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":17},{"ruleId":"1583","severity":1,"message":"1584","line":18,"column":1,"nodeType":"1585","endLine":39,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":24,"column":6,"nodeType":"1561","endLine":24,"endColumn":8,"suggestions":"1792"},{"ruleId":"1550","severity":1,"message":"1754","line":1,"column":18,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1759","line":1,"column":32,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1646","line":3,"column":17,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1739","line":3,"column":28,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":36},{"ruleId":"1550","severity":1,"message":"1762","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1763","line":5,"column":16,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1613","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1764","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1708","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1597","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1615","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1695","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1793","line":22,"column":5,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1759","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1691","line":3,"column":3,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1760","line":4,"column":3,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1761","line":5,"column":3,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1692","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1694","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1613","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1764","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1708","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1794","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1773","line":19,"column":3,"nodeType":"1552","messageId":"1553","endLine":19,"endColumn":11},{"ruleId":"1550","severity":1,"message":"1615","line":20,"column":3,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":12},{"ruleId":"1550","severity":1,"message":"1695","line":21,"column":3,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":9},{"ruleId":"1550","severity":1,"message":"1795","line":23,"column":8,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1796","line":25,"column":3,"nodeType":"1552","messageId":"1553","endLine":25,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1797","line":26,"column":3,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1798","line":48,"column":25,"nodeType":"1552","messageId":"1553","endLine":48,"endColumn":41},{"ruleId":"1583","severity":1,"message":"1584","line":7,"column":1,"nodeType":"1585","endLine":15,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":11,"column":1,"nodeType":"1585","endLine":51,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":16,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":2,"column":1,"nodeType":"1585","endLine":48,"endColumn":2},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":18,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1711","line":2,"column":16,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1799","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1800","line":1,"column":24,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1711","line":1,"column":35,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":41},{"ruleId":"1550","severity":1,"message":"1739","line":2,"column":17,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1646","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1795","line":4,"column":8,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":23},{"ruleId":"1583","severity":1,"message":"1584","line":9,"column":1,"nodeType":"1585","endLine":29,"endColumn":2},{"ruleId":"1801","severity":1,"message":"1802","line":4,"column":3,"nodeType":"1803","messageId":"1804","endLine":4,"endColumn":19},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":9,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1746","line":44,"column":11,"nodeType":"1552","messageId":"1553","endLine":44,"endColumn":17},{"ruleId":"1559","severity":1,"message":"1805","line":65,"column":6,"nodeType":"1561","endLine":65,"endColumn":28,"suggestions":"1806"},{"ruleId":"1550","severity":1,"message":"1807","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1776","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1791","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1808","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":10},{"ruleId":"1550","severity":1,"message":"1777","line":16,"column":10,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1556","line":17,"column":10,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1809","line":18,"column":8,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":27},{"ruleId":"1583","severity":1,"message":"1584","line":21,"column":1,"nodeType":"1585","endLine":42,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":27,"column":6,"nodeType":"1561","endLine":27,"endColumn":8,"suggestions":"1810"},{"ruleId":"1550","severity":1,"message":"1754","line":1,"column":22,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1711","line":1,"column":29,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1583","severity":1,"message":"1584","line":9,"column":1,"nodeType":"1585","endLine":80,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1811","line":15,"column":9,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":26},{"ruleId":"1774","severity":1,"message":"1775","line":24,"column":16,"nodeType":"1567","endLine":24,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1812","line":9,"column":8,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":10},{"ruleId":"1583","severity":1,"message":"1584","line":11,"column":1,"nodeType":"1585","endLine":94,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1813","line":13,"column":10,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1814","line":13,"column":30,"nodeType":"1552","messageId":"1553","endLine":13,"endColumn":51},{"ruleId":"1559","severity":1,"message":"1815","line":38,"column":6,"nodeType":"1561","endLine":38,"endColumn":8,"suggestions":"1816"},{"ruleId":"1550","severity":1,"message":"1762","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1643","line":3,"column":16,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1763","line":3,"column":29,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":37},{"ruleId":"1550","severity":1,"message":"1817","line":4,"column":10,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1794","line":4,"column":20,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":30},{"ruleId":"1550","severity":1,"message":"1818","line":7,"column":8,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1819","line":8,"column":8,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":20},{"ruleId":"1559","severity":1,"message":"1820","line":15,"column":6,"nodeType":"1561","endLine":15,"endColumn":8,"suggestions":"1821"},{"ruleId":"1583","severity":1,"message":"1584","line":1,"column":1,"nodeType":"1585","endLine":14,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1604","line":2,"column":25,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":30},{"ruleId":"1550","severity":1,"message":"1822","line":2,"column":32,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":39},{"ruleId":"1550","severity":1,"message":"1823","line":2,"column":41,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":47},{"ruleId":"1550","severity":1,"message":"1554","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1570","line":4,"column":10,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1568","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1824","line":6,"column":10,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1796","line":7,"column":10,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1825","line":8,"column":8,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":31},{"ruleId":"1550","severity":1,"message":"1826","line":9,"column":8,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":25},{"ruleId":"1559","severity":1,"message":"1820","line":19,"column":6,"nodeType":"1561","endLine":19,"endColumn":8,"suggestions":"1827"},{"ruleId":"1774","severity":1,"message":"1775","line":27,"column":16,"nodeType":"1567","endLine":27,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1796","line":8,"column":10,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1826","line":10,"column":8,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1828","line":12,"column":7,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1829","line":22,"column":9,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":27},{"ruleId":"1559","severity":1,"message":"1830","line":40,"column":6,"nodeType":"1561","endLine":40,"endColumn":15,"suggestions":"1831"},{"ruleId":"1832","severity":1,"message":"1833","line":95,"column":15,"nodeType":"1834","endLine":95,"endColumn":45},{"ruleId":"1832","severity":1,"message":"1833","line":108,"column":15,"nodeType":"1834","endLine":108,"endColumn":46},{"ruleId":"1832","severity":1,"message":"1833","line":121,"column":15,"nodeType":"1834","endLine":121,"endColumn":51},{"ruleId":"1774","severity":1,"message":"1775","line":17,"column":16,"nodeType":"1567","endLine":17,"endColumn":57},{"ruleId":"1559","severity":1,"message":"1835","line":12,"column":6,"nodeType":"1561","endLine":12,"endColumn":19,"suggestions":"1836"},{"ruleId":"1550","severity":1,"message":"1711","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":16},{"ruleId":"1559","severity":1,"message":"1837","line":61,"column":6,"nodeType":"1561","endLine":61,"endColumn":13,"suggestions":"1838"},{"ruleId":"1550","severity":1,"message":"1807","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1776","line":11,"column":3,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1791","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1777","line":15,"column":10,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1556","line":16,"column":10,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1809","line":17,"column":8,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":27},{"ruleId":"1583","severity":1,"message":"1584","line":20,"column":1,"nodeType":"1585","endLine":41,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":26,"column":6,"nodeType":"1561","endLine":26,"endColumn":8,"suggestions":"1839"},{"ruleId":"1550","severity":1,"message":"1577","line":2,"column":8,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1840","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1841","line":16,"column":3,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1842","line":17,"column":3,"nodeType":"1552","messageId":"1553","endLine":17,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1716","line":20,"column":10,"nodeType":"1552","messageId":"1553","endLine":20,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1711","line":21,"column":10,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1843","line":22,"column":8,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1795","line":23,"column":8,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1844","line":26,"column":10,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1845","line":38,"column":10,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1846","line":38,"column":21,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":33},{"ruleId":"1550","severity":1,"message":"1847","line":40,"column":19,"nodeType":"1552","messageId":"1553","endLine":40,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1848","line":41,"column":10,"nodeType":"1552","messageId":"1553","endLine":41,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1849","line":42,"column":10,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1850","line":43,"column":10,"nodeType":"1552","messageId":"1553","endLine":43,"endColumn":19},{"ruleId":"1559","severity":1,"message":"1563","line":47,"column":6,"nodeType":"1561","endLine":47,"endColumn":8,"suggestions":"1851"},{"ruleId":"1550","severity":1,"message":"1852","line":49,"column":9,"nodeType":"1552","messageId":"1553","endLine":49,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1853","line":54,"column":9,"nodeType":"1552","messageId":"1553","endLine":54,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1854","line":55,"column":11,"nodeType":"1552","messageId":"1553","endLine":55,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1739","line":1,"column":17,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1762","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1643","line":3,"column":16,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1763","line":3,"column":29,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":37},{"ruleId":"1550","severity":1,"message":"1817","line":4,"column":10,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1794","line":4,"column":20,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":30},{"ruleId":"1550","severity":1,"message":"1770","line":6,"column":8,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1818","line":7,"column":8,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1819","line":8,"column":8,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1554","line":4,"column":10,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1744","line":4,"column":19,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1697","line":4,"column":31,"nodeType":"1552","messageId":"1553","endLine":4,"endColumn":41},{"ruleId":"1550","severity":1,"message":"1713","line":5,"column":10,"nodeType":"1552","messageId":"1553","endLine":5,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1855","line":7,"column":10,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1578","line":8,"column":18,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1856","line":10,"column":8,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1760","line":23,"column":3,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1763","line":29,"column":10,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":18},{"ruleId":"1559","severity":1,"message":"1857","line":94,"column":6,"nodeType":"1561","endLine":94,"endColumn":18,"suggestions":"1858"},{"ruleId":"1550","severity":1,"message":"1859","line":96,"column":9,"nodeType":"1552","messageId":"1553","endLine":96,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1823","line":2,"column":25,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":31},{"ruleId":"1550","severity":1,"message":"1648","line":16,"column":10,"nodeType":"1552","messageId":"1553","endLine":16,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1860","line":23,"column":9,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1861","line":26,"column":18,"nodeType":"1552","messageId":"1553","endLine":26,"endColumn":27},{"ruleId":"1550","severity":1,"message":"1862","line":27,"column":10,"nodeType":"1552","messageId":"1553","endLine":27,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1863","line":29,"column":10,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1864","line":29,"column":28,"nodeType":"1552","messageId":"1553","endLine":29,"endColumn":47},{"ruleId":"1865","severity":1,"message":"1866","line":37,"column":68,"nodeType":"1867","messageId":"1868","endLine":37,"endColumn":70},{"ruleId":"1559","severity":1,"message":"1869","line":180,"column":6,"nodeType":"1561","endLine":180,"endColumn":38,"suggestions":"1870"},{"ruleId":"1871","severity":1,"message":"1872","line":269,"column":9,"nodeType":"1873","messageId":"1868","endLine":269,"endColumn":20},{"ruleId":"1583","severity":1,"message":"1584","line":11,"column":1,"nodeType":"1585","endLine":32,"endColumn":2},{"ruleId":"1559","severity":1,"message":"1563","line":17,"column":6,"nodeType":"1561","endLine":17,"endColumn":8,"suggestions":"1874"},{"ruleId":"1550","severity":1,"message":"1604","line":1,"column":30,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1722","line":1,"column":37,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":43},{"ruleId":"1550","severity":1,"message":"1759","line":1,"column":52,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":55},{"ruleId":"1550","severity":1,"message":"1875","line":33,"column":3,"nodeType":"1552","messageId":"1553","endLine":33,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1876","line":35,"column":8,"nodeType":"1552","messageId":"1553","endLine":35,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1877","line":37,"column":3,"nodeType":"1552","messageId":"1553","endLine":37,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1878","line":40,"column":8,"nodeType":"1552","messageId":"1553","endLine":40,"endColumn":17},{"ruleId":"1559","severity":1,"message":"1644","line":61,"column":6,"nodeType":"1561","endLine":61,"endColumn":30,"suggestions":"1879"},{"ruleId":"1559","severity":1,"message":"1654","line":65,"column":6,"nodeType":"1561","endLine":65,"endColumn":16,"suggestions":"1880"},{"ruleId":"1550","severity":1,"message":"1881","line":158,"column":9,"nodeType":"1552","messageId":"1553","endLine":158,"endColumn":25},{"ruleId":"1774","severity":1,"message":"1775","line":197,"column":16,"nodeType":"1567","endLine":197,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":206,"column":16,"nodeType":"1567","endLine":206,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":306,"column":30,"nodeType":"1567","endLine":306,"endColumn":33},{"ruleId":"1774","severity":1,"message":"1775","line":336,"column":30,"nodeType":"1567","endLine":336,"endColumn":33},{"ruleId":"1882","severity":1,"message":"1883","line":588,"column":1,"nodeType":"1884","messageId":"1885","endLine":605,"endColumn":2},{"ruleId":"1882","severity":1,"message":"1883","line":606,"column":1,"nodeType":"1884","messageId":"1885","endLine":640,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1646","line":1,"column":17,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":26},{"ruleId":"1886","severity":1,"message":"1887","line":28,"column":21,"nodeType":"1567","endLine":34,"endColumn":23},{"ruleId":"1886","severity":1,"message":"1887","line":44,"column":26,"nodeType":"1567","endLine":44,"endColumn":68},{"ruleId":"1550","severity":1,"message":"1604","line":1,"column":30,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1722","line":1,"column":37,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":43},{"ruleId":"1550","severity":1,"message":"1877","line":38,"column":3,"nodeType":"1552","messageId":"1553","endLine":38,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1878","line":41,"column":8,"nodeType":"1552","messageId":"1553","endLine":41,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1888","line":57,"column":10,"nodeType":"1552","messageId":"1553","endLine":57,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1889","line":58,"column":10,"nodeType":"1552","messageId":"1553","endLine":58,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1890","line":59,"column":19,"nodeType":"1552","messageId":"1553","endLine":59,"endColumn":29},{"ruleId":"1559","severity":1,"message":"1644","line":62,"column":6,"nodeType":"1561","endLine":62,"endColumn":30,"suggestions":"1891"},{"ruleId":"1559","severity":1,"message":"1654","line":66,"column":6,"nodeType":"1561","endLine":66,"endColumn":16,"suggestions":"1892"},{"ruleId":"1774","severity":1,"message":"1775","line":219,"column":16,"nodeType":"1567","endLine":219,"endColumn":19},{"ruleId":"1774","severity":1,"message":"1775","line":228,"column":16,"nodeType":"1567","endLine":228,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1893","line":233,"column":9,"nodeType":"1552","messageId":"1553","endLine":233,"endColumn":23},{"ruleId":"1774","severity":1,"message":"1775","line":335,"column":30,"nodeType":"1567","endLine":335,"endColumn":33},{"ruleId":"1783","severity":1,"message":"1894","line":350,"column":34,"nodeType":"1785","messageId":"1786","endLine":350,"endColumn":36},{"ruleId":"1774","severity":1,"message":"1775","line":369,"column":30,"nodeType":"1567","endLine":369,"endColumn":33},{"ruleId":"1783","severity":1,"message":"1894","line":581,"column":37,"nodeType":"1785","messageId":"1786","endLine":581,"endColumn":39},{"ruleId":"1882","severity":1,"message":"1883","line":614,"column":1,"nodeType":"1884","messageId":"1885","endLine":715,"endColumn":2},{"ruleId":"1882","severity":1,"message":"1883","line":717,"column":1,"nodeType":"1884","messageId":"1885","endLine":734,"endColumn":2},{"ruleId":"1882","severity":1,"message":"1883","line":735,"column":1,"nodeType":"1884","messageId":"1885","endLine":769,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1578","line":2,"column":25,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":30},{"ruleId":"1550","severity":1,"message":"1895","line":3,"column":10,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1754","line":3,"column":24,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":29},{"ruleId":"1550","severity":1,"message":"1896","line":3,"column":31,"nodeType":"1552","messageId":"1553","endLine":3,"endColumn":37},{"ruleId":"1550","severity":1,"message":"1796","line":7,"column":3,"nodeType":"1552","messageId":"1553","endLine":7,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1897","line":8,"column":3,"nodeType":"1552","messageId":"1553","endLine":8,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1761","line":11,"column":26,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":38},{"ruleId":"1550","severity":1,"message":"1898","line":12,"column":8,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1899","line":14,"column":9,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":17},{"ruleId":"1559","severity":1,"message":"1900","line":43,"column":6,"nodeType":"1561","endLine":43,"endColumn":33,"suggestions":"1901"},{"ruleId":"1550","severity":1,"message":"1902","line":1,"column":18,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1604","line":1,"column":30,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1903","line":6,"column":3,"nodeType":"1552","messageId":"1553","endLine":6,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1897","line":23,"column":3,"nodeType":"1552","messageId":"1553","endLine":23,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1904","line":24,"column":3,"nodeType":"1552","messageId":"1553","endLine":24,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1763","line":36,"column":10,"nodeType":"1552","messageId":"1553","endLine":36,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1877","line":37,"column":20,"nodeType":"1552","messageId":"1553","endLine":37,"endColumn":33},{"ruleId":"1550","severity":1,"message":"1905","line":61,"column":15,"nodeType":"1552","messageId":"1553","endLine":61,"endColumn":30},{"ruleId":"1550","severity":1,"message":"1906","line":62,"column":15,"nodeType":"1552","messageId":"1553","endLine":62,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1907","line":2,"column":8,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1908","line":11,"column":16,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1909","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1910","line":15,"column":3,"nodeType":"1552","messageId":"1553","endLine":15,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1719","line":18,"column":3,"nodeType":"1552","messageId":"1553","endLine":18,"endColumn":14},{"ruleId":"1550","severity":1,"message":"1911","line":21,"column":8,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1912","line":145,"column":17,"nodeType":"1552","messageId":"1553","endLine":145,"endColumn":21},{"ruleId":"1550","severity":1,"message":"1913","line":154,"column":17,"nodeType":"1552","messageId":"1553","endLine":154,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1914","line":155,"column":17,"nodeType":"1552","messageId":"1553","endLine":155,"endColumn":29},{"ruleId":"1559","severity":1,"message":"1563","line":169,"column":6,"nodeType":"1561","endLine":169,"endColumn":8,"suggestions":"1915"},{"ruleId":"1916","severity":1,"message":"1917","line":4,"column":15,"nodeType":"1918","messageId":"1919","endLine":4,"endColumn":16,"suggestions":"1920"},{"ruleId":"1916","severity":1,"message":"1917","line":4,"column":40,"nodeType":"1918","messageId":"1919","endLine":4,"endColumn":41,"suggestions":"1921"},{"ruleId":"1550","severity":1,"message":"1909","line":14,"column":3,"nodeType":"1552","messageId":"1553","endLine":14,"endColumn":13},{"ruleId":"1550","severity":1,"message":"1911","line":21,"column":8,"nodeType":"1552","messageId":"1553","endLine":21,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1922","line":34,"column":13,"nodeType":"1552","messageId":"1553","endLine":34,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1912","line":36,"column":13,"nodeType":"1552","messageId":"1553","endLine":36,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1913","line":41,"column":13,"nodeType":"1552","messageId":"1553","endLine":41,"endColumn":22},{"ruleId":"1550","severity":1,"message":"1914","line":42,"column":13,"nodeType":"1552","messageId":"1553","endLine":42,"endColumn":25},{"ruleId":"1550","severity":1,"message":"1923","line":44,"column":13,"nodeType":"1552","messageId":"1553","endLine":44,"endColumn":18},{"ruleId":"1550","severity":1,"message":"1924","line":46,"column":13,"nodeType":"1552","messageId":"1553","endLine":46,"endColumn":23},{"ruleId":"1583","severity":1,"message":"1584","line":3,"column":1,"nodeType":"1585","endLine":15,"endColumn":2},{"ruleId":"1550","severity":1,"message":"1646","line":1,"column":17,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":26},{"ruleId":"1550","severity":1,"message":"1646","line":2,"column":10,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1925","line":9,"column":10,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":19},{"ruleId":"1550","severity":1,"message":"1926","line":11,"column":21,"nodeType":"1552","messageId":"1553","endLine":11,"endColumn":33},{"ruleId":"1550","severity":1,"message":"1595","line":77,"column":11,"nodeType":"1552","messageId":"1553","endLine":77,"endColumn":23},{"ruleId":"1550","severity":1,"message":"1812","line":2,"column":8,"nodeType":"1552","messageId":"1553","endLine":2,"endColumn":10},{"ruleId":"1559","severity":1,"message":"1644","line":8,"column":6,"nodeType":"1561","endLine":8,"endColumn":8,"suggestions":"1927"},{"ruleId":"1559","severity":1,"message":"1928","line":57,"column":6,"nodeType":"1561","endLine":57,"endColumn":54,"suggestions":"1929"},{"ruleId":"1550","severity":1,"message":"1796","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":24},{"ruleId":"1550","severity":1,"message":"1711","line":1,"column":10,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":16},{"ruleId":"1550","severity":1,"message":"1902","line":1,"column":18,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":28},{"ruleId":"1550","severity":1,"message":"1604","line":1,"column":30,"nodeType":"1552","messageId":"1553","endLine":1,"endColumn":35},{"ruleId":"1550","severity":1,"message":"1903","line":9,"column":3,"nodeType":"1552","messageId":"1553","endLine":9,"endColumn":20},{"ruleId":"1550","severity":1,"message":"1930","line":10,"column":3,"nodeType":"1552","messageId":"1553","endLine":10,"endColumn":15},{"ruleId":"1550","severity":1,"message":"1931","line":12,"column":3,"nodeType":"1552","messageId":"1553","endLine":12,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1796","line":22,"column":3,"nodeType":"1552","messageId":"1553","endLine":22,"endColumn":17},{"ruleId":"1550","severity":1,"message":"1932","line":28,"column":7,"nodeType":"1552","messageId":"1553","endLine":28,"endColumn":18},"no-native-reassign",["1933"],"no-negated-in-lhs",["1934"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'addData' is defined but never used.","'selectMenuSlice' is defined but never used.","'Reports' is defined but never used.","'ExcelExporter' is defined but never used.","'uid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateInfo'. Either include it or remove the dependency array.","ArrayExpression",["1935"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1936"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'selectUserSlice' is defined but never used.","'userSlice' is defined but never used.","'useSelector' is defined but never used.","'getData' is defined but never used.","React Hook useEffect has a missing dependency: 'loadModules'. Either include it or remove the dependency array.",["1937"],"'replace' is defined but never used.","'replaceArrayData' is defined but never used.",["1938"],"'ScheduleComponent' is defined but never used.","'Table' is defined but never used.","'toolbarOptions' is defined but never used.","'editSettings' is defined but never used.",["1939"],["1940"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["1941"],"'MENU_GROUP_HEADERS' is defined but never used.","'getAmount' is defined but never used.","'menu' is defined but never used.","'dropdowns' is assigned a value but never used.","'columnWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'userComponentSlice.branches', and 'widths'. Either include them or remove the dependency array.",["1942"],"'sortSettings' is assigned a value but never used.","'setWithMerge' is assigned a value but never used.","'TextBoxComponent' is defined but never used.","'LABELS' is defined but never used.","'PARTNER_MERCHANT_ORDER_NO' is defined but never used.","'REMARKS' is defined but never used.","'clearOrderNos' is defined but never used.","'setOrderViaField' is defined but never used.","'INPUT' is defined but never used.","'useGetDropdownGroup' is defined but never used.","'Input' is defined but never used.","'OrderVia' is defined but never used.","React Hook useEffect has missing dependencies: 'countLibis' and 'countRonac'. Either include them or remove the dependency array.",["1943"],"Assign arrow function to a variable before exporting as module default","'DragAndDrop' is defined but never used.","'Resize' is defined but never used.","'BC' is defined but never used.","'BC_HALF' is defined but never used.","'CONTACT_NUMBER' is defined but never used.","'EIGHT' is defined but never used.","'ORDER_VIA' is defined but never used.","'TWELVE' is defined but never used.","'DROPDOWN_DATAS' is defined but never used.","'identifyDateRange' is defined but never used.","'getDaysInMonthUTC' is defined but never used.","'Backdrop' is defined but never used.","'CustomButton' is defined but never used.","'getWeekOfDate' is defined but never used.","'setDataSource' is assigned a value but never used.","'branchSelection' is assigned a value but never used.","'setBranchSelection' is assigned a value but never used.","'orderSlipData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eventSettings' and 'stop'. Either include them or remove the dependency array. You can also do a functional update 'setEventSettings(e => ...)' if you only need 'eventSettings' in the 'setEventSettings' call.",["1944"],"React Hook useEffect has a missing dependency: 'eventSettings'. Either include it or remove the dependency array. You can also do a functional update 'setEventSettings(e => ...)' if you only need 'eventSettings' in the 'setEventSettings' call.",["1945"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setLoading'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1946"],["1947"],"'branchColors' is assigned a value but never used.","'partnerMerchant' is assigned a value but never used.","'orderVia' is assigned a value but never used.","'ContextMenu' is defined but never used.","'PdfExport' is defined but never used.","'Search' is defined but never used.","'ACCOUNT_NAME' is defined but never used.","'INDICATE_REASON' is defined but never used.","'orderSlipConfig' is defined but never used.","'DESCRIPTION' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["1948"],"'useEffect' is defined but never used.","'IoMdClose' is defined but never used.","'update' is defined but never used.","'DELIVERY_DATE' is defined but never used.","'STATUS' is defined but never used.","'Label2' is defined but never used.","'triggeredClicked' is assigned a value but never used.","'saveGroupDropdowns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadDropdowns'. Either include it or remove the dependency array.",["1949"],"'getBranch' is assigned a value but never used.",["1950"],"'ATCHARA' is defined but never used.","'BAO' is defined but never used.","'BASTING_SAUCE' is defined but never used.","'BCJ_1' is defined but never used.","'BCJ_2' is defined but never used.","'BCJ_4' is defined but never used.","'BC_2' is defined but never used.","'BC_4' is defined but never used.","'BC_SAUCE' is defined but never used.","'CHILI_OIL' is defined but never used.","'CH_12' is defined but never used.","'CH_8' is defined but never used.","'CH_8_PS' is defined but never used.","'CL_12' is defined but never used.","'CL_8' is defined but never used.","'FBC_4' is defined but never used.","'FCH_12' is defined but never used.","'FCH_8' is defined but never used.","'ID' is defined but never used.","'JV_1' is defined but never used.","'JV_2' is defined but never used.","'JV_4' is defined but never used.","'M_A' is defined but never used.","'M_B' is defined but never used.","'PRT' is defined but never used.","'REPAER' is defined but never used.","'SPICED_VINEGAR' is defined but never used.","'TOTAL' is defined but never used.","Assign array to a variable before exporting as module default",["1951"],"React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["1952"],"'DATE_PICKER' is defined but never used.","'ACCOUNT_NUMBER' is defined but never used.","'MODE_PAYMENT' is defined but never used.","'PAYMENT_LABELS' is defined but never used.","'REF_NO' is defined but never used.","'SOURCE' is defined but never used.","'CustomDialog' is defined but never used.","'updateData' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateBalance' and 'tableSlice'. Either include them or remove the dependency array.",["1953"],"React Hook useEffect has missing dependencies: 'calculateBalance' and 'formFields'. Either include them or remove the dependency array.",["1954"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'handleOthers' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.list' and 'props.name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.",["1955"],"'DATE_ORDER_PLACED' is defined but never used.","'PAYMENT_MODE' is defined but never used.","'checkIfValidNumber' is assigned a value but never used.","'Button' is defined but never used.","'Tags' is defined but never used.","'BRANCHES' is defined but never used.","'ROLES' is defined but never used.","'GRILL_RESERVATION' is defined but never used.","'FilteringPanel' is defined but never used.","'Grid' is defined but never used.","'selectedMenu' is assigned a value but never used.","'Description' is defined but never used.","'Avatar' is defined but never used.","'Dropdown' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has missing dependencies: 'branchValues' and 'roleValues'. Either include them or remove the dependency array. If 'setValues' needs the current value of 'branchValues', you can also switch to useReducer instead of useState and read 'branchValues' in the reducer.",["1956"],"React Hook useEffect has missing dependencies: 'branchValue', 'dateValue', 'handleFiltering', and 'listOfProducts'. Either include them or remove the dependency array.",["1957"],["1933"],["1934"],"'classes' is defined but never used.","'isDisplayed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadDisplayedSetting'. Either include it or remove the dependency array.",["1958"],"'handleOrderVia' is assigned a value but never used.","'useSelectMenus' is defined but never used.","'AiOutlinePlus' is defined but never used.","'handleAdd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fieldNames'. Either include it or remove the dependency array. You can also do a functional update 'setFieldNames(f => ...)' if you only need 'fieldNames' in the 'setFieldNames' call.",["1959"],"'useState' is defined but never used.",["1960"],"'Footer' is defined but never used.","'ExcelExport' is defined but never used.","'Group' is defined but never used.","'deleteData' is defined but never used.","'isEditable' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUploads'. Either include it or remove the dependency array.",["1961"],"'isPartnerMerchant' is assigned a value but never used.","'setPartnerMerchant' is assigned a value but never used.",["1962"],["1963"],"'Timepicker' is defined but never used.","'Space' is defined but never used.","'documentPrintInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'productLabels' and 'products'. Either include them or remove the dependency array. You can also do a functional update 'setProducts(p => ...)' if you only need 'products' in the 'setProducts' call.",["1964"],"'sort' is defined but never used.","'Tag' is defined but never used.","'AMOUNT_PAID' is defined but never used.","'DATE_PAYMENT' is defined but never used.","'CODE' is defined but never used.","'QUANTITY' is defined but never used.","'CUSTOMER' is defined but never used.","'Controllers' is defined but never used.","'Services' is defined but never used.","'formatNumber' is defined but never used.","'dummy' is defined but never used.","'calculateTotalAmountPaid' is defined but never used.","'sumArray' is defined but never used.","'_productGroupHeader' is assigned a value but never used.","'_endTime' is assigned a value but never used.","'ORDER_NO' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'MASTER_DATA' is defined but never used.","'Products' is defined but never used.",["1965"],"'react' is defined but never used.","Parsing error: Identifier 'data' has already been declared\n\n\u001b[0m \u001b[90m 13 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m  static exportUsersToExcel(\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m    data\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m    workSheetColumnNames\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m    workSheetName\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m    filePath\u001b[0m","'fs' is defined but never used.","'thousandsSeparators' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'lessData' is defined but never used.","'lessValue' is assigned a value but never used.","'dataObj' is assigned a value but never used.","'others' is assigned a value but never used.","'PAYMENT_TRANSACTION' is defined but never used.",["1966"],"'sourceSummary' is assigned a value but never used.","'DATE_START' is defined but never used.","'ProductServices' is defined but never used.","'formatDateDash' is defined but never used.","'formatDateFromDatabase' is defined but never used.","'setSourceSummary' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1967"],"'DIRECT_AND_THIRD_PARTY' is defined but never used.","'REPORTS' is defined but never used.","'DirectAndThirdParty' is defined but never used.",["1968"],"'findRowDataByRRNo' is assigned a value but never used.","'db' is defined but never used.","'originalReportList' is assigned a value but never used.","'setOriginalReportList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadReports'. Either include it or remove the dependency array.",["1969"],"'DATE_END' is defined but never used.","'FilteringPanelMethods' is defined but never used.","'PrintMethods' is defined but never used.","React Hook useEffect has a missing dependency: 'reportData?.items'. Either include it or remove the dependency array.",["1970"],"'Divider' is defined but never used.","'Select' is defined but never used.","'Option' is defined but never used.","'ReceivingReportServices' is defined but never used.","'generatedNoString' is defined but never used.",["1971"],"'produceStateProperty' is assigned a value but never used.","'userComponentSlice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProductList'. Either include it or remove the dependency array.",["1972"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'loadServices'. Either include it or remove the dependency array.",["1973"],"React Hook useEffect has a missing dependency: 'loadLedgers'. Either include it or remove the dependency array.",["1974"],["1975"],"'ToggleBody' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleContainer' is defined but never used.","'ScheduleServices' is defined but never used.","'Progress' is defined but never used.","'isToggled' is assigned a value but never used.","'setIsToggled' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'percent' is assigned a value but never used.","'success' is assigned a value but never used.","'errorList' is assigned a value but never used.",["1976"],"'handleScheduler' is assigned a value but never used.","'handleImport' is assigned a value but never used.","'renewedData' is assigned a value but never used.","'CheckboxGroup' is defined but never used.","'PartnerMerchantModal' is defined but never used.","React Hook React.useEffect has missing dependencies: 'checkboxValues' and 'loadData'. Either include them or remove the dependency array.",["1977"],"'onChange' is assigned a value but never used.","'userSlice' is assigned a value but never used.","'setBranch' is assigned a value but never used.","'dataFetched' is assigned a value but never used.","'branchDatasource' is assigned a value but never used.","'setBranchDatasource' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'checkedChange' and 'checkedIds'. Either include them or remove the dependency array.",["1978"],"no-dupe-keys","Duplicate key 'datePayment'.","ObjectExpression",["1979"],"'ORDER_VIA_PARTNER' is defined but never used.","'LiquidChart' is defined but never used.","'sumArrayDatas' is defined but never used.","'checkDate' is defined but never used.",["1980"],["1981"],"'calculatePercent' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'targetAmount' is assigned a value but never used.","'isSwitch' is assigned a value but never used.","'setTargets' is assigned a value but never used.",["1982"],["1983"],"'getPageMargins' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'Radio' is defined but never used.","'Slider' is defined but never used.","'formatDateSlash' is defined but never used.","'DateTimePicker' is defined but never used.","'TextArea' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["1984"],"'DatePicker' is defined but never used.","'AiFillCloseCircle' is defined but never used.","'formatTime' is defined but never used.","'dateOrderPlaced' is assigned a value but never used.","'dateStart' is assigned a value but never used.","'GoogleButton' is defined but never used.","'provider' is defined but never used.","'Background' is defined but never used.","'GoogleContainer' is defined but never used.","'background' is defined but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.",["1985"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["1986","1987"],["1988","1989"],"'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setRangeData' is assigned a value but never used.",["1990"],"React Hook useEffect has a missing dependency: 'switchHandler'. Either include it or remove the dependency array.",["1991"],"'AiFillFilter' is defined but never used.","'AiOutlineClose' is defined but never used.","'defaultDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1992","fix":"1993"},{"desc":"1994","fix":"1995"},{"desc":"1996","fix":"1997"},{"desc":"1998","fix":"1999"},{"desc":"1998","fix":"2000"},{"desc":"1998","fix":"2001"},{"desc":"2002","fix":"2003"},{"desc":"2004","fix":"2005"},{"desc":"2006","fix":"2007"},{"desc":"2008","fix":"2009"},{"desc":"2010","fix":"2011"},{"desc":"2012","fix":"2013"},{"desc":"1998","fix":"2014"},{"desc":"2015","fix":"2016"},{"desc":"2017","fix":"2018"},{"desc":"2019","fix":"2020"},{"desc":"2021","fix":"2022"},{"desc":"2023","fix":"2024"},{"desc":"2025","fix":"2026"},{"desc":"2027","fix":"2028"},{"desc":"2029","fix":"2030"},{"desc":"2031","fix":"2032"},{"desc":"2033","fix":"2034"},{"desc":"2035","fix":"2036"},{"desc":"2037","fix":"2038"},{"desc":"2002","fix":"2039"},{"desc":"2040","fix":"2041"},{"desc":"2035","fix":"2042"},{"desc":"2035","fix":"2043"},{"desc":"2044","fix":"2045"},{"desc":"1998","fix":"2046"},{"desc":"1998","fix":"2047"},{"desc":"2048","fix":"2049"},{"desc":"1998","fix":"2050"},{"desc":"2051","fix":"2052"},{"desc":"2053","fix":"2054"},{"desc":"2053","fix":"2055"},{"desc":"2056","fix":"2057"},{"desc":"2058","fix":"2059"},{"desc":"2060","fix":"2061"},{"desc":"1998","fix":"2062"},{"desc":"1998","fix":"2063"},{"desc":"2064","fix":"2065"},{"desc":"2066","fix":"2067"},{"desc":"1998","fix":"2068"},{"desc":"2069","fix":"2070"},{"desc":"2071","fix":"2072"},{"desc":"2069","fix":"2073"},{"desc":"2071","fix":"2074"},{"desc":"2075","fix":"2076"},{"desc":"1998","fix":"2077"},{"messageId":"2078","fix":"2079","desc":"2080"},{"messageId":"2081","fix":"2082","desc":"2083"},{"messageId":"2078","fix":"2084","desc":"2080"},{"messageId":"2081","fix":"2085","desc":"2083"},{"desc":"2086","fix":"2087"},{"desc":"2088","fix":"2089"},"Update the dependencies array to be: [updateInfo]",{"range":"2090","text":"2091"},"Update the dependencies array to be: [dispatch, menu]",{"range":"2092","text":"2093"},"Update the dependencies array to be: [loadModules, roles]",{"range":"2094","text":"2095"},"Update the dependencies array to be: [dispatch]",{"range":"2096","text":"2097"},{"range":"2098","text":"2097"},{"range":"2099","text":"2097"},"Update the dependencies array to be: [dispatch, props?.breadcrumbs]",{"range":"2100","text":"2101"},"Update the dependencies array to be: [dispatch, products, userComponentSlice.branches, widths]",{"range":"2102","text":"2103"},"Update the dependencies array to be: [countLibis, countRonac, dataSource, props]",{"range":"2104","text":"2105"},"Update the dependencies array to be: [userComponentSlice, dataSource, stop, eventSettings]",{"range":"2106","text":"2107"},"Update the dependencies array to be: [eventSettings, schedulerComponentSlice.dataSource]",{"range":"2108","text":"2109"},"Update the dependencies array to be: [dispatch, setLoading]",{"range":"2110","text":"2111"},{"range":"2112","text":"2097"},"Update the dependencies array to be: [props?.id, products, loadData]",{"range":"2113","text":"2114"},"Update the dependencies array to be: [collectionName, loadDropdowns]",{"range":"2115","text":"2116"},"Update the dependencies array to be: [loadDropdowns]",{"range":"2117","text":"2118"},"Update the dependencies array to be: [dispatch, total]",{"range":"2119","text":"2120"},"Update the dependencies array to be: [loadProducts]",{"range":"2121","text":"2122"},"Update the dependencies array to be: [props.subTotal, props?.id, dropdowns, tableSlice, calculateBalance]",{"range":"2123","text":"2124"},"Update the dependencies array to be: [calculateBalance, formFields, others]",{"range":"2125","text":"2126"},"Update the dependencies array to be: [props.list, props.name]",{"range":"2127","text":"2128"},"Update the dependencies array to be: [branchValues, roleValues]",{"range":"2129","text":"2130"},"Update the dependencies array to be: [branchValue, dateValue, handleFiltering, listOfProducts, schedulerComponentSlice.dataSource]",{"range":"2131","text":"2132"},"Update the dependencies array to be: [loadDisplayedSetting, orderComponentSlice.orderViaField]",{"range":"2133","text":"2134"},"Update the dependencies array to be: [fieldNames, props?.others]",{"range":"2135","text":"2136"},{"range":"2137","text":"2101"},"Update the dependencies array to be: [documentId, loadUploads]",{"range":"2138","text":"2139"},{"range":"2140","text":"2134"},{"range":"2141","text":"2134"},"Update the dependencies array to be: [props.documentPrintInfo, props.branch, products, productLabels]",{"range":"2142","text":"2143"},{"range":"2144","text":"2097"},{"range":"2145","text":"2097"},"Update the dependencies array to be: [visible, productList, props]",{"range":"2146","text":"2147"},{"range":"2148","text":"2097"},"Update the dependencies array to be: [loadReports]",{"range":"2149","text":"2150"},"Update the dependencies array to be: [reportData?.items]",{"range":"2151","text":"2152"},{"range":"2153","text":"2152"},"Update the dependencies array to be: [loadProductList, visible]",{"range":"2154","text":"2155"},"Update the dependencies array to be: [loadServices, productList]",{"range":"2156","text":"2157"},"Update the dependencies array to be: [loadLedgers, props]",{"range":"2158","text":"2159"},{"range":"2160","text":"2097"},{"range":"2161","text":"2097"},"Update the dependencies array to be: [checkboxValues, loadData, tableSlice]",{"range":"2162","text":"2163"},"Update the dependencies array to be: [checkedChange, checkedIds, columns, dataFiltered, visible]",{"range":"2164","text":"2165"},{"range":"2166","text":"2097"},"Update the dependencies array to be: [Services, date, dateTo, loadData]",{"range":"2167","text":"2168"},"Update the dependencies array to be: [Services, loadDropdowns]",{"range":"2169","text":"2170"},{"range":"2171","text":"2168"},{"range":"2172","text":"2170"},"Update the dependencies array to be: [props, props.formFields, visible]",{"range":"2173","text":"2174"},{"range":"2175","text":"2097"},"removeEscape",{"range":"2176","text":"2177"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2178","text":"2179"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2180","text":"2177"},{"range":"2181","text":"2179"},"Update the dependencies array to be: [loadData]",{"range":"2182","text":"2183"},"Update the dependencies array to be: [rangeHandlerFilteredData.searchData, isChecked, switchHandler]",{"range":"2184","text":"2185"},[2716,2718],"[updateInfo]",[2778,2784],"[dispatch, menu]",[1197,1204],"[loadModules, roles]",[1087,1089],"[dispatch]",[1343,1345],[1932,1934],[688,708],"[dispatch, props?.breadcrumbs]",[8521,8531],"[dispatch, products, userComponentSlice.branches, widths]",[1751,1770],"[countLibis, countRonac, dataSource, props]",[2990,3022],"[userComponentSlice, dataSource, stop, eventSettings]",[3188,3224],"[eventSettings, schedulerComponentSlice.dataSource]",[4487,4489],"[dispatch, setLoading]",[5164,5166],[1731,1752],"[props?.id, products, loadData]",[639,655],"[collectionName, loadDropdowns]",[1440,1442],"[loadDropdowns]",[2628,2635],"[dispatch, total]",[4044,4046],"[loadProducts]",[2704,2743],"[props.subTotal, props?.id, dropdowns, tableSlice, calculateBalance]",[2821,2854],"[calculateBalance, formFields, others]",[775,777],"[props.list, props.name]",[745,747],"[branchValues, roleValues]",[3798,3834],"[branchValue, dateValue, handleFiltering, listOfProducts, schedulerComponentSlice.dataSource]",[1191,1226],"[loadDisplayedSetting, orderComponentSlice.orderViaField]",[1196,1211],"[fieldNames, props?.others]",[690,710],[722,734],"[documentId, loadUploads]",[1834,1869],[575,610],[962,1001],"[props.documentPrintInfo, props.branch, products, productLabels]",[784,786],[902,904],[2288,2310],"[visible, productList, props]",[987,989],[1384,1386],"[loadReports]",[706,708],"[reportData?.items]",[914,916],[1363,1372],"[loadProductList, visible]",[483,496],"[loadServices, productList]",[1197,1204],"[loadLedgers, props]",[997,999],[1835,1837],[3205,3217],"[checkboxValues, loadData, tableSlice]",[6601,6633],"[checkedChange, checkedIds, columns, dataFiltered, visible]",[713,715],[2117,2141],"[Services, date, dateTo, loadData]",[2193,2203],"[Services, loadDropdowns]",[2195,2219],[2271,2281],[1407,1434],"[props, props.formFields, visible]",[5172,5174],[105,106],"",[105,105],"\\",[130,131],[130,130],[239,241],"[loadData]",[2209,2257],"[rangeHandlerFilteredData.searchData, isChecked, switchHandler]"]